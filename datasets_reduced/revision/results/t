# Summary
This presents the evaluation of our approach in a way that is compatible to Chaaben et al.'s work.

## Threats to validity
We see a large homogenity in the data (a lot of EStringToStringMapEntries with key documentation)

## Differences between the original approach and our implementation and evaluation
- (-) We do not apply the approach to UML classdiagram
- (+) We apply the approach to Ecore diagrams in a way that is compatible to class diagrams (for add concept, add relationship comparison). Add relationship we evaluate many-fold. First, in Ecore add "EReference" can be interpreted, roughly speaking, to adding associations in class diagrams. There are some occurrences of this in our ``add concept'' evlaution. Furthermore, we can evaluate if the correct edge (source, target nodes, directions, and association name), is correct in scenarios where a Reference is added in Ecore.
- (-) We do not use a large random sample and rank
- (+) We use the simple change graph, wich already focuses on the changing part
- (-) We do not use GPT-3
- (+) We do use GPT-4

## Some words on the comparison
Chaaben et al.' approach is more comparable to a random retrieval of few-shot samples (with a fixed set of samples). 
Furthermore, our approach reflects the graph like nature of models while Chaaben et al.'s approach (for new concept recommendation) utilizes random pairs of concepts which not necesarily reflect related concepts in the original models.
In this sense, our approach is superior to Chaaben et al.'s approach and therefore shows a superior performance.
Anyway, this is not a shortcoming of Chaaben et al.'s approach and instead rather a consequence of their approach beeing an early initial experimentation with few-shot learning.
