{"directed": true, "multigraph": false, "graph": {}, 
  "nodes": [{
	 "id": "0", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_xVUnwt6xEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@795be0fd (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'createWrappedInnerContext','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'BInnerContext','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@234d42ac (expression: BInnerContext)','eContainingClass':'BExecutionContext'}}" 
},{
	 "id": "1", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_xVUnw96xEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2bbc41b6 (key: documentation, value: Creates a new inner context parented by a delegating context refering to a newly created outer context.\\nThe freshly created outer context is obtained by simply calling getOuterContext on the returned inner context.\\n\\nThis method is useful when a context is needed that keeps the input context's content visible (in the returned inner context), while at the same time providing a new outer context where values visible downstream can be placed.)'],'eModelElement':'createWrappedInnerContext'}}" 
},{
	 "id": "2", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_xVUnxN6xEei97MD7GK1RmA', 'key':'documentation','value':'Creates a new inner context parented by a delegating context refering to a newly created outer context.\\nThe freshly created outer context is obtained by simply calling getOuterContext on the returned '}}" 
},{
	 "id": "3", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_lTgQ4t6wEei97MD7GK1RmA', 'name':'BExecutionContext','ePackage':'b3backend','abstract':'true','interface':'false','eOperations':['loadFunctions','loadFunction','defineFunction','callFunction','getValue','getLValue','defineValue','defineFinalValue','defineVariableValue','defineFinalVariableValue','isFinal','isImmutable','getInvocationContext','...'],'eStructuralFeatures':['parentContext','valueMap','funcStore','effectiveConcerns','progressMonitor']}}" 
}], 
 "links": [{
	 "source": "0", 
	 "target": "1", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "1", 
	 "target": "2", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "3", 
	 "target": "0", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" 
}]}