{"directed": true, "multigraph": false, "graph": {}, 
  "nodes": [{
	 "id": "0", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWe5d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@42334856 (key: documentation, value: Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:\\n\\n  - true: The Boolean condition is satisfied.\\n\\n  - false: The Boolean condition is not satisfied.\\n\\n\\n\\nIt is used for Boolean attribute and Boolean expressions in the metamodel, such as OCL expression.)'],'eModelElement':'Boolean'}}" 
},{
	 "id": "1", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWe5t6tEei97MD7GK1RmA', 'key':'documentation','value':'Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:\\n\\n  - true: The Boolean condition is satisfied.'}}" 
},{
	 "id": "2", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWfZ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@39ce5669 (key: documentation, value: A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages. In addition a package can be merged with other packages.\\r\\nA package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages.\\n\\nIn addition a package can be merged with other packages.\\n\\n\\r\\nA Package can have one or more ProfileApplications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.\\r\\nPackage specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.)'],'eModelElement':'Package'}}" 
},{
	 "id": "3", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWfaN6tEei97MD7GK1RmA', 'key':'documentation','value':'A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either indiv'}}" 
},{
	 "id": "4", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWfxt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6127d9e8 (key: documentation, value: If there is no name, or one of the containing namespaces has no name, there is no qualified name.\\r\\n(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())\\n\\n  implies self.qualifiedName->isEmpty())'],'eModelElement':'has_no_qualified_name'}}" 
},{
	 "id": "5", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWfx96tEei97MD7GK1RmA', 'key':'documentation','value':'If there is no name, or one of the containing namespaces has no name, there is no qualified name.\\r\\n(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())\\n\\n  implie'}}" 
},{
	 "id": "6", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWgE96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ab8226 (key: documentation, value: VisibilityKind is an enumeration of the following literal values:\\n\\n  - public\\n\\n  - private\\n\\n  - protected\\n\\n  - package)'],'eModelElement':'VisibilityKind'}}" 
},{
	 "id": "7", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWgFN6tEei97MD7GK1RmA', 'key':'documentation','value':'VisibilityKind is an enumeration of the following literal values:\\n\\n  - public\\n\\n  - private\\n\\n  - protected\\n\\n  - package'}}" 
},{
	 "id": "8", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWgQd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1716b6f4 (key: documentation, value: A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.\\r\\nA namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.\\n\\n\\n\\nA namespace can own constraints. The constraint does not necessarily apply to the namespace itself, but may also apply to elements in the namespace.\\n\\n\\n\\nA namespace has the ability to import either individual members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.\\n\\n\\n\\n\\r\\nA namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.)'],'eModelElement':'Namespace'}}" 
},{
	 "id": "9", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWgQt6tEei97MD7GK1RmA', 'key':'documentation','value':'A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespac'}}" 
},{
	 "id": "10", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWgxd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1c3a152e (key: documentation, value: Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.\\n\\nConstraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to the element. Constraint contains an optional name, although they are commonly unnamed.\\r\\nConstraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.\\n\\nConstraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to that element. Constraint contains an optional name, although they are commonly unnamed.)'],'eModelElement':'Constraint'}}" 
},{
	 "id": "11", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWgxt6tEei97MD7GK1RmA', 'key':'documentation','value':'Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, oth'}}" 
},{
	 "id": "12", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWg896tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@19bdf2c8 (key: documentation, value: A condition that must be true when evaluated in order for the constraint to be satisfied.\\n\\n\\r\\nA condition that must be true when evaluated in order for the constraint to be satisfied.)'],'eModelElement':'specification'}}" 
},{
	 "id": "13", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWg9N6tEei97MD7GK1RmA', 'key':'documentation','value':'A condition that must be true when evaluated in order for the constraint to be satisfied.\\n\\n\\r\\nA condition that must be true when evaluated in order for the constraint to be satisfied.'}}" 
},{
	 "id": "14", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWg_96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5fb2bea4 (key: documentation, value: The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for ValueSpecification, the type must be conformant with the type of the specified parameterable element.\\n\\n\\r\\nresult = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type))'],'eModelElement':'isCompatibleWith'}}" 
},{
	 "id": "15", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWhAN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable elemen'}}" 
},{
	 "id": "16", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWhJN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7383f766 (key: documentation, value: A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass.\\r\\nA typed element is an element that has a type that serves as a constraint on the range of values the element can represent.\\n\\nTyped element is an abstract metaclass.\\n\\n)'],'eModelElement':'TypedElement'}}" 
},{
	 "id": "17", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWhJd6tEei97MD7GK1RmA', 'key':'documentation','value':'A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass.\\r\\nA typed element is an element that '}}" 
},{
	 "id": "18", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWhRN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@ac7a806 (key: documentation, value: An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More than one end of an association may have the same type.\\n\\n\\n\\nAn end property of an association that is owned by an end class or that is a navigable owned end of the association indicates that the association is navigable from the opposite ends, otherwise the association is not navigable from the opposite ends.)'],'eModelElement':'Association'}}" 
},{
	 "id": "19", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWhRd6tEei97MD7GK1RmA', 'key':'documentation','value':'An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More tha'}}" 
},{
	 "id": "20", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWhgN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5ec8889 (key: documentation, value: A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstract metaclass.\\r\\nClassifier is extended with the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.\\r\\nExtends a classifier with the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a UseCase.\\r\\nA classifier is a namespace whose members can include features. Classifier is an abstract metaclass.\\n\\nA classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to other classifiers. A classifier can specify a generalization hierarchy by referencing its general classifiers.\\n\\nA classifier is a redefinable element, meaning that it is possible to redefine nested classifiers.\\n\\n\\r\\nA classifier can be parameterized, exposed as a formal template parameter, and specified as an actual parameter in a binding of a template.)'],'eModelElement':'Classifier'}}" 
},{
	 "id": "21", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWhgd6tEei97MD7GK1RmA', 'key':'documentation','value':'A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstrac'}}" 
},{
	 "id": "22", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWh-d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3bc3db75 (key: documentation, value: If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.\\n\\n)'],'eModelElement':'isAbstract'}}" 
},{
	 "id": "23", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWh-t6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general '}}" 
},{
	 "id": "24", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWivN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7a558a34 (key: documentation, value: A ParameterableElement can be referenced by a TemplateParameter when defining a formal template parameter for a template. A ParameterableElement can be referenced by a TemplateParameterSubstitution when used as an actual parameter in a binding of a template.\\n\\nParameterableElement is an abstract metaclass.\\n\\n)'],'eModelElement':'ParameterableElement'}}" 
},{
	 "id": "25", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWivd6tEei97MD7GK1RmA', 'key':'documentation','value':'A ParameterableElement can be referenced by a TemplateParameter when defining a formal template parameter for a template. A ParameterableElement can be referenced by a TemplateParameterSubstitution wh'}}" 
},{
	 "id": "26", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWi6t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6aaf2019 (key: documentation, value: A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\n\\nA generalization can be designated as being a member of a particular generalization set.\\n\\n\\r\\nA generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\n\\n\\n\\n)'],'eModelElement':'Generalization'}}" 
},{
	 "id": "27", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWi696tEei97MD7GK1RmA', 'key':'documentation','value':'A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\n\\nA generalization can be designated as being a member of a particular generalizati'}}" 
},{
	 "id": "28", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftf0-d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3a41a1ec (key: documentation, value: Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet. For example, Person could have two Generalization relationships each with a different specific Classifier: Male Person and Female Person. This GeneralizationSet would be covering because every instance of Person would be an instance of Male Person or Female Person. In contrast, Person could have a three Generalization relationships involving three specific Classifiers: North American Person, Asian Person, and European Person. This GeneralizationSet would not be covering because there are instances of Person for which these three specific Classifiers do not apply. The first example, then, could be read: any Person would be specialized as either being a Male Person or a Female Personand nothing else; the second could be read: any Person would be specialized as being North American Person, Asian Person, European Person, or something else.)'],'eModelElement':'isCovering'}}" 
},{
	 "id": "29", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftf0-t6tEei97MD7GK1RmA', 'key':'documentation','value':'Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular '}}" 
},{
	 "id": "30", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWjPd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@465c14 (key: documentation, value: An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nAn expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\n\\nOne predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.\\n\\n\\r\\nProvides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result.)'],'eModelElement':'OpaqueExpression'}}" 
},{
	 "id": "31", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWjPt6tEei97MD7GK1RmA', 'key':'documentation','value':'An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nAn expression contains language-specific text strings '}}" 
},{
	 "id": "32", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWjS96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@34aa67fd (key: documentation, value: The behavior may only have return result parameters.\\r\\nself.behavior.notEmpty() implies\\n\\n  self.behavior.ownedParameters->select(p | p.direction<>#return)->isEmpty())'],'eModelElement':'only_return_result_parameters'}}" 
},{
	 "id": "33", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWjTN6tEei97MD7GK1RmA', 'key':'documentation','value':'The behavior may only have return result parameters.\\r\\nself.behavior.notEmpty() implies\\n\\n  self.behavior.ownedParameters->select(p | p.direction<>#return)->isEmpty()'}}" 
},{
	 "id": "34", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWjU96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@110f33f6 (key: documentation, value: The behavior must have exactly one return result parameter.\\r\\nself.behavior.notEmpty() implies\\n\\n  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1)'],'eModelElement':'one_return_result_parameter'}}" 
},{
	 "id": "35", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWjVN6tEei97MD7GK1RmA', 'key':'documentation','value':'The behavior must have exactly one return result parameter.\\r\\nself.behavior.notEmpty() implies\\n\\n  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1'}}" 
},{
	 "id": "36", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWjdd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c330e3 (key: documentation, value: Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order.\\r\\nSpecifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.\\n\\n)'],'eModelElement':'language'}}" 
},{
	 "id": "37", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWjdt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression bod'}}" 
},{
	 "id": "38", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkOd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@16d02419 (key: documentation, value: A ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.\\r\\nConnectableElement is the connectable element of a ConnectableElementTemplateParameter.\\n\\nThe ConnectableElements attached as role to each ConnectorEnd owned by a Connector must be roles of the classifier that owned the Connector, or they must be ports of such roles. \\n\\n)'],'eModelElement':'ConnectableElement'}}" 
},{
	 "id": "39", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkOt6tEei97MD7GK1RmA', 'key':'documentation','value':'A ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of l'}}" 
},{
	 "id": "40", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkaN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@48806787 (key: documentation, value: A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.\\n\\n)'],'eModelElement':'definingEnd'}}" 
},{
	 "id": "41", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkad6tEei97MD7GK1RmA', 'key':'documentation','value':'A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end '}}" 
},{
	 "id": "42", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkbt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@573aa109 (key: documentation, value: The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.\\n\\n)'],'eModelElement':'role'}}" 
},{
	 "id": "43", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkb96tEei97MD7GK1RmA', 'key':'documentation','value':'The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifi'}}" 
},{
	 "id": "44", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkcd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f07b23b (key: documentation, value: Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association.\\n\\n\\n\\nProperty is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.\\r\\nA property is a structural feature.\\n\\nA property related to a classifier by ownedAttribute represents an attribute, and it may also represent an association end. It relates an instance of the class to a value or collection of values of the type of the attribute.\\n\\nA property related to an Association by memberEnd or its specializations represents an end of the association. The type of property is the type of the end of the association.\\n\\n\\r\\nA property represents a set of instances that are owned by a containing classifier instance.\\r\\nIn the metamodel, Property is a specialization of DeploymentTarget.\\r\\nProperty represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. Property is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.\\n\\n\\r\\nProperty specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.)'],'eModelElement':'Property'}}" 
},{
	 "id": "45", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkct6tEei97MD7GK1RmA', 'key':'documentation','value':'Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to'}}" 
},{
	 "id": "46", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkfN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@ebaa127 (key: documentation, value: The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for properties, the type must be conformant with the type of the specified parameterable element.\\n\\n\\r\\nresult = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type))'],'eModelElement':'isCompatibleWith'}}" 
},{
	 "id": "47", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkfd6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable elemen'}}" 
},{
	 "id": "48", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkl96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7471b0e3 (key: documentation, value: A redefined property must be inherited from a more general classifier containing the redefining property.\\r\\nif (redefinedProperty->notEmpty()) then\\n\\n  (redefinitionContext->notEmpty() and\\n\\n      redefinedProperty->forAll(rp|\\n\\n        ((redefinitionContext->collect(fc|\\n\\n          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp)))'],'eModelElement':'redefined_property_inherited'}}" 
},{
	 "id": "49", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWkmN6tEei97MD7GK1RmA', 'key':'documentation','value':'A redefined property must be inherited from a more general classifier containing the redefining property.\\r\\nif (redefinedProperty->notEmpty()) then\\n\\n  (redefinitionContext->notEmpty() and\\n\\n      redefi'}}" 
},{
	 "id": "50", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWkz96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@72e5bc3f (key: documentation, value: A binding of a property template parameter representing an attribute must be to an attribute.\\r\\n(isAttribute(self) and (templateParameterSubstitution->notEmpty())\\n\\n  implies (templateParameterSubstitution->forAll(ts | isAttribute(ts.formal))))'],'eModelElement':'binding_to_attribute'}}" 
},{
	 "id": "51", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWk0N6tEei97MD7GK1RmA', 'key':'documentation','value':'A binding of a property template parameter representing an attribute must be to an attribute.\\r\\n(isAttribute(self) and (templateParameterSubstitution->notEmpty())\\n\\n  implies (templateParameterSubstitut'}}" 
},{
	 "id": "52", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWlCt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@305b27c (key: documentation, value: The DataType that owns this Operation.\\r\\nThe DataType that owns this Property.\\n\\n)'],'eModelElement':'datatype'}}" 
},{
	 "id": "53", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWlC96tEei97MD7GK1RmA', 'key':'documentation','value':'The DataType that owns this Operation.\\r\\nThe DataType that owns this Property.\\n\\n'}}" 
},{
	 "id": "54", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWlXt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@504c522a (key: documentation, value: The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).\\r\\nself.deployment->forAll (d | d.location.deployedElements->forAll (de |\\n\\n  de.oclIsKindOf(Component))))'],'eModelElement':'deployed_elements'}}" 
},{
	 "id": "55", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWlX96tEei97MD7GK1RmA', 'key':'documentation','value':'The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).\\r\\nself.deployment->'}}" 
},{
	 "id": "56", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWlh96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2c611f1a (key: documentation, value: The Artifacts that are defined (nested) within the Artifact.\\n\\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\\n\\n)'],'eModelElement':'nestedArtifact'}}" 
},{
	 "id": "57", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWliN6tEei97MD7GK1RmA', 'key':'documentation','value':'The Artifacts that are defined (nested) within the Artifact.\\n\\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\\n\\n'}}" 
},{
	 "id": "58", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWlk96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@422c02b5 (key: documentation, value: The attributes or association ends defined for the Artifact.\\n\\nThe association is a specialization of the ownedMember association.\\n\\n)'],'eModelElement':'ownedAttribute'}}" 
},{
	 "id": "59", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWllN6tEei97MD7GK1RmA', 'key':'documentation','value':'The attributes or association ends defined for the Artifact.\\n\\nThe association is a specialization of the ownedMember association.\\n\\n'}}" 
},{
	 "id": "60", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWlnt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7d4cdc43 (key: documentation, value: An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.\\r\\nAn expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\n\\nOne predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.\\n\\n\\r\\nAn operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.\\r\\nAn operation may invoke both the execution of method behaviors as well as other behavioral responses.\\r\\nOperation specializes TemplateableElement in order to support specification of template operations and bound operations.)'],'eModelElement':'Operation'}}" 
},{
	 "id": "61", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWln96tEei97MD7GK1RmA', 'key':'documentation','value':'An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.\\r\\nAn expression contains language-speci'}}" 
},{
	 "id": "62", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWl196tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f3418c9 (key: documentation, value: If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\r\\nIf this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\n\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif)'],'eModelElement':'isUnique'}}" 
},{
	 "id": "63", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWl2N6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\r\\nIf this operation has a return parameter, isUnique equals the value of '}}" 
},{
	 "id": "64", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWl3N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6f984671 (key: documentation, value: If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\r\\nIf this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\n\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif)'],'eModelElement':'lowerBound'}}" 
},{
	 "id": "65", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWl3d6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\r\\nIf this operation has a return parameter, lower equals the value of lower'}}" 
},{
	 "id": "66", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWl4d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2df70bc9 (key: documentation, value: If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\r\\nIf this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\n\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif)'],'eModelElement':'upperBound'}}" 
},{
	 "id": "67", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWl4t6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\r\\nIf this operation has a return parameter, upper equals the value of upper'}}" 
},{
	 "id": "68", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWmHt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6f62d7da (key: documentation, value: A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.\\r\\nA behavioral feature specifies that an instance of a classifier will respond to a designated request by invoking a behavior.\\n\\nBehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.\\n\\n\\r\\nA behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.\\r\\nThe concept of BehavioralFeature is extended to own ParameterSets.)'],'eModelElement':'BehavioralFeature'}}" 
},{
	 "id": "69", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWmH96tEei97MD7GK1RmA', 'key':'documentation','value':'A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of beh'}}" 
},{
	 "id": "70", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWmQd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@25ab1803 (key: documentation, value: Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\\n\\n\\n\\nA classifier behavior is always a definition of behavior and not an illustration. It describes the sequence of state changes an instance of a classifier may undergo in the course of its lifetime. Its precise semantics depends on the kind of classifier. For example, the classifier behavior of a collaboration represents emergent behavior of all the parts, whereas the classifier behavior of a class is just the behavior of instances of the class separated from the behaviors of any of its parts.\\n\\nWhen a behavior is associated as the method of a behavioral feature, it defines the implementation of that feature; i.e., the computation that generates the effects of the behavioral feature.\\n\\n\\n\\nAs a classifier, a behavior can be specialized. Instantiating a behavior is referred to as \\\\'invoking\\\\' the behavior, an instantiated behavior is also called a behavior \\\\'execution.\\\\' A behavior may be invoked directly or its invocation may be the result of invoking the behavioral feature that specifies this behavior. A behavior can also be instantiated as an object in virtue of it being a class. The specification of a behavior can take a number of forms, as described in the subclasses of Behavior. Behavior is an abstract metaclass factoring out the commonalities of these different specification mechanisms.\\n\\n\\n\\nWhen a behavior is invoked, its execution receives a set of input values that are used to affect the course of execution and as a result of its execution it produces a set of output values which are returned, as specified by its parameters. The observable effects of a behavior execution may include changes of values of various objects involved in the execution, the creation and destruction of objects, generation of communications between objects, as well as an explicit set of output values.\\n\\n\\r\\nThe concept of Behavior is extended to own ParameterSets.)'],'eModelElement':'Behavior'}}" 
},{
	 "id": "71", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWmQt6tEei97MD7GK1RmA', 'key':'documentation','value':'Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective ill'}}" 
},{
	 "id": "72", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWmbN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@ec931ea (key: documentation, value: References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.\\n\\n)'],'eModelElement':'ownedParameter'}}" 
},{
	 "id": "73", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWmbd6tEei97MD7GK1RmA', 'key':'documentation','value':'References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavio'}}" 
},{
	 "id": "74", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWm3N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1371f5a3 (key: documentation, value: An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.\\n\\nSince interfaces are declarations, they are not instantiable. Instead, an interface specification is implemented by an instance of an instantiable classifier, which means that the instantiable classifier presents a public facade that conforms to the interface specification. Note that a given classifier may implement more than one interface and that an interface may be implemented by a number of different classifiers.\\n\\n\\r\\nAdds the capability for interfaces to include receptions (in addition to operations).\\r\\nSince an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface.)'],'eModelElement':'Interface'}}" 
},{
	 "id": "75", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWm3d6tEei97MD7GK1RmA', 'key':'documentation','value':'An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes t'}}" 
},{
	 "id": "76", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWnVN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@de6d74a (key: documentation, value: A state machine owns one or more regions, which in turn own vertices and transitions.\\n\\nThe behaviored classifier context owning a state machine defines which signal and call triggers are defined for the state machine, and which attributes and operations are available in activities of the state machine. Signal triggers and call triggers for the state machine are defined according to the receptions and operations of this classifier.\\n\\n\\n\\nAs a kind of behavior, a state machine may have an associated behavioral feature (specification) and be the method of this behavioral feature. In this case the state machine specifies the behavior of this behavioral feature. The parameters of the state machine in this case match the parameters of the behavioral feature and provide the means for accessing (within the state machine) the behavioral feature parameters.\\n\\n\\n\\nA state machine without a context classifier may use triggers that are independent of receptions or operations of a classifier, i.e. either just signal triggers or call triggers based upon operation template parameters of the (parameterized) statemachine.\\n\\n)'],'eModelElement':'StateMachine'}}" 
},{
	 "id": "77", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWnVd6tEei97MD7GK1RmA', 'key':'documentation','value':'A state machine owns one or more regions, which in turn own vertices and transitions.\\n\\nThe behaviored classifier context owning a state machine defines which signal and call triggers are defined for t'}}" 
},{
	 "id": "78", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWnht6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a039949 (key: documentation, value: The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean\\n\\n\\r\\nresult = if (s2 = s1) then\\ntrue\\nelse if (s1.container->isEmpty) then\\ntrue\\nelse if (s2.container->isEmpty) then\\nfalse\\nelse (ancestor (s1, s2.container)))'],'eModelElement':'ancestor'}}" 
},{
	 "id": "79", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWnh96tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean\\n\\n\\r\\nresult = if (s2 = s1) then\\ntrue\\nelse if (s1.containe'}}" 
},{
	 "id": "80", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWoEt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@44164d64 (key: documentation, value: The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transition: A redefining transition redefines all properties of the corresponding redefined transition, except the source state and the trigger.\\r\\nresult = (redefinee.oclIsKindOf(Transition) and\\n\\n  let trans: Transition = redefinee.oclAsType(Transition) in\\n\\n    (source() = trans.source() and trigger() = tran.trigger())\\r\\nredefinee.isRedefinitionContextValid(self))'],'eModelElement':'isConsistentWith'}}" 
},{
	 "id": "81", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWoE96tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transi'}}" 
},{
	 "id": "82", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgcL96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@30d95735 (key: documentation, value: An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype create.\\r\\nself.source.oclIsKindOf(Pseudostate) implies\\n(self.source.oclAsType(Pseudostate).kind = #initial) implies\\n(self.source.container = self.stateMachine.top) implies\\n((self.trigger->isEmpty) or\\n(self.trigger.stereotype.name = 'create'))\\n)'],'eModelElement':'initial_transition'}}" 
},{
	 "id": "83", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgcMN6tEei97MD7GK1RmA', 'key':'documentation','value':'An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype create.\\r\\nself.source.oclIsKindOf(Pseudostate) implies\\n(self.source'}}" 
},{
	 "id": "84", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWoTd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1427d64e (key: documentation, value: In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.\\n\\n\\r\\ntrue)'],'eModelElement':'signatures_compatible'}}" 
},{
	 "id": "85", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWoTt6tEei97MD7GK1RmA', 'key':'documentation','value':'In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "86", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgcZd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@38aa3540 (key: documentation, value: TransitionKind is an enumeration of the following literal values:\\n external\\n internal\\n local\\n\\r\\nkind=#local implies owner.source.isComposite\\r\\nkind=#external implies owner.source.isComposite)'],'eModelElement':'TransitionKind'}}" 
},{
	 "id": "87", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgcZt6tEei97MD7GK1RmA', 'key':'documentation','value':'TransitionKind is an enumeration of the following literal values:\\n external\\n internal\\n local\\n\\r\\nkind=#local implies owner.source.isComposite\\r\\nkind=#external implies owner.source.isComposite'}}" 
},{
	 "id": "88", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWold6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1ed0c96f (key: documentation, value: Ports represent interaction points between a classifier and its environment. The interfaces associated with a port specify the nature of the interactions that may occur over a port. The required interfaces of a port characterize the requests which may be made from the classifier to its environment through this port. The provided interfaces of a port characterize requests to the classifier that its environment may make through this port.\\n\\n\\n\\nA port has the ability to specify that any requests arriving at this port are handled by the behavior of the instance of the owning classifier, rather than being forwarded to any contained instances, if any.\\n\\n\\r\\nPort is defined as a specialization of the general Port, adding an association to a protocol state machine.)'],'eModelElement':'Port'}}" 
},{
	 "id": "89", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWolt6tEei97MD7GK1RmA', 'key':'documentation','value':'Ports represent interaction points between a classifier and its environment. The interfaces associated with a port specify the nature of the interactions that may occur over a port. The required inter'}}" 
},{
	 "id": "90", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWox96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@520e1f64 (key: documentation, value: References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.\\n\\n)'],'eModelElement':'provided'}}" 
},{
	 "id": "91", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWoyN6tEei97MD7GK1RmA', 'key':'documentation','value':'References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its '}}" 
},{
	 "id": "92", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWozd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4283222c (key: documentation, value: A state models a situation during which some (usually implicit) invariant condition holds. The invariant may represent a static situation such as an object waiting for some external event to occur. However, it can also model dynamic conditions such as the process of performing some behavior (i.e., the model element under consideration enters the state when the behavior commences and leaves it as soon as the behavior is completed). The following kinds of states are distinguished:\\n\\no Simple state,\\n\\no composite state, and\\n\\no submachine state.\\n\\nA composite state is either a simple composite state (with just one region) or an orthogonal state (with more than one region).\\n\\n\\n\\nSimple state\\n\\nA simple state is a state that does not have substates, i.e. it has no regions and it has no submachine state machine.\\n\\n\\n\\nComposite state\\n\\nA composite state either contains one region or is decomposed into two or more orthogonal regions. Each region has a set of mutually exclusive disjoint subvertices and a set of transitions. A given state may only be decomposed in one of these two ways. \\n\\nAny state enclosed within a region of a composite state is called a substate of that composite state. It is called a direct substate when it is not contained by any other state; otherwise it is referred to as a indirect substate. \\n\\nEach region of a composite state may have an initial pseudostate and a final state. A transition to the enclosing state represents a transition to the initial pseudostate in each region. A newly-created object takes it's topmost default transitions, originating from the topmost initial pseudostates of each region.\\n\\n\\n\\nA transition to a final state represents the completion of behavior in the enclosing region. Completion of behavior in all orthogonal regions represents completion of behavior by the enclosing state and triggers a completion event on the enclosing state. Completion of the topmost regions of an object corresponds to its termination.\\n\\n\\n\\nAn entry pseudostate is used to join an external transition terminating on that entry point to an internal transition emanating from that entry point. An exit pseudostate is used to join an internal transition terminating on that exit point to an external transition emanating from that exit point. The main purpose of such entry and exit points is to execute the state entry and exit actions respectively in between the actions that are associated with the joined transitions.\\n\\n\\n\\nSemantic variation point (default entry rule)\\n\\nIf a transition terminates on an enclosing state and the enclosed regions do not have an initial pseudostate, the interpretation of this situation is a semantic variation point. In some interpretations, this is considered an ill-formed model. That is, in those cases the initial pseudostate is mandatory. \\n\\nAn alternative interpretation allows this situation and it means that, when such a transition is taken, the state machine stays in the composite state, without entering any of the regions or their substates.\\n\\n\\n\\nSubmachine state\\n\\nA submachine state specifies the insertion of the specification of a submachine state machine. The state machine that contains the submachine state is called the containing state machine. The same state machine may be a submachine more than once in the context of a single containing state machine.\\n\\n\\n\\nA submachine state is semantically equivalent to a composite state. The regions of the submachine state machine are the regions of the composite state. The entry, exit and behavior actions, and internal transitions, are defined as part of the state. Submachine state is a decomposition mechanism that allows factoring of common behaviors and their reuse.\\n\\nTransitions in the containing state machine can have entry/exit points of the inserted state machine as targets/sources.\\n\\n\\r\\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.)'],'eModelElement':'State'}}" 
},{
	 "id": "93", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWozt6tEei97MD7GK1RmA', 'key':'documentation','value':'A state models a situation during which some (usually implicit) invariant condition holds. The invariant may represent a static situation such as an object waiting for some external event to occur. Ho'}}" 
},{
	 "id": "94", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWo6t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@d71f103 (key: documentation, value: The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.\\r\\nself.isSubmachineState implies (self.connection->forAll (cp |\\n\\ncp.entry->forAll (p | p.statemachine = self.submachine) and\\n\\ncp.exit->forAll (p | p.statemachine = self.submachine))))'],'eModelElement':'destinations_or_sources_of_transitions'}}" 
},{
	 "id": "95", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWo696tEei97MD7GK1RmA', 'key':'documentation','value':'The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.\\r\\nself.isSubmachineS'}}" 
},{
	 "id": "96", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWpRd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@548b6271 (key: documentation, value: Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.\\n\\n)'],'eModelElement':'stateInvariant'}}" 
},{
	 "id": "97", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWpRt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions,'}}" 
},{
	 "id": "98", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWpSd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@623a8160 (key: documentation, value: An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\\n\\n)'],'eModelElement':'entry'}}" 
},{
	 "id": "99", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWpSt6tEei97MD7GK1RmA', 'key':'documentation','value':'An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any int'}}" 
},{
	 "id": "100", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWpVd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@39d9b99b (key: documentation, value: A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.\\n\\n)'],'eModelElement':'deferrableTrigger'}}" 
},{
	 "id": "101", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWpVt6tEei97MD7GK1RmA', 'key':'documentation','value':'A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reache'}}" 
},{
	 "id": "102", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWpvN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@24bcb62 (key: documentation, value: The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.\\r\\n(self.kind = #initial) implies (self.outgoing.guard->isEmpty()\\n\\n  and self.outgoing.trigger->isEmpty()))'],'eModelElement':'outgoing_from_initial'}}" 
},{
	 "id": "103", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWpvd6tEei97MD7GK1RmA', 'key':'documentation','value':'The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.\\r\\n(self.kind = #initial) implies (self.outgoing.guard->isEmpty()\\n\\n  and self.outgoing.trigger->isEmpty'}}" 
},{
	 "id": "104", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgdy96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@34cd1975 (key: documentation, value: PseudoStateKind is an enumeration of the following literal values:\\n initial\\n deepHistory\\n shallowHistory\\n join\\n fork\\n junction\\n choice\\n entryPoint\\n exitPoint\\n terminate\\n)'],'eModelElement':'PseudostateKind'}}" 
},{
	 "id": "105", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgdzN6tEei97MD7GK1RmA', 'key':'documentation','value':'PseudoStateKind is an enumeration of the following literal values:\\n initial\\n deepHistory\\n shallowHistory\\n join\\n fork\\n junction\\n choice\\n entryPoint\\n exitPoint\\n terminate\\n'}}" 
},{
	 "id": "106", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWp3t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@18952335 (key: documentation, value: Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\\n\\n(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers.)'],'eModelElement':'fork'}}" 
},{
	 "id": "107", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWp396tEei97MD7GK1RmA', 'key':'documentation','value':'Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\\n\\n(i.e. vertices in different regions of a composite state). The segments outg'}}" 
},{
	 "id": "108", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgd3d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2b96a3db (key: documentation, value: Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted else may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below).)'],'eModelElement':'junction'}}" 
},{
	 "id": "109", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgd3t6tEei97MD7GK1RmA', 'key':'documentation','value':'Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be u'}}" 
},{
	 "id": "110", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWp8N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@49aed413 (key: documentation, value: Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines.\\n\\n\\n\\nProtocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine.\\n\\n\\n\\nA protocol state machine is owned by a classifier. The classifiers owning a general state machine and an associated specific state machine are generally also connected by a generalization or a realization link.\\n\\n)'],'eModelElement':'ProtocolConformance'}}" 
},{
	 "id": "111", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWp8d6tEei97MD7GK1RmA', 'key':'documentation','value':'Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines.\\n\\n\\n\\nProtocol conformance declares that the specific protocol state machine specif'}}" 
},{
	 "id": "112", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWqaN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3749df27 (key: documentation, value: A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.\\n\\nThe types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced.)'],'eModelElement':'redefinedConnector'}}" 
},{
	 "id": "113", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWqad6tEei97MD7GK1RmA', 'key':'documentation','value':'A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.\\n\\nThe types of the connector e'}}" 
},{
	 "id": "114", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fthAm96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@fc2fdb2 (key: documentation, value: ConnectorKind is an enumeration of the following literal values:\\n assembly Indicates that the connector is an assembly connector.\\n delegation Indicates that the connector is a delegation connector.\\n)'],'eModelElement':'ConnectorKind'}}" 
},{
	 "id": "115", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fthAnN6tEei97MD7GK1RmA', 'key':'documentation','value':'ConnectorKind is an enumeration of the following literal values:\\n assembly Indicates that the connector is an assembly connector.\\n delegation Indicates that the connector is a delegation connector.\\n'}}" 
},{
	 "id": "116", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWqt96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@63c50fd (key: documentation, value: The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default\\n\\nlower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.\\r\\nresult = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif)'],'eModelElement':'lowerBound'}}" 
},{
	 "id": "117", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWquN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default\\n\\nlower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.'}}" 
},{
	 "id": "118", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrBN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@23c7c6cc (key: documentation, value: This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\\n\\n\\n\\nIn addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example \\\\'SVG\\\\' could instead be expressed as \\\\'MIME: image/svg+xml\\\\'.)'],'eModelElement':'format'}}" 
},{
	 "id": "119", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrBd6tEei97MD7GK1RmA', 'key':'documentation','value':'This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\\n\\n\\n\\nIn addition the prefix 'MIME:'}}" 
},{
	 "id": "120", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrB96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5fe92861 (key: documentation, value: A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.\\n\\n\\n\\nA profile introduces several constraints, or restrictions, on ordinary metamodeling through the use of the metaclasses defined in this package.\\n\\n\\n\\nA profile is a restricted form of a metamodel that must always be related to a reference metamodel, such as UML, as described below. A profile cannot be used without its reference metamodel, and defines a limited capability to extendmetaclasses of the reference metamodel. The extensions are defined as stereotypes that apply to existing metaclasses.)'],'eModelElement':'Profile'}}" 
},{
	 "id": "121", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrCN6tEei97MD7GK1RmA', 'key':'documentation','value':'A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.\\n\\n\\n\\nA profile introduces several constraints'}}" 
},{
	 "id": "122", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrCt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@612e60e0 (key: documentation, value: An element imported as a metaclassReference is not specialized or generalized in a Profile.\\r\\nself.metaclassReference.importedElement->\\n\\n  select(c | c.oclIsKindOf(Classifier) and\\n\\n    (c.generalization.namespace = self or\\n\\n      (c.specialization.namespace = self) )->isEmpty())'],'eModelElement':'metaclass_reference_not_specialized'}}" 
},{
	 "id": "123", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrC96tEei97MD7GK1RmA', 'key':'documentation','value':'An element imported as a metaclassReference is not specialized or generalized in a Profile.\\r\\nself.metaclassReference.importedElement->\\n\\n  select(c | c.oclIsKindOf(Classifier) and\\n\\n    (c.generalizatio'}}" 
},{
	 "id": "124", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrEt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@29caf634 (key: documentation, value: All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.\\r\\nself.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages())->\\n\\n  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty())'],'eModelElement':'references_same_metamodel'}}" 
},{
	 "id": "125", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrE96tEei97MD7GK1RmA', 'key':'documentation','value':'All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.\\r\\nself.metamodelReference.importedPackage.elementImport.importedElem'}}" 
},{
	 "id": "126", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrYd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6bd2f814 (key: documentation, value: CallConcurrencyKind is an enumeration with the following literals:\\n\\n sequential No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once.\\n\\n guarded Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks.\\n\\n concurrent Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently.\\n\\n\\n\\n)'],'eModelElement':'CallConcurrencyKind'}}" 
},{
	 "id": "127", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrYt6tEei97MD7GK1RmA', 'key':'documentation','value':'CallConcurrencyKind is an enumeration with the following literals:\\n\\n sequential No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. I'}}" 
},{
	 "id": "128", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrbd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@78ca161c (key: documentation, value: A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\n\\n\\n\\nA typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.\\r\\nA data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\n\\nA typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.\\n\\n)'],'eModelElement':'DataType'}}" 
},{
	 "id": "129", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrbt6tEei97MD7GK1RmA', 'key':'documentation','value':'A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\n\\n\\n\\nA typical use of data types would be to'}}" 
},{
	 "id": "130", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgeBt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@34397bb8 (key: documentation, value: AggregationKind is an enumeration of the following literal values:\\n none Indicates that the property has no aggregation.\\n shared Indicates that the property has a shared aggregation.\\n composite Indicates that the property is aggregated compositely, i.e., the composite object has\\nresponsibility for the existence and storage of the composed objects (parts).\\n)'],'eModelElement':'AggregationKind'}}" 
},{
	 "id": "131", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgeB96tEei97MD7GK1RmA', 'key':'documentation','value':'AggregationKind is an enumeration of the following literal values:\\n none Indicates that the property has no aggregation.\\n shared Indicates that the property has a shared aggregation.\\n composite Ind'}}" 
},{
	 "id": "132", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrrN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a616db3 (key: documentation, value: ParameterDirectionKind is an enumeration of the following literal values:\\n\\n  - in Indicates that parameter values are passed into the behavioral element by the caller.\\n\\n  - inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.\\n\\n  - out Indicates that parameter values are passed from a behavioral element out to the caller.\\n\\n  - return Indicates that parameter values are passed as return values from a behavioral element back to the caller.\\n\\n\\r\\nParameterDirectionKind is an enumeration of the following literal values:\\n in Indicates that parameter values are passed into the behavioral element by the caller.\\n inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.\\n out Indicates that parameter values are passed from a behavioral element out to the caller.\\n return Indicates that parameter values are passed as return values from a behavioral element back to the caller.\\n)'],'eModelElement':'ParameterDirectionKind'}}" 
},{
	 "id": "133", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrrd6tEei97MD7GK1RmA', 'key':'documentation','value':'ParameterDirectionKind is an enumeration of the following literal values:\\n\\n  - in Indicates that parameter values are passed into the behavioral element by the caller.\\n\\n  - inout Indicates that parame'}}" 
},{
	 "id": "134", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWrwt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2fbd83ab (key: documentation, value: A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.\\n\\n\\n\\nAssociated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration.\\n\\n)'],'eModelElement':'CollaborationUse'}}" 
},{
	 "id": "135", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWrw96tEei97MD7GK1RmA', 'key':'documentation','value':'A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a colla'}}" 
},{
	 "id": "136", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWr4N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3b93b32f (key: documentation, value: A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).\\n\\n)'],'eModelElement':'roleBinding'}}" 
},{
	 "id": "137", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWr4d6tEei97MD7GK1RmA', 'key':'documentation','value':'A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in'}}" 
},{
	 "id": "138", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWr5N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3642833b (key: documentation, value: A collaboration is represented as a kind of classifier and defines a set of cooperating entities to be played by instances (its roles), as well as a set of connectors that define communication paths between the participating instances. The cooperating entities are the properties of the collaboration.\\n\\n\\n\\nA collaboration specifies a view (or projection) of a set of cooperating classifiers. It describes the required links between instances that play the roles of the collaboration, as well as the features required of the classifiers that specify the participating instances. Several collaborations may describe different projections of the same set of classifiers.\\n\\n)'],'eModelElement':'Collaboration'}}" 
},{
	 "id": "139", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWr5d6tEei97MD7GK1RmA', 'key':'documentation','value':'A collaboration is represented as a kind of classifier and defines a set of cooperating entities to be played by instances (its roles), as well as a set of connectors that define communication paths b'}}" 
},{
	 "id": "140", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWr696tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@c8620b2 (key: documentation, value: A UseCase is a kind of behaviored classifier that represents a declaration of an offered behavior. Each use case specifies some behavior, possibly including variants, that the subject can perform in collaboration with one or more actors. Use cases define the offered behavior of the subject without reference to its internal structure. These behaviors, involving\\n\\ninteractions between the actor and the subject, may result in changes to the state of the subject and communications with its environment. A use case can include possible variations of its basic behavior, including exceptional behavior and error handling.\\n\\n\\n\\nThe subject of a use case could be a physical system or any other element that may have behavior, such as a component, subsystem or class. Each use case specifies a unit of useful functionality that the subject provides to its users, i.e., a specific way of interacting with the subject. This functionality, which is initiated by an actor, must always be completed for the use case to complete. It is deemed complete if, after its execution, the subject will be in a state in which no further inputs or actions are expected and the use case can be initiated again or in an error state.\\n\\n\\n\\nUse cases can be used both for specification of the (external) requirements on a subject and for the specification of the functionality offered by a subject. Moreover, the use cases also state the requirements the specified subject poses on its environment by defining how they should interact with the subject so that it will be able to perform its services.\\n\\n\\n\\nThe behavior of a use case can be described by a specification that is some kind of Behavior (through its ownedBehavior relationship), such as interactions, activities, and state machines, or by pre-conditions and post-conditions as well as by natural language text where appropriate. It may also be described indirectly through a Collaboration that uses the use case and its actors as the classifiers that type its parts. Which of these techniques to use depends on the nature of the use case behavior as well as on the intended reader. These descriptions can be combined.\\n\\n)'],'eModelElement':'UseCase'}}" 
},{
	 "id": "141", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWr7N6tEei97MD7GK1RmA', 'key':'documentation','value':'A UseCase is a kind of behaviored classifier that represents a declaration of an offered behavior. Each use case specifies some behavior, possibly including variants, that the subject can perform in c'}}" 
},{
	 "id": "142", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsIt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5289336d (key: documentation, value: Note that the included use case is not optional, and is always required for the  including use case to execute correctly.\\n\\n\\n\\n)'],'eModelElement':'Include'}}" 
},{
	 "id": "143", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsI96tEei97MD7GK1RmA', 'key':'documentation','value':'Note that the included use case is not optional, and is always required for the  including use case to execute correctly.\\n\\n\\n\\n'}}" 
},{
	 "id": "144", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsJd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@13fbaa62 (key: documentation, value: References the use case that is to be included.\\n\\n)'],'eModelElement':'addition'}}" 
},{
	 "id": "145", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsJt6tEei97MD7GK1RmA', 'key':'documentation','value':'References the use case that is to be included.\\n\\n'}}" 
},{
	 "id": "146", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsLd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@66169171 (key: documentation, value: This relationship specifies that the behavior of a use case may be extended by the behavior of another (usually supplementary) use case. The extension takes place at one or more specific extension points defined in the extended use case. Note, however, that the extended use case is defined independently of the extending use case and is meaningful independently of the extending use case. On the other hand, the extending use case typically defines behavior that may not necessarily be meaningful by itself. Instead, the extending use case defines a set of modular behavior increments that augment an execution of the extended use case under specific conditions.\\n\\n\\n\\nNote that the same extending use case can extend more than one use case. Furthermore, an extending use case may itself be extended.\\n\\n\\n\\nIt is a kind of DirectedRelationship, such that the source is the extending use case and the destination is the extended use case. It is also a kind of NamedElement so that it can have a name in the context of its owning use case. The extend relationship itself is owned by the extending use case.\\n\\n)'],'eModelElement':'Extend'}}" 
},{
	 "id": "147", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsLt6tEei97MD7GK1RmA', 'key':'documentation','value':'This relationship specifies that the behavior of a use case may be extended by the behavior of another (usually supplementary) use case. The extension takes place at one or more specific extension poi'}}" 
},{
	 "id": "148", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsMN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@34d18dbc (key: documentation, value: The extension points referenced by the extend relationship must belong to the use case that is being extended.\\n\\n\\n\\n\\r\\nextensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp)))'],'eModelElement':'extension_points'}}" 
},{
	 "id": "149", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsMd6tEei97MD7GK1RmA', 'key':'documentation','value':'The extension points referenced by the extend relationship must belong to the use case that is being extended.\\n\\n\\n\\n\\r\\nextensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))'}}" 
},{
	 "id": "150", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsPN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@329438cc (key: documentation, value: References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.\\n\\n)'],'eModelElement':'condition'}}" 
},{
	 "id": "151", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsPd6tEei97MD7GK1RmA', 'key':'documentation','value':'References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is uncondi'}}" 
},{
	 "id": "152", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsQN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@28d2c2da (key: documentation, value: An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)\\n\\n)'],'eModelElement':'extensionLocation'}}" 
},{
	 "id": "153", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsQd6tEei97MD7GK1RmA', 'key':'documentation','value':'An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the ext'}}" 
},{
	 "id": "154", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWskt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@9e8f3ec (key: documentation, value: The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.\\n\\n\\r\\nresult = if subExpression->notEmpty()\\nthen subExpression->iterate(se; stringValue = | stringValue.concat(se.stringValue()))\\nelse operand->iterate()(op; stringValue =  | stringValue.concat(op.value)))'],'eModelElement':'stringValue'}}" 
},{
	 "id": "155", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsk96tEei97MD7GK1RmA', 'key':'documentation','value':'The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.\\n\\n\\r\\nresult = if subExpression-'}}" 
},{
	 "id": "156", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWsut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2722846f (key: documentation, value: A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both.\\n\\n\\n\\nThis mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.\\n\\n\\n\\nConceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.\\r\\nA package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both. This mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.\\n\\n\\n\\nConceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.\\n\\n)'],'eModelElement':'PackageMerge'}}" 
},{
	 "id": "157", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWsu96tEei97MD7GK1RmA', 'key':'documentation','value':'A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the sou'}}" 
},{
	 "id": "158", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWs1t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3910b098 (key: documentation, value: Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.\\n\\nIt is possible to extend the set of applicable enumeration literals in other packages or profiles.\\n\\n\\r\\nEnumeration is a kind of data type, whose instances may be any of a number of user-defined enumeration literals.\\n\\nIt is possible to extend the set of applicable enumeration literals in other packages or profiles.\\n\\n)'],'eModelElement':'Enumeration'}}" 
},{
	 "id": "159", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWs196tEei97MD7GK1RmA', 'key':'documentation','value':'Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.\\n\\nIt is possible to extend the set of applicable enumeration literals in other packages or'}}" 
},{
	 "id": "160", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWs5N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3f57be73 (key: documentation, value: An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity.\\n\\nThe description may include:\\n\\n\\n\\n- Classification of the entity by one or more classifiers of which the entity is an instance. If the only classifier specified is abstract, then the instance specification only partially describes the entity.\\n\\n- The kind of instance, based on its classifier or classifiers -- for example, an instance specification whose classifier is a class describes an object of that class, while an instance specification whose classifier is an association describes a link of that association.\\n\\n- Specification of values of structural features of the entity. Not all structural features of all classifiers of the instance specification need be represented by slots, in which case the instance specification is a partial description.\\n\\n- Specification of how to compute, derive or construct the instance (optional).\\n\\n\\n\\nInstanceSpecification is a concrete class.\\n\\n\\r\\nIn the metamodel, InstanceSpecification is a specialization of DeploymentTarget and DeployedArtifact.)'],'eModelElement':'InstanceSpecification'}}" 
},{
	 "id": "161", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWs5d6tEei97MD7GK1RmA', 'key':'documentation','value':'An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity.\\n\\nThe description may include:\\n\\n\\n\\n- Classification of the entity by one '}}" 
},{
	 "id": "162", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWtn96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@14aa0b5c (key: documentation, value: A function behavior has at least one output parameter.\\r\\nself.ownedParameters->\\n\\n  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1)'],'eModelElement':'one_output_parameter'}}" 
},{
	 "id": "163", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWtoN6tEei97MD7GK1RmA', 'key':'documentation','value':'A function behavior has at least one output parameter.\\r\\nself.ownedParameters->\\n\\n  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1'}}" 
},{
	 "id": "164", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWtp96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2725b954 (key: documentation, value: The types of parameters are all data types, which may not nest anything but other datatypes.\\r\\ndef: hasAllDataTypeAttributes(d : DataType) : Boolean =\\n\\n  d.ownedAttribute->forAll(a |\\n\\n    a.type.oclIsTypeOf(DataType) and\\n\\n      hasAllDataTypeAttributes(a.type))\\n\\nself.ownedParameters->forAll(p | p.type.notEmpty() and\\n\\n  p.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p)))'],'eModelElement':'types_of_parameters'}}" 
},{
	 "id": "165", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWtqN6tEei97MD7GK1RmA', 'key':'documentation','value':'The types of parameters are all data types, which may not nest anything but other datatypes.\\r\\ndef: hasAllDataTypeAttributes(d : DataType) : Boolean =\\n\\n  d.ownedAttribute->forAll(a |\\n\\n    a.type.oclIsT'}}" 
},{
	 "id": "166", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWuEt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7cdf365 (key: documentation, value: A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins when merged with CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.\\n\\n\\n\\nNote - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of \\\\'atomicity\\\\', which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.\\n\\n\\r\\nA structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins in CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.\\n\\n\\n\\nBecause of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is \\\\'isolated,\\\\' then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.\\n\\n\\n\\nNote - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of \\\\'atomicity\\\\', which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.\\n\\n)'],'eModelElement':'StructuredActivityNode'}}" 
},{
	 "id": "167", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWuE96tEei97MD7GK1RmA', 'key':'documentation','value':'A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins wh'}}" 
},{
	 "id": "168", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWuMd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@36f98e4e (key: documentation, value: Activity groups are a generic grouping construct for nodes and edges. Nodes and edges can belong to more than one group.\\n\\nThey have no inherent semantics and can be used for various purposes. Subclasses of ActivityGroup may add semantics.\\n\\n)'],'eModelElement':'ActivityGroup'}}" 
},{
	 "id": "169", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWuMt6tEei97MD7GK1RmA', 'key':'documentation','value':'Activity groups are a generic grouping construct for nodes and edges. Nodes and edges can belong to more than one group.\\n\\nThey have no inherent semantics and can be used for various purposes. Subclass'}}" 
},{
	 "id": "170", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWuYt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5d01f79 (key: documentation, value: An activity specifies the coordination of executions of subordinate behaviors, using a control and data flow model. The subordinate behaviors coordinated by these models may be initiated because other behaviors in the model finish executing, because objects and data become available, or because events occur external to the flow. The flow of execution is modeled as activity nodes connected by activity edges. A node can be the execution of a subordinate behavior, such as an arithmetic computation, a call to an operation, or manipulation of object contents. Activity nodes also include flow-of-control constructs, such as synchronization, decision, and concurrency control. Activities may form invocation hierarchies invoking other activities, ultimately resolving to individual actions. In an object-oriented model, activities are usually invoked indirectly as methods bound to operations that are directly invoked. \\n\\n\\n\\nActivities may describe procedural computation. In this context, they are the methods corresponding to operations on classes. Activities may be applied to organizational modeling for business process engineering and workflow. In this context, events often originate from inside the system, such as the finishing of a task, but also from outside the system, such as a customer call. Activities can also be used for information system modeling to specify system level processes. Activities may contain actions of various kinds:\\n\\n- occurrences of primitive functions, such as arithmetic functions.\\n\\n- invocations of behavior, such as activities.\\n\\n- communication actions, such as sending of signals.\\n\\n- manipulations of objects, such as reading or writing attributes or associations.\\n\\n\\n\\nActions have no further decomposition in the activity containing them. However, the execution of a single action may induce the execution of many other actions. For example, a call action invokes an operation which is implemented by an activity containing actions that execute before the call action completes.)'],'eModelElement':'Activity'}}" 
},{
	 "id": "171", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWuY96tEei97MD7GK1RmA', 'key':'documentation','value':'An activity specifies the coordination of executions of subordinate behaviors, using a control and data flow model. The subordinate behaviors coordinated by these models may be initiated because other'}}" 
},{
	 "id": "172", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWum96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@495c5bad (key: documentation, value: A variable specifies data storage shared by the actions within a group. There are actions to write and read variables. These actions are treated as side effecting actions, similar to the actions to write and read object attributes and associations. There are no sequencing constraints among actions that access the same variable. Such actions must be explicitly coordinated by control flows or other constraints.\\n\\n\\n\\nAny values contained by a variable must conform to the type of the variable and have cardinalities allowed by the multiplicity of the variable.\\n\\n\\r\\nA variable is considered a connectable element.)'],'eModelElement':'Variable'}}" 
},{
	 "id": "173", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWunN6tEei97MD7GK1RmA', 'key':'documentation','value':'A variable specifies data storage shared by the actions within a group. There are actions to write and read variables. These actions are treated as side effecting actions, similar to the actions to wr'}}" 
},{
	 "id": "174", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWupt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@78ae498f (key: documentation, value: The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.\\n\\n\\r\\nresult = true)'],'eModelElement':'isAccessibleBy'}}" 
},{
	 "id": "175", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWup96tEei97MD7GK1RmA', 'key':'documentation','value':'The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.\\n\\n\\r\\nresult = true'}}" 
},{
	 "id": "176", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWvM96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@37a1120d (key: documentation, value: Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.\\n\\n\\r\\ntrue)'],'eModelElement':'interrupting_edges'}}" 
},{
	 "id": "177", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWvNN6tEei97MD7GK1RmA', 'key':'documentation','value':'Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "178", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWvct6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@45f239a (key: documentation, value: An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.\\r\\nAn object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.\\n\\nComplete object nodes add support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values.\\n\\n)'],'eModelElement':'ObjectNode'}}" 
},{
	 "id": "179", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWvc96tEei97MD7GK1RmA', 'key':'documentation','value':'An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be us'}}" 
},{
	 "id": "180", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWv6d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@30280269 (key: documentation, value: If true, the call is synchronous and the caller waits for completion of the invoked behavior.\\n\\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.\\n\\n)'],'eModelElement':'isSynchronous'}}" 
},{
	 "id": "181", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWv6t6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, the call is synchronous and the caller waits for completion of the invoked behavior.\\n\\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return value'}}" 
},{
	 "id": "182", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwIN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@791c670b (key: documentation, value: The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.\\n\\n\\r\\ntrue)'],'eModelElement':'type_ordering_multiplicity'}}" 
},{
	 "id": "183", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwId6tEei97MD7GK1RmA', 'key':'documentation','value':'The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "184", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwTN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@60bd9b98 (key: documentation, value: The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.\\n\\n\\r\\ntrue)'],'eModelElement':'type_ordering_multiplicity'}}" 
},{
	 "id": "185", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwTd6tEei97MD7GK1RmA', 'key':'documentation','value':'The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "186", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwb96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1e884bab (key: documentation, value: A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. In the metamodel, a Usage is a Dependency in which the client requires the presence of the supplier.\\n\\n)'],'eModelElement':'Usage'}}" 
},{
	 "id": "187", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwcN6tEei97MD7GK1RmA', 'key':'documentation','value':'A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. In the metamodel, a Usage is a Dependency in which the client req'}}" 
},{
	 "id": "188", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwrt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1f184585 (key: documentation, value: Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.\\n\\n\\r\\ntrue)'],'eModelElement':'no_incoming_edges'}}" 
},{
	 "id": "189", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwr96tEei97MD7GK1RmA', 'key':'documentation','value':'Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "190", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwtt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@60dcd8f5 (key: documentation, value: Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.\\n\\n\\r\\ntrue)'],'eModelElement':'no_outgoing_edges'}}" 
},{
	 "id": "191", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwt96tEei97MD7GK1RmA', 'key':'documentation','value':'Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "192", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWwwd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7a7a290 (key: documentation, value: A Message is a NamedElement that defines a particular communication between Lifelines of an Interaction. A communication can be e.g. raising a signal, invoking an Operation, creating or destroying an Instance. The Message specifies not only the kind of communication given by the dispatching ExecutionSpecification, but also the sender and the receiver. A Message associates normally two OccurrenceSpecifications - one sending OccurrenceSpecification and one receiving OccurrenceSpecification.\\n\\n)'],'eModelElement':'Message'}}" 
},{
	 "id": "193", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWwwt6tEei97MD7GK1RmA', 'key':'documentation','value':'A Message is a NamedElement that defines a particular communication between Lifelines of an Interaction. A communication can be e.g. raising a signal, invoking an Operation, creating or destroying an '}}" 
},{
	 "id": "194", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxGN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@151ae507 (key: documentation, value: MessageKind is an enumeration of the following values:\\n\\n- complete = sendEvent and receiveEvent are present\\n\\n- lost = sendEvent present and receiveEvent absent\\n\\n- found = sendEvent absent and receiveEvent present\\n\\n- unknown = sendEvent and receiveEvent absent (should not appear))'],'eModelElement':'MessageKind'}}" 
},{
	 "id": "195", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxGd6tEei97MD7GK1RmA', 'key':'documentation','value':'MessageKind is an enumeration of the following values:\\n\\n- complete = sendEvent and receiveEvent are present\\n\\n- lost = sendEvent present and receiveEvent absent\\n\\n- found = sendEvent absent and receiveE'}}" 
},{
	 "id": "196", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxJ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@64b4356 (key: documentation, value: MessageSort is an enumeration of the following values:\\n\\n- synchCall = the message was generated by a synchronous call to an operation\\n\\n- asynchCall = the message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous= false\\n\\n- asynchSignal = the message was generated by an asynchronous send action\\n\\n- createMessage = the message designating the creation of another lifeline object\\n\\n- deleteMessage = the message designating the termination of anther lifeline\\n\\n- reply = the message is a reply message to an operation call)'],'eModelElement':'MessageSort'}}" 
},{
	 "id": "197", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxKN6tEei97MD7GK1RmA', 'key':'documentation','value':'MessageSort is an enumeration of the following values:\\n\\n- synchCall = the message was generated by a synchronous call to an operation\\n\\n- asynchCall = the message was generated by an asynchronous call '}}" 
},{
	 "id": "198", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxLd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@32a916bd (key: documentation, value: The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\\n\\n= false.\\n\\n)'],'eModelElement':'asynchCall'}}" 
},{
	 "id": "199", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxLt6tEei97MD7GK1RmA', 'key':'documentation','value':'The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\\n\\n= false.\\n\\n'}}" 
},{
	 "id": "200", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxUd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3130d41a (key: documentation, value: Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\\n\\n)'],'eModelElement':'formalGate'}}" 
},{
	 "id": "201", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxUt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\\n\\n'}}" 
},{
	 "id": "202", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxat6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@93336d7 (key: documentation, value: A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement. If the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline. If the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.\\r\\nA lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement.\\n\\n\\n\\nIf the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline.\\n\\n\\n\\nIf the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.\\n\\n)'],'eModelElement':'Lifeline'}}" 
},{
	 "id": "203", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxa96tEei97MD7GK1RmA', 'key':'documentation','value':'A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline i'}}" 
},{
	 "id": "204", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxlt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10ad8731 (key: documentation, value: PartDecomposition is a description of the internal interactions of one Lifeline relative to an Interaction.\\n\\n\\n\\nA Lifeline has a class associated as the type of the ConnectableElement that the Lifeline represents. That class may have an internal structure and the PartDecomposition is an Interaction that describes the behavior of that internal structure relative to the Interaction where the decomposition is referenced.\\n\\n\\n\\nA PartDecomposition is a specialization of InteractionUse. It associates with the ConnectableElement that it decomposes.\\n\\n)'],'eModelElement':'PartDecomposition'}}" 
},{
	 "id": "205", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxl96tEei97MD7GK1RmA', 'key':'documentation','value':'PartDecomposition is a description of the internal interactions of one Lifeline relative to an Interaction.\\n\\n\\n\\nA Lifeline has a class associated as the type of the ConnectableElement that the Lifeline'}}" 
},{
	 "id": "206", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxod6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3006b684 (key: documentation, value: Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order.\\n\\n\\n\\ni) CombinedFragment covering L are matched with an extra-global CombinedFragment in D\\n\\nii) An InteractionUse covering L are matched with a global (i.e. covering all Lifelines) InteractionUse in D.\\n\\niii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D\\n\\n\\r\\ntrue)'],'eModelElement':'assume'}}" 
},{
	 "id": "207", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxot6tEei97MD7GK1RmA', 'key':'documentation','value':'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) Oc'}}" 
},{
	 "id": "208", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxqd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@62557754 (key: documentation, value: Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an\\n\\nInteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition)\\n\\n\\r\\ntrue)'],'eModelElement':'commutativity_of_decomposition'}}" 
},{
	 "id": "209", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxqt6tEei97MD7GK1RmA', 'key':'documentation','value':'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an\\n\\nInteractionUse (say) U that covers L. According to the constraint above U will ha'}}" 
},{
	 "id": "210", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWxsd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@446ec5d6 (key: documentation, value: An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referred Interaction where the InteractionUse is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones.\\n\\n\\n\\nIt is common to want to share portions of an interaction between several other interactions. An InteractionUse allows multiple interactions to reference an interaction that represents a common portion of their specification.\\n\\n)'],'eModelElement':'InteractionUse'}}" 
},{
	 "id": "211", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWxst6tEei97MD7GK1RmA', 'key':'documentation','value':'An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referred Interaction where the InteractionUse is. To be accurate the copying must take int'}}" 
},{
	 "id": "212", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWx-t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5c8b2f9b (key: documentation, value: An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions.\\n\\nOccurrenceSpecifications are ordered along a Lifeline.\\n\\nThe namespace of an OccurrenceSpecification is the Interaction in which it is contained.\\n\\n)'],'eModelElement':'OccurrenceSpecification'}}" 
},{
	 "id": "213", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWx-96tEei97MD7GK1RmA', 'key':'documentation','value':'An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions.\\n\\nOccurrenceSpecifications are ordered along a Li'}}" 
},{
	 "id": "214", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWyAt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@e4b65f2 (key: documentation, value: References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\\n\\n)'],'eModelElement':'toBefore'}}" 
},{
	 "id": "215", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWyA96tEei97MD7GK1RmA', 'key':'documentation','value':'References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\\n\\n'}}" 
},{
	 "id": "216", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWyCN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f2ebcd (key: documentation, value: References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\\n\\n)'],'eModelElement':'toAfter'}}" 
},{
	 "id": "217", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWyCd6tEei97MD7GK1RmA', 'key':'documentation','value':'References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\\n\\n'}}" 
},{
	 "id": "218", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWyC96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4d072aa2 (key: documentation, value: An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment. \\n\\n\\n\\nAn InteractionOperand is an InteractionFragment with an optional guard expression. An InteractionOperand may be\\n\\nguarded by a InteractionConstraint. Only InteractionOperands with a guard that evaluates to true at this point in the interaction will be considered for the production of the traces for the enclosing CombinedFragment.\\n\\n\\n\\nInteractionOperand contains an ordered set of InteractionFragments.\\n\\n\\n\\nIn Sequence Diagrams these InteractionFragments are ordered according to their geometrical position vertically. The geometrical position of the InteractionFragment is given by the topmost vertical coordinate of its contained OccurrenceSpecifications or symbols.)'],'eModelElement':'InteractionOperand'}}" 
},{
	 "id": "219", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWyDN6tEei97MD7GK1RmA', 'key':'documentation','value':'An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment. \\n\\n\\n\\nAn InteractionOperand is an Intera'}}" 
},{
	 "id": "220", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWy1N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@77f30fd6 (key: documentation, value: An Actor models a type of role played by an entity that interacts with the subject (e.g., by exchanging signals and data), but which is external to the subject (i.e., in the sense that an instance of an actor is not a part of the instance of its corresponding subject). Actors may represent roles played by human users, external hardware, or other subjects. Note that an actor does not necessarily represent a specific physical entity but merely a particular facet (i.e., role) of some entity that is relevant to the specification of its associated use cases. Thus, a single physical instance may play the role of several different actors and, conversely, a given actor may be played by multiple different instances.\\n\\n\\n\\nSince an actor is external to the subject, it is typically defined in the same classifier or package that incorporates the subject classifier.\\n\\n)'],'eModelElement':'Actor'}}" 
},{
	 "id": "221", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWy1d6tEei97MD7GK1RmA', 'key':'documentation','value':'An Actor models a type of role played by an entity that interacts with the subject (e.g., by exchanging signals and data), but which is external to the subject (i.e., in the sense that an instance of '}}" 
},{
	 "id": "222", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWzYN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2aeb4adc (key: documentation, value: A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstraction for a set of realizingClassifiers that realize its behavior. In addition, because a Class itself is a subtype of an EncapsulatedClassifier, a Component may optionally have an internal structure and own a set of Ports that formalize its interaction points.\\n\\n\\n\\nA component has a number of provided and required Interfaces, that form the basis for wiring components together, either using Dependencies, or by using Connectors. A provided Interface is one that is either implemented directly by the component or one of its realizingClassifiers, or it is the type of a provided Port of the Component. A required interface is designated by a Usage Dependency from the Component or one of its realizingClassifiers, or it is the type of a required Port.\\n\\n)'],'eModelElement':'Component'}}" 
},{
	 "id": "223", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWzYd6tEei97MD7GK1RmA', 'key':'documentation','value':'A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstracti'}}" 
},{
	 "id": "224", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWzet6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@18ee4dcf (key: documentation, value: result = let usedInterfaces = UsedInterfaces(self) and\\n\\n  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and\\n\\n  let typesOfUsedPorts = self.ownedPort.required in\\n\\n    ((usedInterfaces->union(realizingClassifierUsedInterfaces))->\\n\\n      union(typesOfUsedPorts))->asSet())'],'eModelElement':'getRequireds'}}" 
},{
	 "id": "225", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWze96tEei97MD7GK1RmA', 'key':'documentation','value':'result = let usedInterfaces = UsedInterfaces(self) and\\n\\n  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and\\n\\n  let typesOfUsedPorts = self.ownedPort.required in\\n\\n   '}}" 
},{
	 "id": "226", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWzf96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@342e9a4a (key: documentation, value: result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and\\n\\n  let realizedInterfaces = RealizedInterfaces(self) and\\n\\n  let realizingClassifierInterfaces = RealizedInterfaces(self.realizingClassifier) and\\n\\n  let typesOfRequiredPorts = self.ownedPort.provided in\\n\\n    (((implementedInterfaces->union(realizedInterfaces)->union(realizingClassifierInterfaces))->\\n\\n      union(typesOfRequiredPorts))->asSet())'],'eModelElement':'getProvideds'}}" 
},{
	 "id": "227", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWzgN6tEei97MD7GK1RmA', 'key':'documentation','value':'result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and\\n\\n  let realizedInterfaces = RealizedInterfaces(self) and\\n\\n  let realizingClassifierInterfaces = RealizedInterf'}}" 
},{
	 "id": "228", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftjfgt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2ce818f7 (key: documentation, value: The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. «specification, «focus», «subsystem».)'],'eModelElement':'isIndirectlyInstantiated'}}" 
},{
	 "id": "229", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftjfg96tEei97MD7GK1RmA', 'key':'documentation','value':'The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-'}}" 
},{
	 "id": "230", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW0z96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4d4cb0d2 (key: documentation, value: Gives the output pin on which the hosting object is placed.\\n\\n)'],'eModelElement':'result'}}" 
},{
	 "id": "231", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW00N6tEei97MD7GK1RmA', 'key':'documentation','value':'Gives the output pin on which the hosting object is placed.\\n\\n'}}" 
},{
	 "id": "232", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW1Ad6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@60c3e95f (key: documentation, value: Gives the input pin from which the object whose structural feature is to be read or written is obtained.\\n\\n)'],'eModelElement':'object'}}" 
},{
	 "id": "233", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW1At6tEei97MD7GK1RmA', 'key':'documentation','value':'Gives the input pin from which the object whose structural feature is to be read or written is obtained.\\n\\n'}}" 
},{
	 "id": "234", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW1Ot6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@71dd81e4 (key: documentation, value: The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.\\n\\n\\n\\nStructural features are potentially multi-valued and ordered, and may support duplicates, so the action supports specification of removal points for new values. It also supports the removal of all duplicate values.\\n\\n)'],'eModelElement':'RemoveStructuralFeatureValueAction'}}" 
},{
	 "id": "235", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW1O96tEei97MD7GK1RmA', 'key':'documentation','value':'The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified s'}}" 
},{
	 "id": "236", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW1Pd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6a50eee3 (key: documentation, value: Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has no removeAt input pin.\\n\\n\\r\\ntrue)'],'eModelElement':'non_unique_removal'}}" 
},{
	 "id": "237", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW1Pt6tEei97MD7GK1RmA', 'key':'documentation','value':'Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. O'}}" 
},{
	 "id": "238", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW1TN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4d70093d (key: documentation, value: Structural Features are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the structural feature before the new value is added.\\n\\n\\n\\nThe object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.\\n\\n)'],'eModelElement':'AddStructuralFeatureValueAction'}}" 
},{
	 "id": "239", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW1Td6tEei97MD7GK1RmA', 'key':'documentation','value':'Structural Features are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the structural'}}" 
},{
	 "id": "240", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW1hd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@66b7c3d3 (key: documentation, value: LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\r\\nLinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\n\\n)'],'eModelElement':'LinkEndData'}}" 
},{
	 "id": "241", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW1ht6tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to'}}" 
},{
	 "id": "242", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftiP4t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@15931c82 (key: documentation, value: This action navigates an association towards one end, which is the end that does not have an input pin to take its object (the open end). The objects put on the result output pin are the ones participating in the association at the open end, conforming to the specified qualifiers, in order if the end is ordered. The semantics is undefined for reading a link that violates the navigability or visibility of the open end.)'],'eModelElement':'ReadLinkAction'}}" 
},{
	 "id": "243", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftiP496tEei97MD7GK1RmA', 'key':'documentation','value':'This action navigates an association towards one end, which is the end that does not have an input pin to take its object (the open end). The objects put on the result output pin are the ones partic'}}" 
},{
	 "id": "244", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW2Bd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@12177615 (key: documentation, value: The pin on which are put the objects participating in the association at the end not specified by the inputs.\\n\\n)'],'eModelElement':'result'}}" 
},{
	 "id": "245", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW2Bt6tEei97MD7GK1RmA', 'key':'documentation','value':'The pin on which are put the objects participating in the association at the end not specified by the inputs.\\n\\n'}}" 
},{
	 "id": "246", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW2Cd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2a53c15e (key: documentation, value: This class is required when using CreateLinkAction, to specify insertion points for ordered ends and for replacing all links at end. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, as required. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\n\\n\\n\\nQualifier values are used in CompleteActions to identify links to create.)'],'eModelElement':'LinkEndCreationData'}}" 
},{
	 "id": "247", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW2Ct6tEei97MD7GK1RmA', 'key':'documentation','value':'This class is required when using CreateLinkAction, to specify insertion points for ordered ends and for replacing all links at end. A link cannot be passed as a runtime value to or from an action. In'}}" 
},{
	 "id": "248", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW2It6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1c2811b0 (key: documentation, value: This action can be used to create links and link objects. There is no return value in either case. This is so that no change of the action is required if the association is changed to an association class or vice versa. CreateLinkAction uses a specialization of LinkEndData called LinkEndCreationData, to support ordered associations. The insertion point is specified at runtime by an additional input pin, which is required for ordered association ends and omitted for unordered ends. The insertion point is a positive integer giving the position to insert the link, or unlimited, to insert at the end. Reinserting an existing end at a new position in an ordered unique structural feature moves the end to that position. CreateLinkAction also uses LinkEndCreationData to support the destruction of existing links of the association that connect any of the objects of the new link. When the link is created, this option is available on an end-by-end basis, and causes all links of the association emanating from the \\n\\nspecified ends to be destroyed before the new link is created.)'],'eModelElement':'CreateLinkAction'}}" 
},{
	 "id": "249", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW2I96tEei97MD7GK1RmA', 'key':'documentation','value':'This action can be used to create links and link objects. There is no return value in either case. This is so that no change of the action is required if the association is changed to an association c'}}" 
},{
	 "id": "250", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW2Pd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@37c0dc6f (key: documentation, value: This action destroys a link or a link object. Link objects can also be destroyed with DestroyObjectAction. The link is specified in the same way as link creation, even for link objects. This allows actions to remain unchanged when their associations are transformed from ordinary ones to association classes and vice versa.\\n\\n\\n\\nDestroyLinkAction uses a specialization of LinkEndData, called LinkEndDestructionData, to support ordered nonunique associations. The position of the link to be destroyed is specified at runtime by an additional input pin, which is required for ordered nonunique association ends and omitted for other kinds of ends. This is a positive integer giving the position of the link to destroy.\\n\\n\\n\\nDestroyLinkAction also uses LinkEndDestructionData to support the destruction of duplicate links of the association on ends that are nonunique. This option is available on an end-by-end basis, and causes all duplicate links of the association emanating from the specified ends to be destroyed.\\n\\n)'],'eModelElement':'DestroyLinkAction'}}" 
},{
	 "id": "251", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW2Pt6tEei97MD7GK1RmA', 'key':'documentation','value':'This action destroys a link or a link object. Link objects can also be destroyed with DestroyObjectAction. The link is specified in the same way as link creation, even for link objects. This allows ac'}}" 
},{
	 "id": "252", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW2Rd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@45ed0b46 (key: documentation, value: This class is required when using DestroyLinkAction, to specify links to destroy for nonunique ordered ends. A link cannot be passed as a runtime value to or from an action.\\n\\n\\n\\nQualifier values are used in CompleteActions to identify links to destroy.)'],'eModelElement':'LinkEndDestructionData'}}" 
},{
	 "id": "253", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW2Rt6tEei97MD7GK1RmA', 'key':'documentation','value':'This class is required when using DestroyLinkAction, to specify links to destroy for nonunique ordered ends. A link cannot be passed as a runtime value to or from an action.\\n\\n\\n\\nQualifier values are us'}}" 
},{
	 "id": "254", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW3Ct6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4b96104f (key: documentation, value: The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (constrainedElement->size() =2)\\n\\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0))'],'eModelElement':'first_event_multiplicity'}}" 
},{
	 "id": "255", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW3C96tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (constrainedElement->size() =2)\\n\\n  then (firstEvent->size() '}}" 
},{
	 "id": "256", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW3Id6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7adcaf91 (key: documentation, value: The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (event->size() = 2)\\n\\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0))'],'eModelElement':'first_event_multiplicity'}}" 
},{
	 "id": "257", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW3It6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (event->size() = 2)\\n\\n  then (firstEvent->size() = 2) else (firstEvent->si'}}" 
},{
	 "id": "258", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW4Bd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@63b8a4ec (key: documentation, value: An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated. One purpose of InformationItems is to be able to define preliminary models, before having made detailed modeling decisions on types or structures. One other purpose of information items and information flows is to abstract complex models by a less precise but more general representation of the information exchanged betwen entities of a system.\\n\\n)'],'eModelElement':'InformationItem'}}" 
},{
	 "id": "259", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW4Bt6tEei97MD7GK1RmA', 'key':'documentation','value':'An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one wh'}}" 
},{
	 "id": "260", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW4CN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@54804ddd (key: documentation, value: The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component.\\r\\n(self.represented->select(p | p->oclIsKindOf(InformationItem))->forAll(p |\\n\\n  p.informationFlow.source->forAll(q | self.informationFlow.source->include(q)) and\\n\\n    p.informationFlow.target->forAll(q | self.informationFlow.target->include(q)))) and\\n\\n      (self.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface) or\\n\\n        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))))'],'eModelElement':'sources_and_targets'}}" 
},{
	 "id": "261", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW4Cd6tEei97MD7GK1RmA', 'key':'documentation','value':'The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can'}}" 
},{
	 "id": "262", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW4Jt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5c7e59d8 (key: documentation, value: The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link).\\r\\n(self.source->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or\\n\\n  oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or\\n\\n  oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or\\n\\n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or\\n\\n  oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))) and\\n\\n    (self.target->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or\\n\\n      oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or\\n\\n      oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or\\n\\n      oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or\\n\\n      oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))))'],'eModelElement':'sources_and_targets_kind'}}" 
},{
	 "id": "263", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW4J96tEei97MD7GK1RmA', 'key':'documentation','value':'The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityParti'}}" 
},{
	 "id": "264", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW4Nt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@66cf7bdd (key: documentation, value: An information flow can only convey classifiers that are allowed to represent an information item.\\n\\n\\r\\nself.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)\\n\\n  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))'],'eModelElement':'convey_classifiers'}}" 
},{
	 "id": "265", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW4N96tEei97MD7GK1RmA', 'key':'documentation','value':'An information flow can only convey classifiers that are allowed to represent an information item.\\n\\n\\r\\nself.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)\\n\\n  or oclIsK'}}" 
},{
	 "id": "266", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW6H96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a2e48d3 (key: documentation, value: The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.\\n\\n\\r\\ntrue)'],'eModelElement':'multiplicity_of_result'}}" 
},{
	 "id": "267", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW6IN6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.\\n\\n\\r\\ntrue'}}" 
},{
	 "id": "268", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW6dt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@e95be0f (key: documentation, value: If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.\\r\\n(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implies\\n\\n  self.outgoing.isTypeOf(ObjectFlow)) and\\n\\n    (self.incoming.select(e | e.isTypeOf(ObjectFlow)->empty() implies\\n\\n      self.outgoing.isTypeOf(ControlFlow)))'],'eModelElement':'incoming_object_flow'}}" 
},{
	 "id": "269", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW6d96tEei97MD7GK1RmA', 'key':'documentation','value':'If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.\\r\\n(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implie'}}" 
},{
	 "id": "270", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW6k96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7bffe46 (key: documentation, value: Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the upstream object node type.\\n\\n\\r\\ntrue)'],'eModelElement':'compatible_types'}}" 
},{
	 "id": "271", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW6lN6tEei97MD7GK1RmA', 'key':'documentation','value':'Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the u'}}" 
},{
	 "id": "272", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW6196tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2d2ad8ef (key: documentation, value: A conditional node consists of one or more clauses. Each clause consists of a test section and a body section. When the conditional node begins execution, the test sections of the clauses are executed. If one or more test sections yield a true value, one of the corresponding body sections will be executed. If more than one test section yields a true value, only one body section will be executed. The choice is nondeterministic unless the test sequence of clauses is specified. If no test section yields a true value, then no body section is executed; this may be a semantic error if output values are expected from the conditional node.\\n\\n\\n\\nIn general, test section may be executed in any order, including simultaneously (if the underlying execution architecture supports it). The result may therefore be nondeterministic if more than one test section can be true concurrently. To enforce ordering of evaluation, sequencing constraints may be specified among clauses. One frequent case is a total ordering of clauses, in which case the clause execution order is determinate. If it is impossible for more than one test section to evaluate true simultaneously, the result is deterministic and it is unnecessary to order the clauses, as ordering may impose undesirable and unnecessary restrictions on implementation. Note that, although evaluation of test sections may be specified as concurrent, this does not require that the implementation evaluate them in parallel; it merely means that the model does not impose any order on evaluation.\\n\\n\\n\\nAn \\\\'else\\\\' clause is a clause that is a successor to all other clauses in the conditional and whose test part always returns true.\\n\\n\\n\\nOutput values created in the test or body section of a clause are potentially available for use outside the conditional. However, any value used outside the conditional must be created in every clause, otherwise an undefined value would be accessed if a clause not defining the value were executed.)'],'eModelElement':'ConditionalNode'}}" 
},{
	 "id": "273", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW62N6tEei97MD7GK1RmA', 'key':'documentation','value':'A conditional node consists of one or more clauses. Each clause consists of a test section and a body section. When the conditional node begins execution, the test sections of the clauses are executed'}}" 
},{
	 "id": "274", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW7Vt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@138c70d1 (key: documentation, value: An expansion region is a strictly nested region of an activity with explicit input and outputs (modeled as ExpansionNodes). Each input is a collection of values. If there are multiple inputs, each of them must hold the same kind of collection, although the types of the elements in the different collections may vary. The expansion region is executed once for each element (or position) in the input collection.\\n\\n\\n\\nThe number of output collections can differ from the number of input collections. On each execution of the region, an output value from the region is inserted into an output collection at the same position as the input elements. If the region execution ends with no output, then nothing is added to the output collection. When this happens the output collection will not have the same number of elements as the input collections, the region acts as a filter. If all the executions provide an output to the collection, then the output collections will have the same number of elements as the input collections.\\n\\n\\n\\nThe inputs and outputs to an expansion region are modeled as ExpansionNodes. From \\\\'outside\\\\' of the region, the values on these nodes appear as collections. From \\\\'inside\\\\' the region the values appear as elements of the collections. Object flow edges connect pins outside the region to input and output expansion nodes as collections. Object flow edges connect pins inside the region to input and output expansion nodes as individual elements. From the inside of the region, these nodes are visible as individual values. If an expansion node has a name, it is the name of the individual element within the region.\\n\\n\\n\\nAny object flow edges that cross the boundary of the region, without passing through expansion nodes, provide values that are fixed within the different executions of the region.)'],'eModelElement':'ExpansionRegion'}}" 
},{
	 "id": "275", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW7V96tEei97MD7GK1RmA', 'key':'documentation','value':'An expansion region is a strictly nested region of an activity with explicit input and outputs (modeled as ExpansionNodes). Each input is a collection of values. If there are multiple inputs, each of '}}" 
},{
	 "id": "276", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW7Yd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@69c8d946 (key: documentation, value: The way in which the executions interact:\\n\\nparallel: all interactions are independent\\n\\niterative: the interactions occur in order of the elements\\n\\nstream: a stream of values flows into a single execution\\n\\n)'],'eModelElement':'mode'}}" 
},{
	 "id": "277", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW7Yt6tEei97MD7GK1RmA', 'key':'documentation','value':'The way in which the executions interact:\\n\\nparallel: all interactions are independent\\n\\niterative: the interactions occur in order of the elements\\n\\nstream: a stream of values flows into a single execut'}}" 
},{
	 "id": "278", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW7dt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@13e1a347 (key: documentation, value: A protocol transition (transition as specialized in the ProtocolStateMachines package) specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine.\\n\\n\\n\\nThe protocol transition specifies that the associated (referred) operation can be called for an instance in the origin state under the initial condition (guard), and that at the end of the transition, the destination state will be reached under the final condition (post).\\n\\n)'],'eModelElement':'ProtocolTransition'}}" 
},{
	 "id": "279", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW7d96tEei97MD7GK1RmA', 'key':'documentation','value':'A protocol transition (transition as specialized in the ProtocolStateMachines package) specifies a legal transition for an operation. Transitions of protocol state machines have the following informat'}}" 
},{
	 "id": "280", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsW7kd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1131bdb5 (key: documentation, value: Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.\\n\\n)'],'eModelElement':'postCondition'}}" 
},{
	 "id": "281", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsW7kt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation conne'}}" 
},{
	 "id": "282", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X9ld6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1e805827 (key: documentation, value: Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:\\r\\n  - true = The Boolean condition is satisfied.\\r\\n  - false = The Boolean condition is not satisfied.\\r\\n\\r\\nIt is used for Boolean attribute and Boolean expressions in the metamodel, such as OCL expression.)'],'eModelElement':'Boolean'}}" 
},{
	 "id": "283", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X9lt6tEei97MD7GK1RmA', 'key':'documentation','value':'Boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical condition. Its enumeration literals are:\\r\\n  - true = The Boolean condition is satisfied'}}" 
},{
	 "id": "284", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X-F96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@416646c4 (key: documentation, value: A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages. In addition a package can be merged with other packages.\\r\\nA package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either individual members of other packages, or all the members of other packages.\\r\\nIn addition a package can be merged with other packages.\\r\\n\\r\\nA Package can have one or more ProfileApplications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.\\r\\nPackage specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.)'],'eModelElement':'Package'}}" 
},{
	 "id": "285", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X-GN6tEei97MD7GK1RmA', 'key':'documentation','value':'A package is a namespace for its members, and may contain other packages. Only packageable elements can be owned members of a package. By virtue of being a namespace, a package can import either indiv'}}" 
},{
	 "id": "286", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X-dt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c12e0de (key: documentation, value: If there is no name, or one of the containing namespaces has no name, there is no qualified name.\\r\\n(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())\\r\\n  implies self.qualifiedName->isEmpty())'],'eModelElement':'has_no_qualified_name'}}" 
},{
	 "id": "287", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X-d96tEei97MD7GK1RmA', 'key':'documentation','value':'If there is no name, or one of the containing namespaces has no name, there is no qualified name.\\r\\n(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())\\r\\n  implie'}}" 
},{
	 "id": "288", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X-w96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3fb9dfe2 (key: documentation, value: VisibilityKind is an enumeration of the following literal values:\\r\\n  - public\\r\\n  - private\\r\\n  - protected\\r\\n  - package)'],'eModelElement':'VisibilityKind'}}" 
},{
	 "id": "289", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X-xN6tEei97MD7GK1RmA', 'key':'documentation','value':'VisibilityKind is an enumeration of the following literal values:\\r\\n  - public\\r\\n  - private\\r\\n  - protected\\r\\n  - package'}}" 
},{
	 "id": "290", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X-8d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3e25cf0c (key: documentation, value: A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.\\r\\nA namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.\\r\\n\\r\\nA namespace can own constraints. The constraint does not necessarily apply to the namespace itself, but may also apply to elements in the namespace.\\r\\n\\r\\nA namespace has the ability to import either individual members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespace. In the case of conflicts, it is necessary to use qualified names or aliases to disambiguate the referenced elements.\\r\\n\\r\\n\\r\\nA namespace is a named element that can own other named elements. Each named element may be owned by at most one namespace. A namespace provides a means for identifying named elements by name. Named elements can be identified by name in a namespace either by being directly owned by the namespace or by being introduced into the namespace by other means e.g. importing or inheriting. Namespace is an abstract metaclass.)'],'eModelElement':'Namespace'}}" 
},{
	 "id": "291", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X-8t6tEei97MD7GK1RmA', 'key':'documentation','value':'A namespace has the ability to import either individial members or all members of a package, thereby making it possible to refer to those named elements without qualification in the importing namespac'}}" 
},{
	 "id": "292", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X_dd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@57422f60 (key: documentation, value: Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.\\r\\nConstraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to the element. Constraint contains an optional name, although they are commonly unnamed.\\r\\nConstraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, others may be user-defined. A user-defined Constraint is described using a specified language, whose syntax and interpretation is a tool responsibility. One predefined language for writing constraints is OCL. In some situations, a programming language such as Java may be appropriate for expressing a constraint. In other situations natural language may be used.\\r\\nConstraint is a condition (a Boolean expression) that restricts the extension of the associated element beyond what is imposed by the other language constructs applied to that element. Constraint contains an optional name, although they are commonly unnamed.)'],'eModelElement':'Constraint'}}" 
},{
	 "id": "293", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X_dt6tEei97MD7GK1RmA', 'key':'documentation','value':'Constraint contains a ValueSpecification that specifies additional semantics for one or more elements. Certain kinds of constraints (such as an association \\\\'xor\\\\' constraint) are predefined in UML, oth'}}" 
},{
	 "id": "294", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X_o96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a8250c3 (key: documentation, value: A condition that must be true when evaluated in order for the constraint to be satisfied.\\r\\n\\r\\nA condition that must be true when evaluated in order for the constraint to be satisfied.)'],'eModelElement':'specification'}}" 
},{
	 "id": "295", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X_pN6tEei97MD7GK1RmA', 'key':'documentation','value':'A condition that must be true when evaluated in order for the constraint to be satisfied.\\r\\n\\r\\nA condition that must be true when evaluated in order for the constraint to be satisfied.'}}" 
},{
	 "id": "296", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X_r96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@103d3198 (key: documentation, value: The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for ValueSpecification, the type must be conformant with the type of the specified parameterable element.\\r\\n\\r\\nresult = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type))'],'eModelElement':'isCompatibleWith'}}" 
},{
	 "id": "297", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X_sN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable elemen'}}" 
},{
	 "id": "298", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X_1N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@74cde494 (key: documentation, value: A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass.\\r\\nA typed element is an element that has a type that serves as a constraint on the range of values the element can represent.\\r\\nTyped element is an abstract metaclass.\\r\\n)'],'eModelElement':'TypedElement'}}" 
},{
	 "id": "299", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X_1d6tEei97MD7GK1RmA', 'key':'documentation','value':'A typed element is an element that has a type that serves as a constraint on the range of values the element can represent. Typed element is an abstract metaclass.\\r\\nA typed element is an element that '}}" 
},{
	 "id": "300", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2X_9N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10a5c8cb (key: documentation, value: An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More than one end of an association may have the same type.\\r\\n\\r\\nAn end property of an association that is owned by an end class or that is a navigable owned end of the association indicates that the association is navigable from the opposite ends, otherwise the association is not navigable from the opposite ends.)'],'eModelElement':'Association'}}" 
},{
	 "id": "301", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2X_9d6tEei97MD7GK1RmA', 'key':'documentation','value':'An association specifies a semantic relationship that can occur between typed instances. It has at least two ends represented by properties, each of which is connected to the type of the end. More tha'}}" 
},{
	 "id": "302", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YAMN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@21448f47 (key: documentation, value: A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstract metaclass.\\r\\nClassifier is extended with the capability to own collaboration uses. These collaboration uses link a collaboration with the classifier to give a description of the workings of the classifier.\\r\\nExtends a classifier with the capability to own use cases. Although the owning classifier typically represents the subject to which the owned use cases apply, this is not necessarily the case. In principle, the same use case can be applied to multiple subjects, as identified by the subject association role of a UseCase.\\r\\nA classifier is a namespace whose members can include features. Classifier is an abstract metaclass.\\r\\nA classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to other classifiers. A classifier can specify a generalization hierarchy by referencing its general classifiers.\\r\\nA classifier is a redefinable element, meaning that it is possible to redefine nested classifiers.\\r\\n\\r\\nA classifier can be parameterized, exposed as a formal template parameter, and specified as an actual parameter in a binding of a template.)'],'eModelElement':'Classifier'}}" 
},{
	 "id": "303", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YAMd6tEei97MD7GK1RmA', 'key':'documentation','value':'A classifier is a type. It can specify a generalization hierarchy by referencing its general classifiers.  A classifier is also a namespace whose members can include features. Classifier is an abstrac'}}" 
},{
	 "id": "304", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YAqd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6898f518 (key: documentation, value: If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.\\r\\n)'],'eModelElement':'isAbstract'}}" 
},{
	 "id": "305", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YAqt6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general '}}" 
},{
	 "id": "306", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YBbN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3c48834b (key: documentation, value: A ParameterableElement can be referenced by a TemplateParameter when defining a formal template parameter for a template. A ParameterableElement can be referenced by a TemplateParameterSubstitution when used as an actual parameter in a binding of a template.\\r\\nParameterableElement is an abstract metaclass.\\r\\n)'],'eModelElement':'ParameterableElement'}}" 
},{
	 "id": "307", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YBbd6tEei97MD7GK1RmA', 'key':'documentation','value':'A ParameterableElement can be referenced by a TemplateParameter when defining a formal template parameter for a template. A ParameterableElement can be referenced by a TemplateParameterSubstitution wh'}}" 
},{
	 "id": "308", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YBmt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7450e755 (key: documentation, value: A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\r\\nA generalization can be designated as being a member of a particular generalization set.\\r\\n\\r\\nA generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\r\\n\\r\\n)'],'eModelElement':'Generalization'}}" 
},{
	 "id": "309", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YBm96tEei97MD7GK1RmA', 'key':'documentation','value':'A generalization relates a specific classifier to a more general classifier, and is owned by the specific classifier.\\r\\nA generalization can be designated as being a member of a particular generalizati'}}" 
},{
	 "id": "310", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YBxt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@31fcacc9 (key: documentation, value: Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet.\\r\\n\\r\\nFor example, Person could have two Generalization relationships each with a different specific Classifier: Male Person and Female Person. This GeneralizationSet would be covering because every instance of Person would be an instance of Male Person or Female Person. In contrast, Person could have a three Generalization relationships involving three specific Classifiers: North American Person, Asian Person, and European Person. This GeneralizationSet would not be covering because there are instances of Person for which these three specific Classifiers do not apply. The first example, then, could be read: any Person would be specialized as either being a Male Person or a Female Person and nothing else; the second could be read: any Person would be specialized as being North American Person, Asian Person, European Person, or something else.)'],'eModelElement':'isCovering'}}" 
},{
	 "id": "311", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YBx96tEei97MD7GK1RmA', 'key':'documentation','value':'Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular '}}" 
},{
	 "id": "312", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YB7d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@11c0e7cd (key: documentation, value: An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nAn expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nOne predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.\\r\\n\\r\\nProvides a mechanism for precisely defining the behavior of an opaque expression. An opaque expression is defined by a behavior restricted to return one result.)'],'eModelElement':'OpaqueExpression'}}" 
},{
	 "id": "313", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YB7t6tEei97MD7GK1RmA', 'key':'documentation','value':'An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nAn expression contains language-specific text strings '}}" 
},{
	 "id": "314", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YB-96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@47b96c5b (key: documentation, value: The behavior may only have return result parameters.\\r\\nself.behavior.notEmpty() implies\\r\\n  self.behavior.ownedParameters->select(p | p.direction<>#return)->isEmpty())'],'eModelElement':'only_return_result_parameters'}}" 
},{
	 "id": "315", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YB_N6tEei97MD7GK1RmA', 'key':'documentation','value':'The behavior may only have return result parameters.\\r\\nself.behavior.notEmpty() implies\\r\\n  self.behavior.ownedParameters->select(p | p.direction<>#return)->isEmpty()'}}" 
},{
	 "id": "316", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YCA96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@bbd6abe (key: documentation, value: The behavior must have exactly one return result parameter.\\r\\nself.behavior.notEmpty() implies\\r\\n  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1)'],'eModelElement':'one_return_result_parameter'}}" 
},{
	 "id": "317", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YCBN6tEei97MD7GK1RmA', 'key':'documentation','value':'The behavior must have exactly one return result parameter.\\r\\nself.behavior.notEmpty() implies\\r\\n  self.behavior.ownedParameter->select(p | p.direction=#return)->size() = 1'}}" 
},{
	 "id": "318", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YCJd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4ffd734a (key: documentation, value: Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression body or the context. Languages are matched to body strings by order.\\r\\nSpecifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.\\r\\n)'],'eModelElement':'language'}}" 
},{
	 "id": "319", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YCJt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the language. If languages are unspecified, it might be implicit from the expression bod'}}" 
},{
	 "id": "320", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YC6d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@154b93ea (key: documentation, value: A ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of linked instances to be created within an instance of the containing classifier.\\r\\nConnectableElement is the connectable element of a ConnectableElementTemplateParameter.\\r\\nThe ConnectableElements attached as role to each ConnectorEnd owned by a Connector must be roles of the classifier that owned the Connector, or they must be ports of such roles. \\r\\n)'],'eModelElement':'ConnectableElement'}}" 
},{
	 "id": "321", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YC6t6tEei97MD7GK1RmA', 'key':'documentation','value':'A ConnectableElement is an abstract metaclass representing a set of instances that play roles of a classifier. Connectable elements may be joined by attached connectors and specify configurations of l'}}" 
},{
	 "id": "322", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDGN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@645fb0f4 (key: documentation, value: A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end at the same place in the ordering of association ends as this connector end.\\r\\n)'],'eModelElement':'definingEnd'}}" 
},{
	 "id": "323", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDGd6tEei97MD7GK1RmA', 'key':'documentation','value':'A derived association referencing the corresponding association end on the association which types the connector owing this connector end. This association is derived by selecting the association end '}}" 
},{
	 "id": "324", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDHt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6123d0bb (key: documentation, value: The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifier that types this connectable element.\\r\\n)'],'eModelElement':'role'}}" 
},{
	 "id": "325", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDH96tEei97MD7GK1RmA', 'key':'documentation','value':'The connectable element attached at this connector end. When an instance of the containing classifier is created, a link may (depending on the multiplicities) be created to an instance of the classifi'}}" 
},{
	 "id": "326", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDId6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@567b7b9b (key: documentation, value: Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association.\\r\\n\\r\\nProperty is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.\\r\\nA property is a structural feature.\\r\\nA property related to a classifier by ownedAttribute represents an attribute, and it may also represent an association end. It relates an instance of the class to a value or collection of values of the type of the attribute.\\r\\nA property related to an Association by memberEnd or its specializations represents an end of the association. The type of property is the type of the end of the association.\\r\\n\\r\\nA property represents a set of instances that are owned by a containing classifier instance.\\r\\nIn the metamodel, Property is a specialization of DeploymentTarget.\\r\\nProperty represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to the instance of the classifier by being held in slots of the instance. When a property is an association end, the value or values are related to the instance or instances at the other end(s) of the association. Property is indirectly a subclass of Constructs::TypedElement. The range of valid values represented by the property can be controlled by setting the property's type.\\r\\n\\r\\nProperty specializes ParameterableElement to specify that a property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template.)'],'eModelElement':'Property'}}" 
},{
	 "id": "327", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDIt6tEei97MD7GK1RmA', 'key':'documentation','value':'Property represents a declared state of one or more instances in terms of a named relationship to a value or values. When a property is an attribute of a classifier, the value or values are related to'}}" 
},{
	 "id": "328", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDLN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2d1c18fd (key: documentation, value: The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable element Q if the kind of P is the same or a subtype as the kind of Q. In addition, for properties, the type must be conformant with the type of the specified parameterable element.\\r\\n\\r\\nresult = p->oclIsKindOf(self.oclType) and self.type.conformsTo(p.oclAsType(TypedElement).type))'],'eModelElement':'isCompatibleWith'}}" 
},{
	 "id": "329", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDLd6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isCompatibleWith() determines if this parameterable element is compatible with the specified parameterable element. By default parameterable element P is compatible with parameterable elemen'}}" 
},{
	 "id": "330", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDR96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4413a31f (key: documentation, value: A redefined property must be inherited from a more general classifier containing the redefining property.\\r\\nif (redefinedProperty->notEmpty()) then\\r\\n  (redefinitionContext->notEmpty() and\\r\\n      redefinedProperty->forAll(rp|\\r\\n        ((redefinitionContext->collect(fc|\\r\\n          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp)))'],'eModelElement':'redefined_property_inherited'}}" 
},{
	 "id": "331", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDSN6tEei97MD7GK1RmA', 'key':'documentation','value':'A redefined property must be inherited from a more general classifier containing the redefining property.\\r\\nif (redefinedProperty->notEmpty()) then\\r\\n  (redefinitionContext->notEmpty() and\\r\\n      redefi'}}" 
},{
	 "id": "332", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDf96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2ad928c (key: documentation, value: A binding of a property template parameter representing an attribute must be to an attribute.\\r\\n(isAttribute(self) and (templateParameterSubstitution->notEmpty())\\r\\n  implies (templateParameterSubstitution->forAll(ts | isAttribute(ts.formal))))'],'eModelElement':'binding_to_attribute'}}" 
},{
	 "id": "333", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDgN6tEei97MD7GK1RmA', 'key':'documentation','value':'A binding of a property template parameter representing an attribute must be to an attribute.\\r\\n(isAttribute(self) and (templateParameterSubstitution->notEmpty())\\r\\n  implies (templateParameterSubstitut'}}" 
},{
	 "id": "334", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YDut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@938d131 (key: documentation, value: The DataType that owns this Operation.\\r\\nThe DataType that owns this Property.\\r\\n)'],'eModelElement':'datatype'}}" 
},{
	 "id": "335", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YDu96tEei97MD7GK1RmA', 'key':'documentation','value':'The DataType that owns this Operation.\\r\\nThe DataType that owns this Property.\\r\\n'}}" 
},{
	 "id": "336", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEDt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7408d53a (key: documentation, value: The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).\\r\\nself.deployment->forAll (d | d.location.deployedElements->forAll (de |\\r\\n  de.oclIsKindOf(Component))))'],'eModelElement':'deployed_elements'}}" 
},{
	 "id": "337", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YED96tEei97MD7GK1RmA', 'key':'documentation','value':'The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e. the configured components).\\r\\nself.deployment->'}}" 
},{
	 "id": "338", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEN96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@19c8a6e5 (key: documentation, value: The Artifacts that are defined (nested) within the Artifact.\\r\\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\\r\\n)'],'eModelElement':'nestedArtifact'}}" 
},{
	 "id": "339", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YEON6tEei97MD7GK1RmA', 'key':'documentation','value':'The Artifacts that are defined (nested) within the Artifact.\\r\\nThe association is a specialization of the ownedMember association from Namespace to NamedElement.\\r\\n'}}" 
},{
	 "id": "340", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEQ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4d076c4b (key: documentation, value: The attributes or association ends defined for the Artifact.\\r\\nThe association is a specialization of the ownedMember association.\\r\\n)'],'eModelElement':'ownedAttribute'}}" 
},{
	 "id": "341", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YERN6tEei97MD7GK1RmA', 'key':'documentation','value':'The attributes or association ends defined for the Artifact.\\r\\nThe association is a specialization of the ownedMember association.\\r\\n'}}" 
},{
	 "id": "342", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YETt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3e1eccb5 (key: documentation, value: An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.\\r\\nAn expression contains language-specific text strings used to describe a value or values, and an optional specification of the languages.\\r\\nOne predefined language for specifying expressions is OCL. Natural language or programming languages may also be used.\\r\\n\\r\\nAn operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.\\r\\nAn operation may invoke both the execution of method behaviors as well as other behavioral responses.\\r\\nOperation specializes TemplateableElement in order to support specification of template operations and bound operations.)'],'eModelElement':'Operation'}}" 
},{
	 "id": "343", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YET96tEei97MD7GK1RmA', 'key':'documentation','value':'An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element.\\r\\nAn expression contains language-speci'}}" 
},{
	 "id": "344", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEh96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@57dc4f69 (key: documentation, value: If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\r\\nIf this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\r\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif)'],'eModelElement':'isUnique'}}" 
},{
	 "id": "345", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YEiN6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.\\r\\nIf this operation has a return parameter, isUnique equals the value of '}}" 
},{
	 "id": "346", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEjN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@62b2484e (key: documentation, value: If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\r\\nIf this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\r\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif)'],'eModelElement':'lowerBound'}}" 
},{
	 "id": "347", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YEjd6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.\\r\\nIf this operation has a return parameter, lower equals the value of lower'}}" 
},{
	 "id": "348", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEkd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2435339 (key: documentation, value: If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\r\\nIf this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\r\\n\\r\\nresult = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif)'],'eModelElement':'upperBound'}}" 
},{
	 "id": "349", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YEkt6tEei97MD7GK1RmA', 'key':'documentation','value':'If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.\\r\\nIf this operation has a return parameter, upper equals the value of upper'}}" 
},{
	 "id": "350", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YEzt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@31a6008e (key: documentation, value: A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.\\r\\nA behavioral feature specifies that an instance of a classifier will respond to a designated request by invoking a behavior.\\r\\nBehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of behavioral aspects are modeled by subclasses of BehavioralFeature.\\r\\n\\r\\nA behavioral feature is implemented (realized) by a behavior. A behavioral feature specifies that a classifier will respond to a designated request by invoking its implementing method.\\r\\nThe concept of BehavioralFeature is extended to own ParameterSets.)'],'eModelElement':'BehavioralFeature'}}" 
},{
	 "id": "351", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YEz96tEei97MD7GK1RmA', 'key':'documentation','value':'A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances. BehavioralFeature is an abstract metaclass specializing Feature and Namespace. Kinds of beh'}}" 
},{
	 "id": "352", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YE8d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ceb96c8 (key: documentation, value: Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\\r\\n\\r\\nA classifier behavior is always a definition of behavior and not an illustration. It describes the sequence of state changes an instance of a classifier may undergo in the course of its lifetime. Its precise semantics depends on the kind of classifier. For example, the classifier behavior of a collaboration represents emergent behavior of all the parts, whereas the classifier behavior of a class is just the behavior of instances of the class separated from the behaviors of any of its parts.\\r\\nWhen a behavior is associated as the method of a behavioral feature, it defines the implementation of that feature; i.e., the computation that generates the effects of the behavioral feature.\\r\\n\\r\\nAs a classifier, a behavior can be specialized. Instantiating a behavior is referred to as \\\\'invoking\\\\' the behavior, an instantiated behavior is also called a behavior \\\\'execution.\\\\' A behavior may be invoked directly or its invocation may be the result of invoking the behavioral feature that specifies this behavior. A behavior can also be instantiated as an object in virtue of it being a class. The specification of a behavior can take a number of forms, as described in the subclasses of Behavior. Behavior is an abstract metaclass factoring out the commonalities of these different specification mechanisms.\\r\\n\\r\\nWhen a behavior is invoked, its execution receives a set of input values that are used to affect the course of execution and as a result of its execution it produces a set of output values which are returned, as specified by its parameters. The observable effects of a behavior execution may include changes of values of various objects involved in the execution, the creation and destruction of objects, generation of communications between objects, as well as an explicit set of output values.\\r\\n\\r\\nThe concept of Behavior is extended to own ParameterSets.)'],'eModelElement':'Behavior'}}" 
},{
	 "id": "353", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YE8t6tEei97MD7GK1RmA', 'key':'documentation','value':'Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective ill'}}" 
},{
	 "id": "354", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YFHN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@697b32c6 (key: documentation, value: References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution.\\r\\n)'],'eModelElement':'ownedParameter'}}" 
},{
	 "id": "355", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YFHd6tEei97MD7GK1RmA', 'key':'documentation','value':'References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavio'}}" 
},{
	 "id": "356", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YFjN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c35ee97 (key: documentation, value: An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes the interface must fulfill that contract. The obligations that may be associated with an interface are in the form of various kinds of constraints (such as pre- and post-conditions) or protocol specifications, which may impose ordering restrictions on interactions through the interface.\\r\\nSince interfaces are declarations, they are not instantiable. Instead, an interface specification is implemented by an instance of an instantiable classifier, which means that the instantiable classifier presents a public facade that conforms to the interface specification. Note that a given classifier may implement more than one interface and that an interface may be implemented by a number of different classifiers.\\r\\n\\r\\nAdds the capability for interfaces to include receptions (in addition to operations).\\r\\nSince an interface specifies conformance characteristics, it does not own detailed behavior specifications. Instead, interfaces may own a protocol state machine that specifies event sequences and pre/post conditions for the operations and receptions described by the interface.)'],'eModelElement':'Interface'}}" 
},{
	 "id": "357", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YFjd6tEei97MD7GK1RmA', 'key':'documentation','value':'An interface is a kind of classifier that represents a declaration of a set of coherent public features and obligations. An interface specifies a contract; any instance of a classifier that realizes t'}}" 
},{
	 "id": "358", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YGBN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@adf914d (key: documentation, value: A state machine owns one or more regions, which in turn own vertices and transitions.\\r\\nThe behaviored classifier context owning a state machine defines which signal and call triggers are defined for the state machine, and which attributes and operations are available in activities of the state machine. Signal triggers and call triggers for the state machine are defined according to the receptions and operations of this classifier.\\r\\n\\r\\nAs a kind of behavior, a state machine may have an associated behavioral feature (specification) and be the method of this behavioral feature. In this case the state machine specifies the behavior of this behavioral feature. The parameters of the state machine in this case match the parameters of the behavioral feature and provide the means for accessing (within the state machine) the behavioral feature parameters.\\r\\n\\r\\nA state machine without a context classifier may use triggers that are independent of receptions or operations of a classifier, i.e. either just signal triggers or call triggers based upon operation template parameters of the (parameterized) statemachine.\\r\\n)'],'eModelElement':'StateMachine'}}" 
},{
	 "id": "359", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YGBd6tEei97MD7GK1RmA', 'key':'documentation','value':'A state machine owns one or more regions, which in turn own vertices and transitions.\\r\\nThe behaviored classifier context owning a state machine defines which signal and call triggers are defined for t'}}" 
},{
	 "id": "360", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YGNt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@618ce703 (key: documentation, value: The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean\\r\\n\\r\\nresult = if (s2 = s1) then\\ntrue\\nelse if (s1.container->isEmpty) then\\ntrue\\nelse if (s2.container->isEmpty) then\\nfalse\\nelse (ancestor (s1, s2.container)))'],'eModelElement':'ancestor'}}" 
},{
	 "id": "361", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YGN96tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether s2 is an ancestor state of state s1. context StateMachine::ancestor (s1 : State, s2 : State) : Boolean\\r\\n\\r\\nresult = if (s2 = s1) then\\ntrue\\nelse if (s1.containe'}}" 
},{
	 "id": "362", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YGwt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ec3c6da (key: documentation, value: The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transition: A redefining transition redefines all properties of the corresponding redefined transition, except the source state and the trigger.\\r\\nresult = (redefinee.oclIsKindOf(Transition) and\\r\\n  let trans: Transition = redefinee.oclAsType(Transition) in\\r\\n    (source() = trans.source() and trigger() = tran.trigger())\\r\\nredefinee.isRedefinitionContextValid(self))'],'eModelElement':'isConsistentWith'}}" 
},{
	 "id": "363", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YGw96tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining transition is consistent with a redefined transition provided that the redefining transition has the following relation to the redefined transi'}}" 
},{
	 "id": "364", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YG9d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3ffcad7f (key: documentation, value: An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype «create».\\r\\nself.source.oclIsKindOf(Pseudostate) implies\\n(self.source.oclAsType(Pseudostate).kind = #initial) implies\\n(self.source.container = self.stateMachine.top) implies\\n((self.trigger->isEmpty) or\\n(self.trigger.stereotype.name = 'create'))\\n)'],'eModelElement':'initial_transition'}}" 
},{
	 "id": "365", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YG9t6tEei97MD7GK1RmA', 'key':'documentation','value':'An initial transition at the topmost level (region of a statemachine) either has no trigger or it has a trigger with the stereotype «create».\\r\\nself.source.oclIsKindOf(Pseudostate) implies\\n(self.source'}}" 
},{
	 "id": "366", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YG_d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10a171f1 (key: documentation, value: In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.\\r\\n\\r\\ntrue)'],'eModelElement':'signatures_compatible'}}" 
},{
	 "id": "367", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YG_t6tEei97MD7GK1RmA', 'key':'documentation','value':'In case of more than one trigger, the signatures of these must be compatible in case the parameters of the signal are assigned to local variables/attributes.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "368", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YHK96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f9fd64b (key: documentation, value: TransitionKind is an enumeration of the following literal values:\\r\\n  - external\\r\\n  - internal\\r\\n  - local\\r\\nkind=#local implies owner.source.isComposite\\r\\nkind=#external implies owner.source.isComposite)'],'eModelElement':'TransitionKind'}}" 
},{
	 "id": "369", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YHLN6tEei97MD7GK1RmA', 'key':'documentation','value':'TransitionKind is an enumeration of the following literal values:\\r\\n  - external\\r\\n  - internal\\r\\n  - local\\r\\nkind=#local implies owner.source.isComposite\\r\\nkind=#external implies owner.source.isComposite'}}" 
},{
	 "id": "370", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YHRd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2a458754 (key: documentation, value: Ports represent interaction points between a classifier and its environment. The interfaces associated with a port specify the nature of the interactions that may occur over a port. The required interfaces of a port characterize the requests which may be made from the classifier to its environment through this port. The provided interfaces of a port characterize requests to the classifier that its environment may make through this port.\\r\\n\\r\\nA port has the ability to specify that any requests arriving at this port are handled by the behavior of the instance of the owning classifier, rather than being forwarded to any contained instances, if any.\\r\\n\\r\\nPort is defined as a specialization of the general Port, adding an association to a protocol state machine.)'],'eModelElement':'Port'}}" 
},{
	 "id": "371", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YHRt6tEei97MD7GK1RmA', 'key':'documentation','value':'Ports represent interaction points between a classifier and its environment. The interfaces associated with a port specify the nature of the interactions that may occur over a port. The required inter'}}" 
},{
	 "id": "372", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YHd96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@36aaf323 (key: documentation, value: References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.\\r\\n)'],'eModelElement':'provided'}}" 
},{
	 "id": "373", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YHeN6tEei97MD7GK1RmA', 'key':'documentation','value':'References the interfaces specifying the set of operations and receptions which the classifier offers to its environment, and which it will handle either directly or by forwarding it to a part of its '}}" 
},{
	 "id": "374", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YHfd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1c74df1d (key: documentation, value: A state models a situation during which some (usually implicit) invariant condition holds. The invariant may represent a static situation such as an object waiting for some external event to occur. However, it can also model dynamic conditions such as the process of performing some behavior (i.e., the model element under consideration enters the state when the behavior commences and leaves it as soon as the behavior is completed). The following kinds of states are distinguished:\\r\\no Simple state,\\r\\no composite state, and\\r\\no submachine state.\\r\\nA composite state is either a simple composite state (with just one region) or an orthogonal state (with more than one region).\\r\\n\\r\\nSimple state\\r\\nA simple state is a state that does not have substates, i.e. it has no regions and it has no submachine state machine.\\r\\n\\r\\nComposite state\\r\\nA composite state either contains one region or is decomposed into two or more orthogonal regions. Each region has a set of mutually exclusive disjoint subvertices and a set of transitions. A given state may only be decomposed in one of these two ways. \\r\\nAny state enclosed within a region of a composite state is called a substate of that composite state. It is called a direct substate when it is not contained by any other state; otherwise it is referred to as a indirect substate. \\r\\nEach region of a composite state may have an initial pseudostate and a final state. A transition to the enclosing state represents a transition to the initial pseudostate in each region. A newly-created object takes it's topmost default transitions, originating from the topmost initial pseudostates of each region.\\r\\n\\r\\nA transition to a final state represents the completion of behavior in the enclosing region. Completion of behavior in all orthogonal regions represents completion of behavior by the enclosing state and triggers a completion event on the enclosing state. Completion of the topmost regions of an object corresponds to its termination.\\r\\n\\r\\nAn entry pseudostate is used to join an external transition terminating on that entry point to an internal transition emanating from that entry point. An exit pseudostate is used to join an internal transition terminating on that exit point to an external transition emanating from that exit point. The main purpose of such entry and exit points is to execute the state entry and exit actions respectively in between the actions that are associated with the joined transitions.\\r\\n\\r\\nSemantic variation point (default entry rule)\\r\\nIf a transition terminates on an enclosing state and the enclosed regions do not have an initial pseudostate, the interpretation of this situation is a semantic variation point. In some interpretations, this is considered an ill-formed model. That is, in those cases the initial pseudostate is mandatory. \\r\\nAn alternative interpretation allows this situation and it means that, when such a transition is taken, the state machine stays in the composite state, without entering any of the regions or their substates.\\r\\n\\r\\nSubmachine state\\r\\nA submachine state specifies the insertion of the specification of a submachine state machine. The state machine that contains the submachine state is called the containing state machine. The same state machine may be a submachine more than once in the context of a single containing state machine.\\r\\n\\r\\nA submachine state is semantically equivalent to a composite state. The regions of the submachine state machine are the regions of the composite state. The entry, exit and behavior actions, and internal transitions, are defined as part of the state. Submachine state is a decomposition mechanism that allows factoring of common behaviors and their reuse.\\r\\nTransitions in the containing state machine can have entry/exit points of the inserted state machine as targets/sources.\\r\\n\\r\\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.)'],'eModelElement':'State'}}" 
},{
	 "id": "375", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YHft6tEei97MD7GK1RmA', 'key':'documentation','value':'A state models a situation during which some (usually implicit) invariant condition holds. The invariant may represent a static situation such as an object waiting for some external event to occur. Ho'}}" 
},{
	 "id": "376", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YHmt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2207f917 (key: documentation, value: The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.\\r\\nself.isSubmachineState implies (self.connection->forAll (cp |\\r\\ncp.entry->forAll (p | p.statemachine = self.submachine) and\\r\\ncp.exit->forAll (p | p.statemachine = self.submachine))))'],'eModelElement':'destinations_or_sources_of_transitions'}}" 
},{
	 "id": "377", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YHm96tEei97MD7GK1RmA', 'key':'documentation','value':'The connection point references used as destinations/sources of transitions associated with a submachine state must be defined as entry/exit points in the submachine state machine.\\r\\nself.isSubmachineS'}}" 
},{
	 "id": "378", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YH9d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6a41e384 (key: documentation, value: Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions, and to the postcondition of the incoming transitions.\\r\\n)'],'eModelElement':'stateInvariant'}}" 
},{
	 "id": "379", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YH9t6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies conditions that are always true when this state is the current state. In protocol state machines, state invariants are additional conditions to the preconditions of the outgoing transitions,'}}" 
},{
	 "id": "380", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YH-d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4cdf1e74 (key: documentation, value: An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\\r\\n)'],'eModelElement':'entry'}}" 
},{
	 "id": "381", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YH-t6tEei97MD7GK1RmA', 'key':'documentation','value':'An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any int'}}" 
},{
	 "id": "382", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIBd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@efad28e (key: documentation, value: A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reaches a state configuration where it is no longer deferred.\\r\\n)'],'eModelElement':'deferrableTrigger'}}" 
},{
	 "id": "383", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIBt6tEei97MD7GK1RmA', 'key':'documentation','value':'A list of triggers that are candidates to be retained by the state machine if they trigger no transitions out of the state (not consumed). A deferred trigger is retained until the state machine reache'}}" 
},{
	 "id": "384", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIbN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4e32c969 (key: documentation, value: The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.\\r\\n(self.kind = #initial) implies (self.outgoing.guard->isEmpty()\\r\\n  and self.outgoing.trigger->isEmpty()))'],'eModelElement':'outgoing_from_initial'}}" 
},{
	 "id": "385", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIbd6tEei97MD7GK1RmA', 'key':'documentation','value':'The outgoing transition from and initial vertex may have a behavior, but not a trigger or a guard.\\r\\n(self.kind = #initial) implies (self.outgoing.guard->isEmpty()\\r\\n  and self.outgoing.trigger->isEmpty'}}" 
},{
	 "id": "386", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIf96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@56689d2b (key: documentation, value: PseudoStateKind is an enumeration of the following literal values:\\r\\n  - initial\\r\\n  - deepHistory\\r\\n  - shallowHistory\\r\\n  - join\\r\\n  - fork\\r\\n  - junction\\r\\n  - choice\\r\\n  - entryPoint\\r\\n  - exitPoint\\r\\n  - terminate)'],'eModelElement':'PseudostateKind'}}" 
},{
	 "id": "387", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIgN6tEei97MD7GK1RmA', 'key':'documentation','value':'PseudoStateKind is an enumeration of the following literal values:\\r\\n  - initial\\r\\n  - deepHistory\\r\\n  - shallowHistory\\r\\n  - join\\r\\n  - fork\\r\\n  - junction\\r\\n  - choice\\r\\n  - entryPoint\\r\\n  - exitPoint\\r\\n  - t'}}" 
},{
	 "id": "388", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIjt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@72e34af (key: documentation, value: Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\\r\\n(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers.)'],'eModelElement':'fork'}}" 
},{
	 "id": "389", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIj96tEei97MD7GK1RmA', 'key':'documentation','value':'Fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices\\r\\n(i.e. vertices in different regions of a composite state). The segments outg'}}" 
},{
	 "id": "390", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIkd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c029938 (key: documentation, value: Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be used to converge multiple incoming transitions into a single outgoing transition representing a shared transition path (this is known as an merge). Conversely, they can be used to split an incoming transition into multiple outgoing transition segments with different guard conditions. This realizes a static conditional branch. (In the latter case, outgoing transitions whose guard conditions evaluate to false are disabled. A predefined guard denoted 'else' may be defined for at most one outgoing transition. This transition is enabled if all the guards labeling the other transitions are false.) Static conditional branches are distinct from dynamic conditional branches that are realized by choice vertices (described below).)'],'eModelElement':'junction'}}" 
},{
	 "id": "391", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIkt6tEei97MD7GK1RmA', 'key':'documentation','value':'Junction vertices are semantic-free vertices that are used to chain together multiple transitions. They are used to construct compound transition paths between states. For example, a junction can be u'}}" 
},{
	 "id": "392", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YIoN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@61ef671b (key: documentation, value: Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines.\\r\\n\\r\\nProtocol conformance declares that the specific protocol state machine specifies a protocol that conforms to the general state machine one, or that the specific behavioral state machine abide by the protocol of the general protocol state machine.\\r\\n\\r\\nA protocol state machine is owned by a classifier. The classifiers owning a general state machine and an associated specific state machine are generally also connected by a generalization or a realization link.\\r\\n)'],'eModelElement':'ProtocolConformance'}}" 
},{
	 "id": "393", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YIod6tEei97MD7GK1RmA', 'key':'documentation','value':'Protocol state machines can be redefined into more specific protocol state machines, or into behavioral state machines.\\r\\n\\r\\nProtocol conformance declares that the specific protocol state machine specif'}}" 
},{
	 "id": "394", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJGN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3d2db172 (key: documentation, value: A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.\\r\\nThe types of the connector ends of the redefining connector may specialize the types of the connector ends of the redefined connector. The properties of the connector ends of the redefining connector may be replaced.)'],'eModelElement':'redefinedConnector'}}" 
},{
	 "id": "395", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJGd6tEei97MD7GK1RmA', 'key':'documentation','value':'A connector may be redefined when its containing classifier is specialized. The redefining connector may have a type that specializes the type of the redefined connector.\\r\\nThe types of the connector e'}}" 
},{
	 "id": "396", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJJt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@32d2dda7 (key: documentation, value: ConnectorKind is an enumeration of the following literal values:\\r\\n  - assembly = Indicates that the connector is an assembly connector.\\r\\n  - delegation = Indicates that the connector is a delegation connector.)'],'eModelElement':'ConnectorKind'}}" 
},{
	 "id": "397", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJJ96tEei97MD7GK1RmA', 'key':'documentation','value':'ConnectorKind is an enumeration of the following literal values:\\r\\n  - assembly = Indicates that the connector is an assembly connector.\\r\\n  - delegation = Indicates that the connector is a delegation c'}}" 
},{
	 "id": "398", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJZ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@b943a6 (key: documentation, value: The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default\\r\\nlower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.\\r\\nresult = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif)'],'eModelElement':'lowerBound'}}" 
},{
	 "id": "399", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJaN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default\\r\\nlower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.'}}" 
},{
	 "id": "400", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJtN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@13d2ec0d (key: documentation, value: This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\\r\\n\\r\\nIn addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example \\\\'SVG\\\\' could instead be expressed as \\\\'MIME: image/svg+xml\\\\'.)'],'eModelElement':'format'}}" 
},{
	 "id": "401", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJtd6tEei97MD7GK1RmA', 'key':'documentation','value':'This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.\\r\\n\\r\\nIn addition the prefix 'MIME:'}}" 
},{
	 "id": "402", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJt96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7d6ae655 (key: documentation, value: A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.\\r\\n\\r\\nA profile introduces several constraints, or restrictions, on ordinary metamodeling through the use of the metaclasses defined in this package.\\r\\n\\r\\nA profile is a restricted form of a metamodel that must always be related to a reference metamodel, such as UML, as described below. A profile cannot be used without its reference metamodel, and defines a limited capability to extendmetaclasses of the reference metamodel. The extensions are defined as stereotypes that apply to existing metaclasses.)'],'eModelElement':'Profile'}}" 
},{
	 "id": "403", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJuN6tEei97MD7GK1RmA', 'key':'documentation','value':'A Profile is a kind of Package that extends a reference metamodel. The primary extension construct is the Stereotype, which are defined as part of Profiles.\\r\\n\\r\\nA profile introduces several constraints'}}" 
},{
	 "id": "404", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6ad41793 (key: documentation, value: An element imported as a metaclassReference is not specialized or generalized in a Profile.\\r\\nself.metaclassReference.importedElement->\\r\\n  select(c | c.oclIsKindOf(Classifier) and\\r\\n    (c.generalization.namespace = self or\\r\\n      (c.specialization.namespace = self) )->isEmpty())'],'eModelElement':'metaclass_reference_not_specialized'}}" 
},{
	 "id": "405", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJu96tEei97MD7GK1RmA', 'key':'documentation','value':'An element imported as a metaclassReference is not specialized or generalized in a Profile.\\r\\nself.metaclassReference.importedElement->\\r\\n  select(c | c.oclIsKindOf(Classifier) and\\r\\n    (c.generalizatio'}}" 
},{
	 "id": "406", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YJwt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7c76e831 (key: documentation, value: All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.\\r\\nself.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages())->\\r\\n  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty())'],'eModelElement':'references_same_metamodel'}}" 
},{
	 "id": "407", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YJw96tEei97MD7GK1RmA', 'key':'documentation','value':'All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.\\r\\nself.metamodelReference.importedPackage.elementImport.importedElem'}}" 
},{
	 "id": "408", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKEd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@39f6e559 (key: documentation, value: CallConcurrencyKind is an enumeration with the following literals:\\r\\n  - sequential = No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occur. Instances that invoke a behavioral feature need to coordinate so that only one invocation to a target on any behavioral feature occurs at once.\\r\\n  - guarded = Multiple invocations of a behavioral feature may occur simultaneously to one instance, but only one is allowed to commence. The others are blocked until the performance of the first behavioral feature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocks.\\r\\n  - concurrent = Multiple invocations of a behavioral feature may occur simultaneously to one instance and all of them may proceed concurrently.)'],'eModelElement':'CallConcurrencyKind'}}" 
},{
	 "id": "409", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKEt6tEei97MD7GK1RmA', 'key':'documentation','value':'CallConcurrencyKind is an enumeration with the following literals:\\r\\n  - sequential = No concurrency management mechanism is associated with the operation and, therefore, concurrency conflicts may occu'}}" 
},{
	 "id": "410", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKHd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1c12b0af (key: documentation, value: A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\r\\n\\r\\nA typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.\\r\\nA data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\r\\nA typical use of data types would be to represent programming language primitive types or CORBA basic types. For example, integer and string types are often treated as data types.\\r\\n)'],'eModelElement':'DataType'}}" 
},{
	 "id": "411", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKHt6tEei97MD7GK1RmA', 'key':'documentation','value':'A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the modeling of structured data types.\\r\\n\\r\\nA typical use of data types would be to'}}" 
},{
	 "id": "412", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKSN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@76e84e05 (key: documentation, value: AggregationKind is an enumeration of the following literal values:\\r\\n  - none = Indicates that the property has no aggregation.\\r\\n  - shared = Indicates that the property has a shared aggregation.\\r\\n  - composite = Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts).)'],'eModelElement':'AggregationKind'}}" 
},{
	 "id": "413", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKSd6tEei97MD7GK1RmA', 'key':'documentation','value':'AggregationKind is an enumeration of the following literal values:\\r\\n  - none = Indicates that the property has no aggregation.\\r\\n  - shared = Indicates that the property has a shared aggregation.\\r\\n  - '}}" 
},{
	 "id": "414", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKXN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6c1f1f12 (key: documentation, value: ParameterDirectionKind is an enumeration of the following literal values:\\r\\n  - in = Indicates that parameter values are passed into the behavioral element by the caller.\\r\\n  - inout = Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.\\r\\n  - out = Indicates that parameter values are passed from a behavioral element out to the caller.\\r\\n  - return = Indicates that parameter values are passed as return values from a behavioral element back to the caller.)'],'eModelElement':'ParameterDirectionKind'}}" 
},{
	 "id": "415", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKXd6tEei97MD7GK1RmA', 'key':'documentation','value':'ParameterDirectionKind is an enumeration of the following literal values:\\r\\n  - in = Indicates that parameter values are passed into the behavioral element by the caller.\\r\\n  - inout = Indicates that pa'}}" 
},{
	 "id": "416", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKct6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@65744599 (key: documentation, value: A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a collaboration is applied in a given context, by binding specific entities from that context to the roles of the collaboration. Depending on the context, these entities could be structural features of a classifier, instance specifications, or even roles in some containing collaboration. There may be multiple occurrences of a given collaboration within a classifier, each involving a different set of roles and connectors. A given role or connector may be involved in multiple occurrences of the same or different collaborations.\\r\\n\\r\\nAssociated dependencies map features of the collaboration type to features in the classifier. These dependencies indicate which role in the classifier plays which role in the collaboration.\\r\\n)'],'eModelElement':'CollaborationUse'}}" 
},{
	 "id": "417", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKc96tEei97MD7GK1RmA', 'key':'documentation','value':'A collaboration use represents one particular use of a collaboration to explain the relationships between the properties of a classifier. A collaboration use shows how the pattern described by a colla'}}" 
},{
	 "id": "418", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKkN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5211f609 (key: documentation, value: A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in the collaboration. A connectable element may be bound to multiple roles in the same collaboration use (that is, it may play multiple roles).\\r\\n)'],'eModelElement':'roleBinding'}}" 
},{
	 "id": "419", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKkd6tEei97MD7GK1RmA', 'key':'documentation','value':'A mapping between features of the collaboration type and features of the classifier or operation. This mapping indicates which connectable element of the classifier or operation plays which role(s) in'}}" 
},{
	 "id": "420", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKlN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@22d4055e (key: documentation, value: A collaboration is represented as a kind of classifier and defines a set of cooperating entities to be played by instances (its roles), as well as a set of connectors that define communication paths between the participating instances. The cooperating entities are the properties of the collaboration.\\r\\n\\r\\nA collaboration specifies a view (or projection) of a set of cooperating classifiers. It describes the required links between instances that play the roles of the collaboration, as well as the features required of the classifiers that specify the participating instances. Several collaborations may describe different projections of the same set of classifiers.\\r\\n)'],'eModelElement':'Collaboration'}}" 
},{
	 "id": "421", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKld6tEei97MD7GK1RmA', 'key':'documentation','value':'A collaboration is represented as a kind of classifier and defines a set of cooperating entities to be played by instances (its roles), as well as a set of connectors that define communication paths b'}}" 
},{
	 "id": "422", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YKm96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@72ff2dbe (key: documentation, value: A UseCase is a kind of behaviored classifier that represents a declaration of an offered behavior. Each use case specifies some behavior, possibly including variants, that the subject can perform in collaboration with one or more actors. Use cases define the offered behavior of the subject without reference to its internal structure. These behaviors, involving\\r\\ninteractions between the actor and the subject, may result in changes to the state of the subject and communications with its environment. A use case can include possible variations of its basic behavior, including exceptional behavior and error handling.\\r\\n\\r\\nThe subject of a use case could be a physical system or any other element that may have behavior, such as a component, subsystem or class. Each use case specifies a unit of useful functionality that the subject provides to its users, i.e., a specific way of interacting with the subject. This functionality, which is initiated by an actor, must always be completed for the use case to complete. It is deemed complete if, after its execution, the subject will be in a state in which no further inputs or actions are expected and the use case can be initiated again or in an error state.\\r\\n\\r\\nUse cases can be used both for specification of the (external) requirements on a subject and for the specification of the functionality offered by a subject. Moreover, the use cases also state the requirements the specified subject poses on its environment by defining how they should interact with the subject so that it will be able to perform its services.\\r\\n\\r\\nThe behavior of a use case can be described by a specification that is some kind of Behavior (through its ownedBehavior relationship), such as interactions, activities, and state machines, or by pre-conditions and post-conditions as well as by natural language text where appropriate. It may also be described indirectly through a Collaboration that uses the use case and its actors as the classifiers that type its parts. Which of these techniques to use depends on the nature of the use case behavior as well as on the intended reader. These descriptions can be combined.\\r\\n)'],'eModelElement':'UseCase'}}" 
},{
	 "id": "423", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YKnN6tEei97MD7GK1RmA', 'key':'documentation','value':'A UseCase is a kind of behaviored classifier that represents a declaration of an offered behavior. Each use case specifies some behavior, possibly including variants, that the subject can perform in c'}}" 
},{
	 "id": "424", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK0t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f330d92 (key: documentation, value: Note that the included use case is not optional, and is always required for the  including use case to execute correctly.\\r\\n\\r\\n)'],'eModelElement':'Include'}}" 
},{
	 "id": "425", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK096tEei97MD7GK1RmA', 'key':'documentation','value':'Note that the included use case is not optional, and is always required for the  including use case to execute correctly.\\r\\n\\r\\n'}}" 
},{
	 "id": "426", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK1d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2c567ec7 (key: documentation, value: References the use case that is to be included.\\r\\n)'],'eModelElement':'addition'}}" 
},{
	 "id": "427", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK1t6tEei97MD7GK1RmA', 'key':'documentation','value':'References the use case that is to be included.\\r\\n'}}" 
},{
	 "id": "428", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK3d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@fcbd83 (key: documentation, value: This relationship specifies that the behavior of a use case may be extended by the behavior of another (usually supplementary) use case. The extension takes place at one or more specific extension points defined in the extended use case. Note, however, that the extended use case is defined independently of the extending use case and is meaningful independently of the extending use case. On the other hand, the extending use case typically defines behavior that may not necessarily be meaningful by itself. Instead, the extending use case defines a set of modular behavior increments that augment an execution of the extended use case under specific conditions.\\r\\n\\r\\nNote that the same extending use case can extend more than one use case. Furthermore, an extending use case may itself be extended.\\r\\n\\r\\nIt is a kind of DirectedRelationship, such that the source is the extending use case and the destination is the extended use case. It is also a kind of NamedElement so that it can have a name in the context of its owning use case. The extend relationship itself is owned by the extending use case.\\r\\n)'],'eModelElement':'Extend'}}" 
},{
	 "id": "429", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK3t6tEei97MD7GK1RmA', 'key':'documentation','value':'This relationship specifies that the behavior of a use case may be extended by the behavior of another (usually supplementary) use case. The extension takes place at one or more specific extension poi'}}" 
},{
	 "id": "430", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK4N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3460b560 (key: documentation, value: The extension points referenced by the extend relationship must belong to the use case that is being extended.\\r\\n\\r\\n\\r\\nextensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp)))'],'eModelElement':'extension_points'}}" 
},{
	 "id": "431", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK4d6tEei97MD7GK1RmA', 'key':'documentation','value':'The extension points referenced by the extend relationship must belong to the use case that is being extended.\\r\\n\\r\\n\\r\\nextensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))'}}" 
},{
	 "id": "432", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK7N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1d300e25 (key: documentation, value: References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is unconditional.\\r\\n)'],'eModelElement':'condition'}}" 
},{
	 "id": "433", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK7d6tEei97MD7GK1RmA', 'key':'documentation','value':'References the condition that must hold when the first extension point is reached for the extension to take place. If no constraint is associated with the extend relationship, the extension is uncondi'}}" 
},{
	 "id": "434", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YK8N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5a0f76d9 (key: documentation, value: An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)\\r\\n)'],'eModelElement':'extensionLocation'}}" 
},{
	 "id": "435", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YK8d6tEei97MD7GK1RmA', 'key':'documentation','value':'An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the ext'}}" 
},{
	 "id": "436", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YLQt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ae5bdf4 (key: documentation, value: The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.\\r\\n\\r\\nresult = if subExpression->notEmpty()\\nthen subExpression->iterate(se; stringValue = | stringValue.concat(se.stringValue()))\\nelse operand->iterate()(op; stringValue =  | stringValue.concat(op.value)))'],'eModelElement':'stringValue'}}" 
},{
	 "id": "437", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YLQ96tEei97MD7GK1RmA', 'key':'documentation','value':'The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression.\\r\\n\\r\\nresult = if subExpression-'}}" 
},{
	 "id": "438", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YLat6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4bf5a866 (key: documentation, value: A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both.\\r\\n\\r\\nThis mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.\\r\\n\\r\\nConceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.\\r\\nA package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the source element conceptually adds the characteristics of the target element to its own characteristics resulting in an element that combines the characteristics of both. This mechanism should be used when elements defined in different packages have the same name and are intended to represent the same concept. Most often it is used to provide different definitions of a given concept for different purposes, starting from a common base definition. A given base concept is extended in increments, with each increment defined in a separate merged package. By selecting which increments to merge, it is possible to obtain a custom definition of a concept for a specific end. Package merge is particularly useful in meta-modeling and is extensively used in the definition of the UML metamodel.\\r\\n\\r\\nConceptually, a package merge can be viewed as an operation that takes the contents of two packages and produces a new package that combines the contents of the packages involved in the merge. In terms of model semantics, there is no difference between a model with explicit package merges, and a model in which all the merges have been performed.\\r\\n)'],'eModelElement':'PackageMerge'}}" 
},{
	 "id": "439", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YLa96tEei97MD7GK1RmA', 'key':'documentation','value':'A package merge is a directed relationship between two packages, that indicates that the contents of the two packages are to be combined. It is very similar to Generalization in the sense that the sou'}}" 
},{
	 "id": "440", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YLht6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@124d1a50 (key: documentation, value: Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.\\r\\nIt is possible to extend the set of applicable enumeration literals in other packages or profiles.\\r\\n\\r\\nEnumeration is a kind of data type, whose instances may be any of a number of user-defined enumeration literals.\\r\\nIt is possible to extend the set of applicable enumeration literals in other packages or profiles.\\r\\n)'],'eModelElement':'Enumeration'}}" 
},{
	 "id": "441", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YLh96tEei97MD7GK1RmA', 'key':'documentation','value':'Enumeration is a kind of data type, whose instances may be any of a number of predefined enumeration literals.\\r\\nIt is possible to extend the set of applicable enumeration literals in other packages or'}}" 
},{
	 "id": "442", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YLlN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@69467bb1 (key: documentation, value: An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity.\\r\\nThe description may include:\\r\\n\\r\\n- Classification of the entity by one or more classifiers of which the entity is an instance. If the only classifier specified is abstract, then the instance specification only partially describes the entity.\\r\\n- The kind of instance, based on its classifier or classifiers -- for example, an instance specification whose classifier is a class describes an object of that class, while an instance specification whose classifier is an association describes a link of that association.\\r\\n- Specification of values of structural features of the entity. Not all structural features of all classifiers of the instance specification need be represented by slots, in which case the instance specification is a partial description.\\r\\n- Specification of how to compute, derive or construct the instance (optional).\\r\\n\\r\\nInstanceSpecification is a concrete class.\\r\\n\\r\\nIn the metamodel, InstanceSpecification is a specialization of DeploymentTarget and DeployedArtifact.)'],'eModelElement':'InstanceSpecification'}}" 
},{
	 "id": "443", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YLld6tEei97MD7GK1RmA', 'key':'documentation','value':'An instance specification specifies existence of an entity in a modeled system and completely or partially describes the entity.\\r\\nThe description may include:\\r\\n\\r\\n- Classification of the entity by one '}}" 
},{
	 "id": "444", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YMT96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1b22ce0b (key: documentation, value: A function behavior has at least one output parameter.\\r\\nself.ownedParameters->\\r\\n  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1)'],'eModelElement':'one_output_parameter'}}" 
},{
	 "id": "445", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YMUN6tEei97MD7GK1RmA', 'key':'documentation','value':'A function behavior has at least one output parameter.\\r\\nself.ownedParameters->\\r\\n  select(p | p.direction=#out or p.direction=#inout or p.direction=#return)->size() >= 1'}}" 
},{
	 "id": "446", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YMV96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f1db7cb (key: documentation, value: The types of parameters are all data types, which may not nest anything but other datatypes.\\r\\ndef: hasAllDataTypeAttributes(d : DataType) : Boolean =\\r\\n  d.ownedAttribute->forAll(a |\\r\\n    a.type.oclIsTypeOf(DataType) and\\r\\n      hasAllDataTypeAttributes(a.type))\\r\\nself.ownedParameters->forAll(p | p.type.notEmpty() and\\r\\n  p.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p)))'],'eModelElement':'types_of_parameters'}}" 
},{
	 "id": "447", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YMWN6tEei97MD7GK1RmA', 'key':'documentation','value':'The types of parameters are all data types, which may not nest anything but other datatypes.\\r\\ndef: hasAllDataTypeAttributes(d : DataType) : Boolean =\\r\\n  d.ownedAttribute->forAll(a |\\r\\n    a.type.oclIsT'}}" 
},{
	 "id": "448", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YMwt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@72e920e3 (key: documentation, value: A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins when merged with CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.\\r\\n\\r\\nNote - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of \\\\'atomicity\\\\', which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.\\r\\n\\r\\nA structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins in CompleteStructuredActivities. The execution of any embedded actions may not begin until the structured activity node has received its object and control tokens. The availability of output tokens from the structured activity node does not occur until all embedded actions have completed execution.\\r\\n\\r\\nBecause of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is \\\\'isolated,\\\\' then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.\\r\\n\\r\\nNote - Any required isolation may be achieved using a locking mechanisms, or it may simply sequentialize execution to avoid concurrency conflicts. Isolation is different from the property of \\\\'atomicity\\\\', which is the guarantee that a group of actions either all complete successfully or have no effect at all. Atomicity generally requires a rollback mechanism to prevent committing partial results.\\r\\n)'],'eModelElement':'StructuredActivityNode'}}" 
},{
	 "id": "449", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YMw96tEei97MD7GK1RmA', 'key':'documentation','value':'A structured activity node represents a structured portion of the activity that is not shared with any other structured node, except for nesting. It may have control edges connected to it, and pins wh'}}" 
},{
	 "id": "450", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YM4d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6a3efb8 (key: documentation, value: Activity groups are a generic grouping construct for nodes and edges. Nodes and edges can belong to more than one group.\\r\\nThey have no inherent semantics and can be used for various purposes. Subclasses of ActivityGroup may add semantics.\\r\\n)'],'eModelElement':'ActivityGroup'}}" 
},{
	 "id": "451", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YM4t6tEei97MD7GK1RmA', 'key':'documentation','value':'Activity groups are a generic grouping construct for nodes and edges. Nodes and edges can belong to more than one group.\\r\\nThey have no inherent semantics and can be used for various purposes. Subclass'}}" 
},{
	 "id": "452", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YNEt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3ab7bd8 (key: documentation, value: An activity specifies the coordination of executions of subordinate behaviors, using a control and data flow model. The subordinate behaviors coordinated by these models may be initiated because other behaviors in the model finish executing, because objects and data become available, or because events occur external to the flow. The flow of execution is modeled as activity nodes connected by activity edges. A node can be the execution of a subordinate behavior, such as an arithmetic computation, a call to an operation, or manipulation of object contents. Activity nodes also include flow-of-control constructs, such as synchronization, decision, and concurrency control. Activities may form invocation hierarchies invoking other activities, ultimately resolving to individual actions. In an object-oriented model, activities are usually invoked indirectly as methods bound to operations that are directly invoked. \\r\\n\\r\\nActivities may describe procedural computation. In this context, they are the methods corresponding to operations on classes. Activities may be applied to organizational modeling for business process engineering and workflow. In this context, events often originate from inside the system, such as the finishing of a task, but also from outside the system, such as a customer call. Activities can also be used for information system modeling to specify system level processes. Activities may contain actions of various kinds:\\r\\n- occurrences of primitive functions, such as arithmetic functions.\\r\\n- invocations of behavior, such as activities.\\r\\n- communication actions, such as sending of signals.\\r\\n- manipulations of objects, such as reading or writing attributes or associations.\\r\\n\\r\\nActions have no further decomposition in the activity containing them. However, the execution of a single action may induce the execution of many other actions. For example, a call action invokes an operation which is implemented by an activity containing actions that execute before the call action completes.)'],'eModelElement':'Activity'}}" 
},{
	 "id": "453", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YNE96tEei97MD7GK1RmA', 'key':'documentation','value':'An activity specifies the coordination of executions of subordinate behaviors, using a control and data flow model. The subordinate behaviors coordinated by these models may be initiated because other'}}" 
},{
	 "id": "454", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YNS96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5644707 (key: documentation, value: A variable specifies data storage shared by the actions within a group. There are actions to write and read variables. These actions are treated as side effecting actions, similar to the actions to write and read object attributes and associations. There are no sequencing constraints among actions that access the same variable. Such actions must be explicitly coordinated by control flows or other constraints.\\r\\n\\r\\nAny values contained by a variable must conform to the type of the variable and have cardinalities allowed by the multiplicity of the variable.\\r\\n\\r\\nA variable is considered a connectable element.)'],'eModelElement':'Variable'}}" 
},{
	 "id": "455", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YNTN6tEei97MD7GK1RmA', 'key':'documentation','value':'A variable specifies data storage shared by the actions within a group. There are actions to write and read variables. These actions are treated as side effecting actions, similar to the actions to wr'}}" 
},{
	 "id": "456", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YNVt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@ca47625 (key: documentation, value: The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.\\r\\n\\r\\nresult = true)'],'eModelElement':'isAccessibleBy'}}" 
},{
	 "id": "457", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YNV96tEei97MD7GK1RmA', 'key':'documentation','value':'The isAccessibleBy() operation is not defined in standard UML. Implementations should define it to specify which actions can access a variable.\\r\\n\\r\\nresult = true'}}" 
},{
	 "id": "458", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YN496tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@68b3d69f (key: documentation, value: Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.\\r\\n\\r\\ntrue)'],'eModelElement':'interrupting_edges'}}" 
},{
	 "id": "459", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YN5N6tEei97MD7GK1RmA', 'key':'documentation','value':'Interrupting edges of a region must have their source node in the region and their target node outside the region in the same activity containing the region.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "460", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YOIt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4bca1fcb (key: documentation, value: An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.\\r\\nAn object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be used in a variety of ways, depending on where objects are flowing from and to, as described in the semantics section.\\r\\nComplete object nodes add support for token selection, limitation on the number of tokens, specifying the state required for tokens, and carrying control values.\\r\\n)'],'eModelElement':'ObjectNode'}}" 
},{
	 "id": "461", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YOI96tEei97MD7GK1RmA', 'key':'documentation','value':'An object node is an activity node that indicates an instance of a particular classifier, possibly in a particular state, may be available at a particular point in the activity. Object nodes can be us'}}" 
},{
	 "id": "462", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YOmd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@13c0e4ec (key: documentation, value: If true, the call is synchronous and the caller waits for completion of the invoked behavior.\\r\\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.\\r\\n)'],'eModelElement':'isSynchronous'}}" 
},{
	 "id": "463", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YOmt6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, the call is synchronous and the caller waits for completion of the invoked behavior.\\r\\nIf false, the call is asynchronous and the caller proceeds immediately and does not expect a return value'}}" 
},{
	 "id": "464", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YO0N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@22a179e1 (key: documentation, value: The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.\\r\\n\\r\\ntrue)'],'eModelElement':'type_ordering_multiplicity'}}" 
},{
	 "id": "465", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YO0d6tEei97MD7GK1RmA', 'key':'documentation','value':'The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "466", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YO_N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@595393ef (key: documentation, value: The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.\\r\\n\\r\\ntrue)'],'eModelElement':'type_ordering_multiplicity'}}" 
},{
	 "id": "467", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YO_d6tEei97MD7GK1RmA', 'key':'documentation','value':'The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "468", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YPH96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4ba45fdc (key: documentation, value: A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. In the metamodel, a Usage is a Dependency in which the client requires the presence of the supplier.\\r\\n)'],'eModelElement':'Usage'}}" 
},{
	 "id": "469", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YPIN6tEei97MD7GK1RmA', 'key':'documentation','value':'A usage is a relationship in which one element requires another element (or set of elements) for its full implementation or operation. In the metamodel, a Usage is a Dependency in which the client req'}}" 
},{
	 "id": "470", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YPXt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@150988d7 (key: documentation, value: Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.\\r\\n\\r\\ntrue)'],'eModelElement':'no_incoming_edges'}}" 
},{
	 "id": "471", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YPX96tEei97MD7GK1RmA', 'key':'documentation','value':'Activity parameter object nodes with no incoming edges and one or more outgoing edges must have a parameter with in or inout direction.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "472", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YPZt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3afdce63 (key: documentation, value: Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.\\r\\n\\r\\ntrue)'],'eModelElement':'no_outgoing_edges'}}" 
},{
	 "id": "473", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YPZ96tEei97MD7GK1RmA', 'key':'documentation','value':'Activity parameter object nodes with no outgoing edges and one or more incoming edges must have a parameter with out, inout, or return direction.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "474", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YPcd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4456a6ae (key: documentation, value: A Message is a NamedElement that defines a particular communication between Lifelines of an Interaction. A communication can be e.g. raising a signal, invoking an Operation, creating or destroying an Instance. The Message specifies not only the kind of communication given by the dispatching ExecutionSpecification, but also the sender and the receiver. A Message associates normally two OccurrenceSpecifications - one sending OccurrenceSpecification and one receiving OccurrenceSpecification.\\r\\n)'],'eModelElement':'Message'}}" 
},{
	 "id": "475", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YPct6tEei97MD7GK1RmA', 'key':'documentation','value':'A Message is a NamedElement that defines a particular communication between Lifelines of an Interaction. A communication can be e.g. raising a signal, invoking an Operation, creating or destroying an '}}" 
},{
	 "id": "476", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YPyN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@76f8d178 (key: documentation, value: MessageKind is an enumeration of the following values:\\r\\n  - complete = sendEvent and receiveEvent are present\\r\\n  - lost = sendEvent present and receiveEvent absent\\r\\n  - found = sendEvent absent and receiveEvent present\\r\\n  - unknown = sendEvent and receiveEvent absent (should not appear))'],'eModelElement':'MessageKind'}}" 
},{
	 "id": "477", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YPyd6tEei97MD7GK1RmA', 'key':'documentation','value':'MessageKind is an enumeration of the following values:\\r\\n  - complete = sendEvent and receiveEvent are present\\r\\n  - lost = sendEvent present and receiveEvent absent\\r\\n  - found = sendEvent absent and re'}}" 
},{
	 "id": "478", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YP196tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@67288410 (key: documentation, value: MessageSort is an enumeration of the following values:\\r\\n  - synchCall = the message was generated by a synchronous call to an operation\\r\\n  - asynchCall = the message was generated by an asynchronous call to an operation; i.e., a CallAction for which isSynchronous is false\\r\\n  - asynchSignal = the message was generated by an asynchronous send action\\r\\n  - createMessage = the message designating the creation of another lifeline object\\r\\n  - deleteMessage = the message designating the termination of anther lifeline\\r\\n  - reply = the message is a reply message to an operation call)'],'eModelElement':'MessageSort'}}" 
},{
	 "id": "479", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YP2N6tEei97MD7GK1RmA', 'key':'documentation','value':'MessageSort is an enumeration of the following values:\\r\\n  - synchCall = the message was generated by a synchronous call to an operation\\r\\n  - asynchCall = the message was generated by an asynchronous c'}}" 
},{
	 "id": "480", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YP3d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@58cf526c (key: documentation, value: The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\\r\\n= false.\\r\\n)'],'eModelElement':'asynchCall'}}" 
},{
	 "id": "481", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YP3t6tEei97MD7GK1RmA', 'key':'documentation','value':'The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous\\r\\n= false.\\r\\n'}}" 
},{
	 "id": "482", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQAd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1eaa8c2a (key: documentation, value: Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\\r\\n)'],'eModelElement':'formalGate'}}" 
},{
	 "id": "483", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQAt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it.\\r\\n'}}" 
},{
	 "id": "484", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQGt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4abde746 (key: documentation, value: A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement. If the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline. If the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.\\r\\nA lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline is a specialization of NamedElement.\\r\\n\\r\\nIf the referenced ConnectableElement is multivalued (i.e. has a multiplicity > 1), then the Lifeline may have an expression (the 'selector') that specifies which particular part is represented by this Lifeline.\\r\\n\\r\\nIf the selector is omitted this means that an arbitrary representative of the multivalued ConnectableElement is chosen.\\r\\n)'],'eModelElement':'Lifeline'}}" 
},{
	 "id": "485", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQG96tEei97MD7GK1RmA', 'key':'documentation','value':'A lifeline represents an individual participant in the Interaction. While Parts and StructuralFeatures may have multiplicity greater than 1, Lifelines represent only one interacting entity. Lifeline i'}}" 
},{
	 "id": "486", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQRt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6f55d8ea (key: documentation, value: PartDecomposition is a description of the internal interactions of one Lifeline relative to an Interaction.\\r\\n\\r\\nA Lifeline has a class associated as the type of the ConnectableElement that the Lifeline represents. That class may have an internal structure and the PartDecomposition is an Interaction that describes the behavior of that internal structure relative to the Interaction where the decomposition is referenced.\\r\\n\\r\\nA PartDecomposition is a specialization of InteractionUse. It associates with the ConnectableElement that it decomposes.\\r\\n)'],'eModelElement':'PartDecomposition'}}" 
},{
	 "id": "487", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQR96tEei97MD7GK1RmA', 'key':'documentation','value':'PartDecomposition is a description of the internal interactions of one Lifeline relative to an Interaction.\\r\\n\\r\\nA Lifeline has a class associated as the type of the ConnectableElement that the Lifeline'}}" 
},{
	 "id": "488", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQUd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10955c81 (key: documentation, value: Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order.\\r\\n\\r\\ni) CombinedFragment covering L are matched with an extra-global CombinedFragment in D\\r\\nii) An InteractionUse covering L are matched with a global (i.e. covering all Lifelines) InteractionUse in D.\\r\\niii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D\\r\\n\\r\\ntrue)'],'eModelElement':'assume'}}" 
},{
	 "id": "489", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQUt6tEei97MD7GK1RmA', 'key':'documentation','value':'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) Oc'}}" 
},{
	 "id": "490", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQWd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1eed8ae4 (key: documentation, value: Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an\\r\\nInteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition)\\r\\n\\r\\ntrue)'],'eModelElement':'commutativity_of_decomposition'}}" 
},{
	 "id": "491", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQWt6tEei97MD7GK1RmA', 'key':'documentation','value':'Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an\\r\\nInteractionUse (say) U that covers L. According to the constraint above U will ha'}}" 
},{
	 "id": "492", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQYd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1bc20f57 (key: documentation, value: An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referred Interaction where the InteractionUse is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal gates with the actual ones.\\r\\n\\r\\nIt is common to want to share portions of an interaction between several other interactions. An InteractionUse allows multiple interactions to reference an interaction that represents a common portion of their specification.\\r\\n)'],'eModelElement':'InteractionUse'}}" 
},{
	 "id": "493", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQYt6tEei97MD7GK1RmA', 'key':'documentation','value':'An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referred Interaction where the InteractionUse is. To be accurate the copying must take int'}}" 
},{
	 "id": "494", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQqt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2afc0c76 (key: documentation, value: An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions.\\r\\nOccurrenceSpecifications are ordered along a Lifeline.\\r\\nThe namespace of an OccurrenceSpecification is the Interaction in which it is contained.\\r\\n)'],'eModelElement':'OccurrenceSpecification'}}" 
},{
	 "id": "495", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQq96tEei97MD7GK1RmA', 'key':'documentation','value':'An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions.\\r\\nOccurrenceSpecifications are ordered along a Li'}}" 
},{
	 "id": "496", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQst6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6da86506 (key: documentation, value: References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\\r\\n)'],'eModelElement':'toBefore'}}" 
},{
	 "id": "497", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQs96tEei97MD7GK1RmA', 'key':'documentation','value':'References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification\\r\\n'}}" 
},{
	 "id": "498", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQuN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@12c42bf6 (key: documentation, value: References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\\r\\n)'],'eModelElement':'toAfter'}}" 
},{
	 "id": "499", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQud6tEei97MD7GK1RmA', 'key':'documentation','value':'References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification\\r\\n'}}" 
},{
	 "id": "500", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YQu96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@17d0c202 (key: documentation, value: An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment. \\r\\n\\r\\nAn InteractionOperand is an InteractionFragment with an optional guard expression. An InteractionOperand may be\\r\\nguarded by a InteractionConstraint. Only InteractionOperands with a guard that evaluates to true at this point in the interaction will be considered for the production of the traces for the enclosing CombinedFragment.\\r\\n\\r\\nInteractionOperand contains an ordered set of InteractionFragments.\\r\\n\\r\\nIn Sequence Diagrams these InteractionFragments are ordered according to their geometrical position vertically. The geometrical position of the InteractionFragment is given by the topmost vertical coordinate of its contained OccurrenceSpecifications or symbols.)'],'eModelElement':'InteractionOperand'}}" 
},{
	 "id": "501", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YQvN6tEei97MD7GK1RmA', 'key':'documentation','value':'An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment. \\r\\n\\r\\nAn InteractionOperand is an Intera'}}" 
},{
	 "id": "502", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YRhN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@31ab19ad (key: documentation, value: An Actor models a type of role played by an entity that interacts with the subject (e.g., by exchanging signals and data), but which is external to the subject (i.e., in the sense that an instance of an actor is not a part of the instance of its corresponding subject). Actors may represent roles played by human users, external hardware, or other subjects. \\r\\nNote that an actor does not necessarily represent a specific physical entity but merely a particular facet (i.e., role) of some entity that is relevant to the specification of its associated use cases. Thus, a single physical instance may play the role of several different actors and, conversely, a given actor may be played by multiple different instances.\\r\\n\\r\\nSince an actor is external to the subject, it is typically defined in the same classifier or package that incorporates the subject classifier.)'],'eModelElement':'Actor'}}" 
},{
	 "id": "503", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YRhd6tEei97MD7GK1RmA', 'key':'documentation','value':'An Actor models a type of role played by an entity that interacts with the subject (e.g., by exchanging signals and data), but which is external to the subject (i.e., in the sense that an instance of '}}" 
},{
	 "id": "504", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YSEN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5c0975 (key: documentation, value: A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstraction for a set of realizingClassifiers that realize its behavior. In addition, because a Class itself is a subtype of an EncapsulatedClassifier, a Component may optionally have an internal structure and own a set of Ports that formalize its interaction points.\\r\\n\\r\\nA component has a number of provided and required Interfaces, that form the basis for wiring components together, either using Dependencies, or by using Connectors. A provided Interface is one that is either implemented directly by the component or one of its realizingClassifiers, or it is the type of a provided Port of the Component. A required interface is designated by a Usage Dependency from the Component or one of its realizingClassifiers, or it is the type of a required Port.\\r\\n)'],'eModelElement':'Component'}}" 
},{
	 "id": "505", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YSEd6tEei97MD7GK1RmA', 'key':'documentation','value':'A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstracti'}}" 
},{
	 "id": "506", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YSKt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@38001cbc (key: documentation, value: result = let usedInterfaces = UsedInterfaces(self) and\\r\\n  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and\\r\\n  let typesOfUsedPorts = self.ownedPort.required in\\r\\n    ((usedInterfaces->union(realizingClassifierUsedInterfaces))->\\r\\n      union(typesOfUsedPorts))->asSet())'],'eModelElement':'getRequireds'}}" 
},{
	 "id": "507", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YSK96tEei97MD7GK1RmA', 'key':'documentation','value':'result = let usedInterfaces = UsedInterfaces(self) and\\r\\n  let realizingClassifierUsedInterfaces = UsedInterfaces(self.realizingClassifier) and\\r\\n  let typesOfUsedPorts = self.ownedPort.required in\\r\\n   '}}" 
},{
	 "id": "508", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YSL96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6e16cb05 (key: documentation, value: result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and\\r\\n  let realizedInterfaces = RealizedInterfaces(self) and\\r\\n  let realizingClassifierInterfaces = RealizedInterfaces(self.realizingClassifier) and\\r\\n  let typesOfRequiredPorts = self.ownedPort.provided in\\r\\n    (((implementedInterfaces->union(realizedInterfaces)->union(realizingClassifierInterfaces))->\\r\\n      union(typesOfRequiredPorts))->asSet())'],'eModelElement':'getProvideds'}}" 
},{
	 "id": "509", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YSMN6tEei97MD7GK1RmA', 'key':'documentation','value':'result = let implementedInterfaces = self.implementation->collect(impl|impl.contract) and\\r\\n  let realizedInterfaces = RealizedInterfaces(self) and\\r\\n  let realizingClassifierInterfaces = RealizedInterf'}}" 
},{
	 "id": "510", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YSMt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5fccaa6a (key: documentation, value: The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-time) an object specified by the Component does not exist, that is, the component is instantiated indirectly, through the instantiation of its realizing classifiers or parts. Several standard stereotypes use this meta attribute, e.g. «specification», «focus», «subsystem».)'],'eModelElement':'isIndirectlyInstantiated'}}" 
},{
	 "id": "511", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YSM96tEei97MD7GK1RmA', 'key':'documentation','value':'The kind of instantiation that applies to a Component. If false, the component is instantiated as an addressable object. If true, the Component is defined at design-time, but at runtime (or execution-'}}" 
},{
	 "id": "512", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YTf96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@b56fce0 (key: documentation, value: Gives the output pin on which the hosting object is placed.\\r\\n)'],'eModelElement':'result'}}" 
},{
	 "id": "513", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YTgN6tEei97MD7GK1RmA', 'key':'documentation','value':'Gives the output pin on which the hosting object is placed.\\r\\n'}}" 
},{
	 "id": "514", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YTsd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@678e7d1d (key: documentation, value: Gives the input pin from which the object whose structural feature is to be read or written is obtained.\\r\\n)'],'eModelElement':'object'}}" 
},{
	 "id": "515", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YTst6tEei97MD7GK1RmA', 'key':'documentation','value':'Gives the input pin from which the object whose structural feature is to be read or written is obtained.\\r\\n'}}" 
},{
	 "id": "516", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YT6t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@382e87cb (key: documentation, value: The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.\\r\\n\\r\\nStructural features are potentially multi-valued and ordered, and may support duplicates, so the action supports specification of removal points for new values. It also supports the removal of all duplicate values.\\r\\n)'],'eModelElement':'RemoveStructuralFeatureValueAction'}}" 
},{
	 "id": "517", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YT696tEei97MD7GK1RmA', 'key':'documentation','value':'The object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified s'}}" 
},{
	 "id": "518", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YT7d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@61935cc5 (key: documentation, value: Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has no removeAt input pin.\\r\\n\\r\\ntrue)'],'eModelElement':'non_unique_removal'}}" 
},{
	 "id": "519", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YT7t6tEei97MD7GK1RmA', 'key':'documentation','value':'Actions removing a value from ordered nonunique structural features must have a single removeAt input pin if isRemoveDuplicates is false. It must be of type Unlimited Natural with multiplicity 1..1. O'}}" 
},{
	 "id": "520", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YT_N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@45124abd (key: documentation, value: Structural Features are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the structural feature before the new value is added.\\r\\n\\r\\nThe object to access is specified dynamically, by referring to an input pin on which the object will be placed at runtime. The type of the value of this pin is the classifier that owns the specified structural feature, and the value's multiplicity is 1..1.\\r\\n)'],'eModelElement':'AddStructuralFeatureValueAction'}}" 
},{
	 "id": "521", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YT_d6tEei97MD7GK1RmA', 'key':'documentation','value':'Structural Features are potentially multi-valued and ordered, so the action supports specification of insertion points for new values. It also supports the removal of existing values of the structural'}}" 
},{
	 "id": "522", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YUNd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@567b2cc4 (key: documentation, value: LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\r\\nLinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the staticallyspecified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\r\\n)'],'eModelElement':'LinkEndData'}}" 
},{
	 "id": "523", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YUNt6tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndData is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of LinkAction. A link cannot be passed as a runtime value to'}}" 
},{
	 "id": "524", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YUit6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6b74e971 (key: documentation, value: This action navigates an association towards one end, which is the end that does not have an input pin to take its object (the open end). The objects put on the result output pin are the ones participating in the association at the open end, conforming to the specified qualifiers, in order if the end is ordered. The semantics is undefined for reading a link that violates the navigability or visibility of the open end.)'],'eModelElement':'ReadLinkAction'}}" 
},{
	 "id": "525", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YUi96tEei97MD7GK1RmA', 'key':'documentation','value':'This action navigates an association towards one end, which is the end that does not have an input pin to take its object (the open end). The objects put on the result output pin are the ones particip'}}" 
},{
	 "id": "526", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YUtd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@640cf8a8 (key: documentation, value: The pin on which are put the objects participating in the association at the end not specified by the inputs.\\r\\n)'],'eModelElement':'result'}}" 
},{
	 "id": "527", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YUtt6tEei97MD7GK1RmA', 'key':'documentation','value':'The pin on which are put the objects participating in the association at the end not specified by the inputs.\\r\\n'}}" 
},{
	 "id": "528", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YUud6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5d558f83 (key: documentation, value: This class is required when using CreateLinkAction, to specify insertion points for ordered ends and for replacing all links at end. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, as required. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end. These pieces are brought together around LinkEndData. Each association end is identified separately with an instance of the LinkEndData class.\\r\\n\\r\\nQualifier values are used in CompleteActions to identify links to create.)'],'eModelElement':'LinkEndCreationData'}}" 
},{
	 "id": "529", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YUut6tEei97MD7GK1RmA', 'key':'documentation','value':'This class is required when using CreateLinkAction, to specify insertion points for ordered ends and for replacing all links at end. A link cannot be passed as a runtime value to or from an action. In'}}" 
},{
	 "id": "530", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YU0t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3319887 (key: documentation, value: This action can be used to create links and link objects. There is no return value in either case. This is so that no change of the action is required if the association is changed to an association class or vice versa. CreateLinkAction uses a specialization of LinkEndData called LinkEndCreationData, to support ordered associations. The insertion point is specified at runtime by an additional input pin, which is required for ordered association ends and omitted for unordered ends. The insertion point is a positive integer giving the position to insert the link, or unlimited, to insert at the end. Reinserting an existing end at a new position in an ordered unique structural feature moves the end to that position. CreateLinkAction also uses LinkEndCreationData to support the destruction of existing links of the association that connect any of the objects of the new link. When the link is created, this option is available on an end-by-end basis, and causes all links of the association emanating from the \\r\\nspecified ends to be destroyed before the new link is created.)'],'eModelElement':'CreateLinkAction'}}" 
},{
	 "id": "531", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YU096tEei97MD7GK1RmA', 'key':'documentation','value':'This action can be used to create links and link objects. There is no return value in either case. This is so that no change of the action is required if the association is changed to an association c'}}" 
},{
	 "id": "532", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YU7d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@78a8ae16 (key: documentation, value: This action destroys a link or a link object. Link objects can also be destroyed with DestroyObjectAction. The link is specified in the same way as link creation, even for link objects. This allows actions to remain unchanged when their associations are transformed from ordinary ones to association classes and vice versa.\\r\\n\\r\\nDestroyLinkAction uses a specialization of LinkEndData, called LinkEndDestructionData, to support ordered nonunique associations. The position of the link to be destroyed is specified at runtime by an additional input pin, which is required for ordered nonunique association ends and omitted for other kinds of ends. This is a positive integer giving the position of the link to destroy.\\r\\n\\r\\nDestroyLinkAction also uses LinkEndDestructionData to support the destruction of duplicate links of the association on ends that are nonunique. This option is available on an end-by-end basis, and causes all duplicate links of the association emanating from the specified ends to be destroyed.\\r\\n)'],'eModelElement':'DestroyLinkAction'}}" 
},{
	 "id": "533", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YU7t6tEei97MD7GK1RmA', 'key':'documentation','value':'This action destroys a link or a link object. Link objects can also be destroyed with DestroyObjectAction. The link is specified in the same way as link creation, even for link objects. This allows ac'}}" 
},{
	 "id": "534", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YU9d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@576589fa (key: documentation, value: This class is required when using DestroyLinkAction, to specify links to destroy for nonunique ordered ends. A link cannot be passed as a runtime value to or from an action.\\r\\n\\r\\nQualifier values are used in CompleteActions to identify links to destroy.)'],'eModelElement':'LinkEndDestructionData'}}" 
},{
	 "id": "535", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YU9t6tEei97MD7GK1RmA', 'key':'documentation','value':'This class is required when using DestroyLinkAction, to specify links to destroy for nonunique ordered ends. A link cannot be passed as a runtime value to or from an action.\\r\\n\\r\\nQualifier values are us'}}" 
},{
	 "id": "536", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YVut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6a7b9fe7 (key: documentation, value: The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (constrainedElement->size() =2)\\r\\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0))'],'eModelElement':'first_event_multiplicity'}}" 
},{
	 "id": "537", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YVu96tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (constrainedElement->size() =2)\\r\\n  then (firstEvent->size() '}}" 
},{
	 "id": "538", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YV0d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@169d76ed (key: documentation, value: The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (event->size() = 2)\\r\\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0))'],'eModelElement':'first_event_multiplicity'}}" 
},{
	 "id": "539", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YV0t6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0.\\r\\nif (event->size() = 2)\\r\\n  then (firstEvent->size() = 2) else (firstEvent->si'}}" 
},{
	 "id": "540", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YWtd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@48543084 (key: documentation, value: An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated. One purpose of InformationItems is to be able to define preliminary models, before having made detailed modeling decisions on types or structures. One other purpose of information items and information flows is to abstract complex models by a less precise but more general representation of the information exchanged betwen entities of a system.\\r\\n)'],'eModelElement':'InformationItem'}}" 
},{
	 "id": "541", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YWtt6tEei97MD7GK1RmA', 'key':'documentation','value':'An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one wh'}}" 
},{
	 "id": "542", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YWuN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@17120a57 (key: documentation, value: The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component.\\r\\n(self.represented->select(p | p->oclIsKindOf(InformationItem))->forAll(p |\\r\\n  p.informationFlow.source->forAll(q | self.informationFlow.source->include(q)) and\\r\\n    p.informationFlow.target->forAll(q | self.informationFlow.target->include(q)))) and\\r\\n      (self.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface) or\\r\\n        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))))'],'eModelElement':'sources_and_targets'}}" 
},{
	 "id": "543", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YWud6tEei97MD7GK1RmA', 'key':'documentation','value':'The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any.The Classifiers that can'}}" 
},{
	 "id": "544", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YW1t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@350b8fa8 (key: documentation, value: The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link).\\r\\n(self.source->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or\\r\\n  oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or\\r\\n  oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or\\r\\n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or\\r\\n  oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))) and\\r\\n    (self.target->forAll(p | p->oclIsKindOf(Actor) or oclIsKindOf(Node) or\\r\\n      oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or oclIsKindOf(Class) or\\r\\n      oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or\\r\\n      oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or\\r\\n      oclIsKindOf(ActivityPartition) or oclIsKindOf(InstanceSpecification))))'],'eModelElement':'sources_and_targets_kind'}}" 
},{
	 "id": "545", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YW196tEei97MD7GK1RmA', 'key':'documentation','value':'The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityParti'}}" 
},{
	 "id": "546", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YW5t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@369f0c0e (key: documentation, value: An information flow can only convey classifiers that are allowed to represent an information item.\\r\\n\\r\\nself.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)\\r\\n  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))'],'eModelElement':'convey_classifiers'}}" 
},{
	 "id": "547", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YW596tEei97MD7GK1RmA', 'key':'documentation','value':'An information flow can only convey classifiers that are allowed to represent an information item.\\r\\n\\r\\nself.conveyed.represented->forAll(p | p->oclIsKindOf(Class) or oclIsKindOf(Interface)\\r\\n  or oclIsK'}}" 
},{
	 "id": "548", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YYz96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2ae4abf6 (key: documentation, value: The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.\\r\\n\\r\\ntrue)'],'eModelElement':'multiplicity_of_result'}}" 
},{
	 "id": "549", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YY0N6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.\\r\\n\\r\\ntrue'}}" 
},{
	 "id": "550", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YZJt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6d01cc0a (key: documentation, value: If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.\\r\\n(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implies\\r\\n  self.outgoing.isTypeOf(ObjectFlow)) and\\r\\n    (self.incoming.select(e | e.isTypeOf(ObjectFlow)->empty() implies\\r\\n      self.outgoing.isTypeOf(ControlFlow)))'],'eModelElement':'incoming_object_flow'}}" 
},{
	 "id": "551", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YZJ96tEei97MD7GK1RmA', 'key':'documentation','value':'If a join node has an incoming object flow, it must have an outgoing object flow, otherwise, it must have an outgoing control flow.\\r\\n(self.incoming.select(e | e.isTypeOf(ObjectFlow)->notEmpty() implie'}}" 
},{
	 "id": "552", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YZQ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7d696eb4 (key: documentation, value: Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the upstream object node type.\\r\\n\\r\\ntrue)'],'eModelElement':'compatible_types'}}" 
},{
	 "id": "553", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YZRN6tEei97MD7GK1RmA', 'key':'documentation','value':'Object nodes connected by an object flow, with optionally intervening control nodes, must have compatible types. In particular, the downstream object node type must be the same or a supertype of the u'}}" 
},{
	 "id": "554", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YZh96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@12f1e003 (key: documentation, value: A conditional node consists of one or more clauses. Each clause consists of a test section and a body section. When the conditional node begins execution, the test sections of the clauses are executed. If one or more test sections yield a true value, one of the corresponding body sections will be executed. If more than one test section yields a true value, only one body section will be executed. The choice is nondeterministic unless the test sequence of clauses is specified. If no test section yields a true value, then no body section is executed; this may be a semantic error if output values are expected from the conditional node.\\r\\n\\r\\nIn general, test section may be executed in any order, including simultaneously (if the underlying execution architecture supports it). The result may therefore be nondeterministic if more than one test section can be true concurrently. To enforce ordering of evaluation, sequencing constraints may be specified among clauses. One frequent case is a total ordering of clauses, in which case the clause execution order is determinate. If it is impossible for more than one test section to evaluate true simultaneously, the result is deterministic and it is unnecessary to order the clauses, as ordering may impose undesirable and unnecessary restrictions on implementation. Note that, although evaluation of test sections may be specified as concurrent, this does not require that the implementation evaluate them in parallel; it merely means that the model does not impose any order on evaluation.\\r\\n\\r\\nAn \\\\'else\\\\' clause is a clause that is a successor to all other clauses in the conditional and whose test part always returns true.\\r\\n\\r\\nOutput values created in the test or body section of a clause are potentially available for use outside the conditional. However, any value used outside the conditional must be created in every clause, otherwise an undefined value would be accessed if a clause not defining the value were executed.)'],'eModelElement':'ConditionalNode'}}" 
},{
	 "id": "555", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YZiN6tEei97MD7GK1RmA', 'key':'documentation','value':'A conditional node consists of one or more clauses. Each clause consists of a test section and a body section. When the conditional node begins execution, the test sections of the clauses are executed'}}" 
},{
	 "id": "556", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YaBt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3e0c7b74 (key: documentation, value: An expansion region is a strictly nested region of an activity with explicit input and outputs (modeled as ExpansionNodes). Each input is a collection of values. If there are multiple inputs, each of them must hold the same kind of collection, although the types of the elements in the different collections may vary. The expansion region is executed once for each element (or position) in the input collection.\\r\\n\\r\\nThe number of output collections can differ from the number of input collections. On each execution of the region, an output value from the region is inserted into an output collection at the same position as the input elements. If the region execution ends with no output, then nothing is added to the output collection. When this happens the output collection will not have the same number of elements as the input collections, the region acts as a filter. If all the executions provide an output to the collection, then the output collections will have the same number of elements as the input collections.\\r\\n\\r\\nThe inputs and outputs to an expansion region are modeled as ExpansionNodes. From \\\\'outside\\\\' of the region, the values on these nodes appear as collections. From \\\\'inside\\\\' the region the values appear as elements of the collections. Object flow edges connect pins outside the region to input and output expansion nodes as collections. Object flow edges connect pins inside the region to input and output expansion nodes as individual elements. From the inside of the region, these nodes are visible as individual values. If an expansion node has a name, it is the name of the individual element within the region.\\r\\n\\r\\nAny object flow edges that cross the boundary of the region, without passing through expansion nodes, provide values that are fixed within the different executions of the region.)'],'eModelElement':'ExpansionRegion'}}" 
},{
	 "id": "557", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YaB96tEei97MD7GK1RmA', 'key':'documentation','value':'An expansion region is a strictly nested region of an activity with explicit input and outputs (modeled as ExpansionNodes). Each input is a collection of values. If there are multiple inputs, each of '}}" 
},{
	 "id": "558", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YaEd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5bb8bce7 (key: documentation, value: The way in which the executions interact:\\r\\nparallel: all interactions are independent\\r\\niterative: the interactions occur in order of the elements\\r\\nstream: a stream of values flows into a single execution\\r\\n)'],'eModelElement':'mode'}}" 
},{
	 "id": "559", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YaEt6tEei97MD7GK1RmA', 'key':'documentation','value':'The way in which the executions interact:\\r\\nparallel: all interactions are independent\\r\\niterative: the interactions occur in order of the elements\\r\\nstream: a stream of values flows into a single execut'}}" 
},{
	 "id": "560", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YaJt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@32c8e8b7 (key: documentation, value: A protocol transition (transition as specialized in the ProtocolStateMachines package) specifies a legal transition for an operation. Transitions of protocol state machines have the following information: a pre condition (guard), on trigger, and a post condition. Every protocol transition is associated to zero or one operation (referred BehavioralFeature) that belongs to the context classifier of the protocol state machine.\\r\\n\\r\\nThe protocol transition specifies that the associated (referred) operation can be called for an instance in the origin state under the initial condition (guard), and that at the end of the transition, the destination state will be reached under the final condition (post).\\r\\n)'],'eModelElement':'ProtocolTransition'}}" 
},{
	 "id": "561", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YaJ96tEei97MD7GK1RmA', 'key':'documentation','value':'A protocol transition (transition as specialized in the ProtocolStateMachines package) specifies a legal transition for an operation. Transitions of protocol state machines have the following informat'}}" 
},{
	 "id": "562", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YaQd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@45449204 (key: documentation, value: Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation connected to the transition.\\r\\n)'],'eModelElement':'postCondition'}}" 
},{
	 "id": "563", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YaQt6tEei97MD7GK1RmA', 'key':'documentation','value':'Specifies the post condition of the transition which is the condition that should be obtained once the transition is triggered. This post condition is part of the post condition of the operation conne'}}" 
},{
	 "id": "564", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiP4d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@56704aec (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ReadLinkAction','ePackage':'uml','abstract':'false','interface':'false','eOperations':['one_open_end','type_and_ordering','compatible_multiplicity','navigable_open_end','visibility'],'eIDAttribute':'name','eStructuralFeatures':['result'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@524fca46 (expression: LinkAction)']}}" 
},{
	 "id": "565", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftgdyt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@e618b3e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'PseudostateKind','defaultValue':'initial','ePackage':'uml','serializable':'true','eLiterals':['initial','deepHistory','shallowHistory','join','fork','junction','choice','entryPoint','exitPoint','terminate']}}" 
},{
	 "id": "566", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthCT96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@61329cfe (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Actor','ePackage':'uml','abstract':'false','interface':'false','eOperations':['associations','must_have_name'],'eIDAttribute':'name','eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@1a14d9b8 (expression: BehavioredClassifier)']}}" 
},{
	 "id": "567", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjdgN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@262595b3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'multiplicity_of_result','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7b46ca8f (expression: EBoolean)','eContainingClass':'UnmarshallAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "568", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgeEd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@597a3d52 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Association','ePackage':'uml','abstract':'false','interface':'false','eOperations':['specialized_end_number','specialized_end_types','binary_associations','association_ends','isBinary','getEndTypes'],'eIDAttribute':'name','eStructuralFeatures':['ownedEnd','memberEnd','isDerived','endType','navigableOwnedEnd'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3813c6ce (expression: Classifier)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@1e3d5004 (expression: Relationship)']}}" 
},{
	 "id": "569", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjeVd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@26051d7f (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'incoming_object_flow','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@133ce026 (expression: EBoolean)','eContainingClass':'JoinNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "570", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf1Zt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3b93df3c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'extensionLocation','ordered':'true','unique':'true','lowerBound':'1','upperBound':'-1','many':'true','required':'true','eType':'ExtensionPoint','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6beba2fd (expression: ExtensionPoint)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Extend','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'ExtensionPoint'}}" 
},{
	 "id": "571", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_inuTF96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@39b0c74a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'format','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@87f93e1 (expression: String)','changeable':'true','volatile':'false','transient':'false','unsettable':'true','derived':'false','eContainingClass':'Image','iD':'false','eAttributeType':'String'}}" 
},{
	 "id": "572", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftf0-N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6a7e1904 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isCovering','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@635cbea1 (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'false','defaultValue':'false','unsettable':'false','derived':'false','eContainingClass':'GeneralizationSet','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "573", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_fthCyd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5d5efde6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'MessageSort','defaultValue':'synchCall','ePackage':'uml','serializable':'true','eLiterals':['synchCall','asynchCall','asynchSignal','createMessage','deleteMessage','reply']}}" 
},{
	 "id": "574", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZ6t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@17191ee3 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@191dde60 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'isUnique','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2b10f316 (expression: Boolean)','eContainingClass':'Operation'}}" 
},{
	 "id": "575", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgcLt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@baa0b2f (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'initial_transition','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@649c2885 (expression: EBoolean)','eContainingClass':'Transition','eParameters':['diagnostics','context']}}" 
},{
	 "id": "576", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgcft6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@46f860d8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Port','ePackage':'uml','abstract':'false','interface':'false','eOperations':['required_interfaces','port_aggregation','port_destroyed','default_value','getProvideds','getRequireds'],'eIDAttribute':'name','eStructuralFeatures':['isBehavior','isService','required','redefinedPort','provided','protocol'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@6e6c0183 (expression: Property)']}}" 
},{
	 "id": "577", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftfLLN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4de4ca6f (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'VisibilityKind','defaultValue':'public','ePackage':'uml','serializable':'true','eLiterals':['public','private','protected','package']}}" 
},{
	 "id": "578", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZ8N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@126c6b9c (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@42ff491e (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'lowerBound','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Integer','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@65f5479c (expression: Integer)','eContainingClass':'Operation'}}" 
},{
	 "id": "579", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthCBN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@116c010 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Enumeration','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eStructuralFeatures':['ownedLiteral'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3d04378e (expression: DataType)']}}" 
},{
	 "id": "580", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjec96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@32d0e0d3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'compatible_types','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5a94f6f (expression: EBoolean)','eContainingClass':'ObjectFlow','eParameters':['diagnostics','context']}}" 
},{
	 "id": "581", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiPP96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@16d83554 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'RemoveStructuralFeatureValueAction','ePackage':'uml','abstract':'false','interface':'false','eOperations':['non_unique_removal'],'eIDAttribute':'name','eStructuralFeatures':['isRemoveDuplicates','removeAt'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2b2092c0 (expression: WriteStructuralFeatureAction)']}}" 
},{
	 "id": "582", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftiQDN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@711a8df (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@530fa91d (source: subsets)'],'name':'result','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'OutputPin','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3f19717f (expression: OutputPin)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'ReadLinkAction','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'OutputPin'}}" 
},{
	 "id": "583", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf1Vt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3b6112f5 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'extension_points','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@661e0f4e (expression: EBoolean)','eContainingClass':'Extend','eParameters':['diagnostics','context']}}" 
},{
	 "id": "584", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftfLqN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@b1b80ef (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'name','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3c5d3d0d (expression: String)','changeable':'true','volatile':'false','transient':'false','unsettable':'true','derived':'false','eContainingClass':'NamedElement','iD':'true','eAttributeType':'String'}}" 
},{
	 "id": "585", 
	 "label": "{'changeType': 'Change', 'type': 'attributeValue', 'className': 'EAttribute', 'attributeName': 'iD', 'valueBefore': 'true', 'valueAfter': 'false'}" 
},{
	 "id": "586", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjffN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4a7ac964 (source: http://www.eclipse.org/emf/2002/Ecore)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7082f5fd (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getProvideds','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Interface','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4b21f92e (expression: Interface)','eContainingClass':'Component'}}" 
},{
	 "id": "587", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgcNt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@16e471f1 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'signatures_compatible','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d1a35e9 (expression: EBoolean)','eContainingClass':'Transition','eParameters':['diagnostics','context']}}" 
},{
	 "id": "588", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgbP96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7ae40c9e (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7421e05 (source: duplicates)'],'name':'StateMachine','ePackage':'uml','abstract':'false','interface':'false','eOperations':['classifier_context','context_classifier','connection_points','method','LCA','ancestor','isRedefinitionContextValid'],'eIDAttribute':'name','eStructuralFeatures':['region','submachineState','connectionPoint','extendedStateMachine'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@506681fb (expression: Behavior)']}}" 
},{
	 "id": "589", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthCP96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@682e7cf1 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'one_output_parameter','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@c520401 (expression: EBoolean)','eContainingClass':'FunctionBehavior','eParameters':['diagnostics','context']}}" 
},{
	 "id": "590", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgdRN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@22628424 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@4595e434 (source: subsets)'],'name':'entry','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Behavior','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2d75f311 (expression: Behavior)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'State','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Behavior'}}" 
},{
	 "id": "591", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiQRd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4a73c7a2 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6de60a6e (source: duplicates)'],'name':'DestroyLinkAction','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@508b7a93 (expression: WriteLinkAction)']}}" 
},{
	 "id": "592", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf1Ed6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@782af3c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'UseCase','ePackage':'uml','abstract':'false','interface':'false','eOperations':['must_have_name','binary_associations','no_association_to_use_case','cannot_include_self','allIncludedUseCases'],'eIDAttribute':'name','eStructuralFeatures':['include','extend','extensionPoint','subject'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@40f89abe (expression: BehavioredClassifier)']}}" 
},{
	 "id": "593", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthAJt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@48a29613 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Collaboration','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eStructuralFeatures':['collaborationRole'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@6f410649 (expression: BehavioredClassifier)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@496dda45 (expression: StructuredClassifier)']}}" 
},{
	 "id": "594", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjfQ96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7dfc96aa (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ExpansionRegion','ePackage':'uml','abstract':'false','interface':'false','eOperations':['expansion_nodes'],'eIDAttribute':'name','eStructuralFeatures':['mode','inputElement','outputElement'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@517c1a9c (expression: StructuredActivityNode)']}}" 
},{
	 "id": "595", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfL0t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@565e9f8a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ParameterableElement','ePackage':'uml','abstract':'true','interface':'false','eOperations':['isCompatibleWith','isTemplateParameter'],'eStructuralFeatures':['owningTemplateParameter','templateParameter'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2f3e32a1 (expression: Element)']}}" 
},{
	 "id": "596", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf2xd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2119fa56 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7d04f359 (source: duplicates)'],'name':'ConnectableElement','ePackage':'uml','abstract':'true','interface':'false','eIDAttribute':'name','eStructuralFeatures':['end'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@86c6a70 (expression: TypedElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@3dd1f7dc (expression: ParameterableElement)']}}" 
},{
	 "id": "597", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgea96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3da4563 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'CollaborationUse','ePackage':'uml','abstract':'false','interface':'false','eOperations':['client_elements','every_role','connectors'],'eIDAttribute':'name','eStructuralFeatures':['type','roleBinding'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@33e00f76 (expression: NamedElement)']}}" 
},{
	 "id": "598", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgaW96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4429408e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Behavior','ePackage':'uml','abstract':'true','interface':'false','eOperations':['parameters_match','feature_of_context_classifier','must_realize','most_one_behaviour','getContext'],'eIDAttribute':'name','eStructuralFeatures':['isReentrant','redefinedBehavior','ownedParameter','context','precondition','postcondition','ownedParameterSet','specification'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3cbc24e4 (expression: Class)']}}" 
},{
	 "id": "599", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_f3T1196tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3a4bcfa9 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'has_no_qualified_name','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@64e8c8e7 (expression: EBoolean)','eContainingClass':'NamedElement','eParameters':['diagnostics','context']}}" 
},{
	 "id": "600", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjfd96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5b277b99 (source: http://www.eclipse.org/emf/2002/Ecore)','org.eclipse.emf.ecore.impl.EAnnotationImpl@1000b4d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getRequireds','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Interface','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@443ba993 (expression: Interface)','eContainingClass':'Component'}}" 
},{
	 "id": "601", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfz6d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2ec4e57b (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@63b06906 (source: duplicates)'],'name':'Classifier','ePackage':'uml','abstract':'true','interface':'false','eOperations':['no_cycles_in_generalization','generalization_hierarchies','specialize_type','maps_to_generalization_set','getAllAttributes','getOperations','getAllOperations','getOperation','getOperation','getUsedInterfaces','...'],'eIDAttribute':'name','eStructuralFeatures':['isAbstract','generalization','powertypeExtent','feature','inheritedMember','redefinedClassifier','general','substitution','attribute','representation','collaborationUse','ownedUseCase','useCase'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@6e211369 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@3db7cbeb (expression: RedefinableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@391bd74a (expression: Type)','...']}}" 
},{
	 "id": "602", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2d96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@57f644c6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'sources_and_targets_kind','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@75285b2 (expression: EBoolean)','eContainingClass':'InformationFlow','eParameters':['diagnostics','context']}}" 
},{
	 "id": "603", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2Wd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@45e1807a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'sources_and_targets','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@72390c65 (expression: EBoolean)','eContainingClass':'InformationItem','eParameters':['diagnostics','context']}}" 
},{
	 "id": "604", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_fthpD96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@160b1cbb (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'toAfter','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'GeneralOrdering','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@59220c41 (expression: GeneralOrdering)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'OccurrenceSpecification','containment':'false','container':'false','resolveProxies':'true','eOpposite':'before','eReferenceType':'GeneralOrdering'}}" 
},{
	 "id": "605", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftjfTt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7d4cc52 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'mode','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'ExpansionKind','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2cf2232e (expression: ExpansionKind)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'iterative','defaultValue':'iterative','unsettable':'false','derived':'false','eContainingClass':'ExpansionRegion','iD':'false','eAttributeType':'ExpansionKind'}}" 
},{
	 "id": "606", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthoV96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@69b6d447 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@38c181cc (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'isAccessibleBy','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6c3aaba4 (expression: Boolean)','eContainingClass':'Variable','eParameters':['a']}}" 
},{
	 "id": "607", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthCZd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5909830 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Message','ePackage':'uml','abstract':'false','interface':'false','eOperations':['sending_receiving_message_event','signature_refer_to','signature_is_operation','signature_is_signal','arguments','cannot_cross_boundaries','occurrence_specifications','getMessageKind','getSignature'],'eIDAttribute':'name','eStructuralFeatures':['messageKind','messageSort','receiveEvent','sendEvent','connector','interaction','argument','signature'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@639b501d (expression: NamedElement)']}}" 
},{
	 "id": "608", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiPQt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3d751e8c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'non_unique_removal','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@779f80ec (expression: EBoolean)','eContainingClass':'RemoveStructuralFeatureValueAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "609", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjfat6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@70fbaa09 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Component','ePackage':'uml','abstract':'false','interface':'false','eOperations':['createOwnedClass','createOwnedEnumeration','createOwnedPrimitiveType','createOwnedInterface','realizedInterfaces','usedInterfaces','getRequireds','getProvideds'],'eIDAttribute':'name','eStructuralFeatures':['isIndirectlyInstantiated','required','provided','packagedElement','realization'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@db9be5e (expression: Class)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@65df400 (expression: Namespace)']}}" 
},{
	 "id": "610", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfzbd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@71e33c68 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'references_same_metamodel','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2250bb50 (expression: EBoolean)','eContainingClass':'Profile','eParameters':['diagnostics','context']}}" 
},{
	 "id": "611", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnumLiteral', 'attributes': {'id': '_ftgd3N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1a762e2d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'junction','value':'5','instance':'junction','literal':'junction','eEnum':'PseudostateKind'}}" 
},{
	 "id": "612", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2Dt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@344db496 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@354483d3 (source: redefines)'],'name':'type_ordering_multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@616bb4a5 (expression: EBoolean)','eParameters':['diagnostics','context']}}" 
},{
	 "id": "613", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfyf96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@282c2baa (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Namespace','ePackage':'uml','abstract':'true','interface':'false','eOperations':['members_distinguishable','createElementImport','createPackageImport','getImportedElements','getImportedPackages','getImportedMembers','getNamesOfMember','membersAreDistinguishable','importMembers','excludeCollisions'],'eIDAttribute':'name','eStructuralFeatures':['elementImport','packageImport','ownedRule','member','importedMember','ownedMember'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3847c354 (expression: NamedElement)']}}" 
},{
	 "id": "614", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftjfgd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6c5433fd (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isIndirectlyInstantiated','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@b1e127e (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'true','defaultValue':'true','unsettable':'false','derived':'false','eContainingClass':'Component','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "615", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfLQt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@eb3ecdc (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6ea13844 (source: http://www.eclipse.org/emf/2002/Ecore)','...'],'name':'isCompatibleWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@9bc86d5 (expression: Boolean)','eParameters':['p']}}" 
},{
	 "id": "616", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbed6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@16ec26fd (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6f389bd5 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'ancestor','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4f0fd769 (expression: Boolean)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}" 
},{
	 "id": "617", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_fthAmt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@47228a9c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ConnectorKind','defaultValue':'assembly','ePackage':'uml','serializable':'true','eLiterals':['assembly','delegation']}}" 
},{
	 "id": "618", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiQKt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6b9f68a6 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@1b2e9d1c (source: duplicates)'],'name':'CreateLinkAction','ePackage':'uml','abstract':'false','interface':'false','eOperations':['association_not_abstract'],'eIDAttribute':'name','eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@131aa23e (expression: WriteLinkAction)']}}" 
},{
	 "id": "619", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf1wt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@24bc99d9 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@2b13fe9e (source: duplicates)'],'name':'OpaqueExpression','ePackage':'uml','abstract':'false','interface':'false','eOperations':['language_body_size','only_return_result_parameters','one_return_result_parameter','getResult','value','isIntegral','isPositive','isNonNegative'],'eIDAttribute':'name','eStructuralFeatures':['body','language','result','behavior'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@6fa859a9 (expression: ValueSpecification)']}}" 
},{
	 "id": "620", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf11d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5384d2df (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'only_return_result_parameters','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@488b0022 (expression: EBoolean)','eContainingClass':'OpaqueExpression','eParameters':['diagnostics','context']}}" 
},{
	 "id": "621", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthoTN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5f756135 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Variable','ePackage':'uml','abstract':'false','interface':'false','eOperations':['owned','isAccessibleBy'],'eIDAttribute':'name','eStructuralFeatures':['scope','activityScope'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2ea6c741 (expression: ConnectableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@535e866d (expression: MultiplicityElement)']}}" 
},{
	 "id": "622", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_fti16N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2310c8ac (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isSynchronous','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6dd2a7b8 (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'true','defaultValue':'true','unsettable':'false','derived':'false','eContainingClass':'CallAction','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "623", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftgeBd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@ceac73d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'AggregationKind','defaultValue':'none','ePackage':'uml','serializable':'true','eLiterals':['none','shared','composite']}}" 
},{
	 "id": "624", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiQTd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@8fd4ead (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LinkEndDestructionData','ePackage':'uml','abstract':'false','interface':'false','eOperations':['destroy_link_action','unlimited_natural_and_multiplicity'],'eStructuralFeatures':['isDestroyDuplicates','destroyAt'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@5ee555b1 (expression: LinkEndData)']}}" 
},{
	 "id": "625", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_fthAjt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3ded5520 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@3804a6a3 (source: subsets)'],'name':'redefinedConnector','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Connector','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7e5e32e7 (expression: Connector)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Connector','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'Connector'}}" 
},{
	 "id": "626", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdt96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1402a358 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'outgoing_from_initial','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@70d8c607 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "627", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_inucv96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@adac631 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'first_event_multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@12d8ec64 (expression: EBoolean)','eContainingClass':'DurationConstraint','eParameters':['diagnostics','context']}}" 
},{
	 "id": "628", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfzYt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4285775b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Profile','ePackage':'uml','abstract':'false','interface':'false','eOperations':['metaclass_reference_not_specialized','references_same_metamodel','create','createOwnedStereotype','isDefined','define','getDefinition','getDefinition','getReferencedMetaclasses','getReferencedMetamodels','...'],'eIDAttribute':'name','eStructuralFeatures':['ownedStereotype','metaclassReference','metamodelReference'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@7db07530 (expression: Package)']}}" 
},{
	 "id": "629", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf1m96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5501a13e (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@686f1a74 (source: subsets)'],'name':'specification','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'ValueSpecification','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@26bfa9b1 (expression: ValueSpecification)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Constraint','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'ValueSpecification'}}" 
},{
	 "id": "630", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftiPBt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@680670f9 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@70a1fc31 (source: subsets)'],'name':'object','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'InputPin','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@bd1754f (expression: InputPin)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'StructuralFeatureAction','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'InputPin'}}" 
},{
	 "id": "631", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthoad6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@78fff3ff (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'interrupting_edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@21e61c25 (expression: EBoolean)','eContainingClass':'InterruptibleActivityRegion','eParameters':['diagnostics','context']}}" 
},{
	 "id": "632", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgb-d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@56354b75 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6d462967 (source: http://www.eclipse.org/emf/2002/Ecore)','...'],'name':'isConsistentWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@59c7637 (expression: Boolean)','eParameters':['redefinee']}}" 
},{
	 "id": "633", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZ9t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6931fb6a (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@15d98d30 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'upperBound','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'UnlimitedNatural','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@513eefea (expression: UnlimitedNatural)','eContainingClass':'Operation'}}" 
},{
	 "id": "634", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfzZd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@878e11b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'metaclass_reference_not_specialized','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7712f684 (expression: EBoolean)','eContainingClass':'Profile','eParameters':['diagnostics','context']}}" 
},{
	 "id": "635", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgcsN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3ec9a5b8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'provided','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Interface','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2e930de8 (expression: Interface)','changeable':'false','volatile':'true','transient':'true','unsettable':'false','derived':'true','eContainingClass':'Port','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'Interface'}}" 
},{
	 "id": "636", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthCR96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7091c6e0 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'types_of_parameters','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1f06cebf (expression: EBoolean)','eContainingClass':'FunctionBehavior','eParameters':['diagnostics','context']}}" 
},{
	 "id": "637", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftgeVd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1de025d6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ParameterDirectionKind','defaultValue':'in','ePackage':'uml','serializable':'true','eLiterals':['in','inout','out','return']}}" 
},{
	 "id": "638", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthn-96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1baffcc2 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ActivityGroup','ePackage':'uml','abstract':'true','interface':'false','eOperations':['nodes_and_edges','not_contained','group_owned'],'eStructuralFeatures':['subgroup','superGroup','inActivity','containedEdge','containedNode'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@1ce81e84 (expression: Element)']}}" 
},{
	 "id": "639", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfzB96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2a47dc9e (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5d671cd2 (source: duplicates)'],'name':'Package','ePackage':'uml','abstract':'false','interface':'false','eOperations':['elements_public_or_private','createOwnedClass','createOwnedEnumeration','createOwnedPrimitiveType','createOwnedInterface','isProfileApplied','applyProfile','unapplyProfile','getAppliedProfiles','getAllAppliedProfiles','...'],'eIDAttribute':'name','eStructuralFeatures':['ownedType','packageMerge','packagedElement','nestedPackage','nestingPackage','profileApplication'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4a130cf8 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@68242a4 (expression: PackageableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@13a6a328 (expression: TemplateableElement)']}}" 
},{
	 "id": "640", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthoLN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@39e3831f (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@511d6765 (source: duplicates)'],'name':'StructuredActivityNode','ePackage':'uml','abstract':'false','interface':'false','eOperations':['edges'],'eIDAttribute':'name','eStructuralFeatures':['variable','edge','mustIsolate','node'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@5851dafb (expression: Action)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@1ca988bc (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@345e49b4 (expression: ActivityGroup)']}}" 
},{
	 "id": "641", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthpEt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1b99f1b6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InteractionOperand','ePackage':'uml','abstract':'false','interface':'false','eOperations':['guard_directly_prior','guard_contain_references'],'eIDAttribute':'name','eStructuralFeatures':['guard','fragment'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4282ed43 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@ca2cf6c (expression: InteractionFragment)']}}" 
},{
	 "id": "642", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf1Yt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1f41192e (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6b617bdd (source: subsets)'],'name':'condition','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Constraint','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5f13072c (expression: Constraint)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Extend','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Constraint'}}" 
},{
	 "id": "643", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjd596tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@58b95113 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'no_outgoing_edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@bf333a4 (expression: EBoolean)','eContainingClass':'ActivityParameterNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "644", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftgat96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6436adf3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'CallConcurrencyKind','defaultValue':'sequential','ePackage':'uml','serializable':'true','eLiterals':['sequential','guarded','concurrent']}}" 
},{
	 "id": "645", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_hs3H2N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@562031d4 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'redefined_property_inherited','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7a18f9ca (expression: EBoolean)','eContainingClass':'Property','eParameters':['diagnostics','context']}}" 
},{
	 "id": "646", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_fthCut6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6312e695 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'MessageKind','defaultValue':'complete','ePackage':'uml','serializable':'true','eLiterals':['complete','lost','found','unknown']}}" 
},{
	 "id": "647", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnumLiteral', 'attributes': {'id': '_fthCz96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@40786bd3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'asynchCall','value':'1','instance':'asynchCall','literal':'asynchCall','eEnum':'MessageSort'}}" 
},{
	 "id": "648", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf1S96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@8f2e24a (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5c272a73 (source: subsets)'],'name':'addition','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'UseCase','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@29d05884 (expression: UseCase)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Include','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'UseCase'}}" 
},{
	 "id": "649", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgZvN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@70a9216b (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@99f82a4 (source: duplicates)'],'name':'Operation','ePackage':'uml','abstract':'false','interface':'false','eOperations':['at_most_one_return','only_body_for_query','getLower','getUpper','setIsOrdered','setIsUnique','setLower','setType','setUpper','getReturnResult','isOrdered','isUnique','lowerBound','upperBound','getType','...'],'eIDAttribute':'name','eStructuralFeatures':['interface','class','isQuery','isOrdered','isUnique','lower','upper','precondition','postcondition','redefinedOperation','datatype','bodyCondition','type'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@78776db1 (expression: BehavioralFeature)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@4196b638 (expression: ParameterableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@6ecfa277 (expression: TemplateableElement)']}}" 
},{
	 "id": "650", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_fthC6t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@55432f5 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@198f0033 (source: subsets)'],'name':'formalGate','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Gate','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6c61e9bc (expression: Gate)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Interaction','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Gate'}}" 
},{
	 "id": "651", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthoqN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@249c45cc (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ObjectNode','ePackage':'uml','abstract':'true','interface':'false','eOperations':['object_flow_edges','not_unique','selection_behavior','input_output_parameter'],'eIDAttribute':'name','eStructuralFeatures':['ordering','isControlType','upperBound','inState','selection'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@22d495a0 (expression: ActivityNode)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@36971f00 (expression: TypedElement)']}}" 
},{
	 "id": "652", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthBSt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@420fdb56 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6b25ea7e (source: http://www.eclipse.org/emf/2002/Ecore)','...'],'name':'stringValue','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@74a4f8c1 (expression: String)'}}" 
},{
	 "id": "653", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnum', 'attributes': {'id': '_ftgcZN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6669c879 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@38dbffc1 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'TransitionKind','defaultValue':'internal','ePackage':'uml','serializable':'true','eLiterals':['internal','local','external']}}" 
},{
	 "id": "654", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjd396tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@67793b7b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'no_incoming_edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7ebe6102 (expression: EBoolean)','eContainingClass':'ActivityParameterNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "655", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgdUN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@275c4e58 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'deferrableTrigger','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Trigger','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5267c768 (expression: Trigger)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'State','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Trigger'}}" 
},{
	 "id": "656", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_fthAIt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6d20e096 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@d119be0 (source: subsets)'],'name':'roleBinding','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Dependency','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1b626e92 (expression: Dependency)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'CollaborationUse','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Dependency'}}" 
},{
	 "id": "657", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftjgHN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5ac433ac (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@42a1e415 (source: subsets)'],'name':'postCondition','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Constraint','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1e4dd4e5 (expression: Constraint)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'ProtocolTransition','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'Constraint'}}" 
},{
	 "id": "658", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf13d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7746366a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'one_return_result_parameter','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3362dde7 (expression: EBoolean)','eContainingClass':'OpaqueExpression','eParameters':['diagnostics','context']}}" 
},{
	 "id": "659", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fti2Vt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5bd9452e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InformationItem','ePackage':'uml','abstract':'false','interface':'false','eOperations':['sources_and_targets','has_no','not_instantiable'],'eIDAttribute':'name','eStructuralFeatures':['represented'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@38e0188d (expression: Classifier)']}}" 
},{
	 "id": "660", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgdQN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@eb3ea91 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@40100101 (source: subsets)'],'name':'stateInvariant','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Constraint','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5954a776 (expression: Constraint)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'State','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Constraint'}}" 
},{
	 "id": "661", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthBI96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@12261b15 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@4cc728c (source: http://www.eclipse.org/emf/2002/Ecore)','...'],'name':'lowerBound','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Integer','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@547e27f7 (expression: Integer)'}}" 
},{
	 "id": "662", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgaOd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4c96e4ff (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@3d58d80e (source: duplicates)'],'name':'BehavioralFeature','ePackage':'uml','abstract':'true','interface':'false','eOperations':['createReturnResult'],'eIDAttribute':'name','eStructuralFeatures':['ownedParameter','isAbstract','method','concurrency','raisedException','ownedParameterSet'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@5bafa52 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@7f06dfbf (expression: Feature)']}}" 
},{
	 "id": "663", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiQEN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@43ac785 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LinkEndCreationData','ePackage':'uml','abstract':'false','interface':'false','eOperations':['create_link_action','single_input_pin'],'eStructuralFeatures':['isReplaceAll','insertAt'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2d34abe8 (expression: LinkEndData)']}}" 
},{
	 "id": "664", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2h96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2c9f00c0 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'convey_classifiers','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1a3a78eb (expression: EBoolean)','eContainingClass':'InformationFlow','eParameters':['diagnostics','context']}}" 
},{
	 "id": "665", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgctt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3983bf95 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@2024f0e3 (source: duplicates)'],'name':'State','ePackage':'uml','abstract':'false','interface':'false','eOperations':['submachine_states','destinations_or_sources_of_transitions','submachine_or_regions','composite_states','entry_or_exit','isSimple','isComposite','isOrthogonal','isSubmachineState','redefinitionContext','...'],'eIDAttribute':'name','eStructuralFeatures':['isComposite','isOrthogonal','isSimple','isSubmachineState','submachine','connection','connectionPoint','redefinedState','stateInvariant','entry','exit','doActivity','deferrableTrigger','region'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@7af03178 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@2eb98f90 (expression: RedefinableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@665278b8 (expression: Vertex)']}}" 
},{
	 "id": "666", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjewN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@a45eb6a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ConditionalNode','ePackage':'uml','abstract':'false','interface':'false','eOperations':['result_no_incoming'],'eIDAttribute':'name','eStructuralFeatures':['isDeterminate','isAssured','clause','result'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@309ac6a (expression: StructuredActivityNode)']}}" 
},{
	 "id": "667", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZBN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6e3f879c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'binding_to_attribute','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@592e57d0 (expression: EBoolean)','eContainingClass':'Property','eParameters':['diagnostics','context']}}" 
},{
	 "id": "668", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftf2A96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4dc1584a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'language','ordered':'true','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3fe4fca7 (expression: String)','changeable':'true','volatile':'false','transient':'false','unsettable':'true','derived':'false','eContainingClass':'OpaqueExpression','iD':'false','eAttributeType':'String'}}" 
},{
	 "id": "669", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgZKd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@173d51f0 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7fa4a77c (source: subsets)'],'name':'datatype','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'DataType','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6d5a8932 (expression: DataType)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Property','containment':'false','container':'true','resolveProxies':'true','eOpposite':'ownedAttribute','eReferenceType':'DataType'}}" 
},{
	 "id": "670", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftiO1N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@31407274 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@c6f5f5e (source: subsets)'],'name':'result','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'OutputPin','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3e284803 (expression: OutputPin)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'ReadSelfAction','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'OutputPin'}}" 
},{
	 "id": "671", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZg96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@43cb453e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'deployed_elements','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7f8703d3 (expression: EBoolean)','eContainingClass':'DeploymentSpecification','eParameters':['diagnostics','context']}}" 
},{
	 "id": "672", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_inuc1t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2d3e217e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'first_event_multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@660a0c86 (expression: EBoolean)','eContainingClass':'DurationObservation','eParameters':['diagnostics','context']}}" 
},{
	 "id": "673", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthDON6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4ed795f1 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'assume','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@75463399 (expression: EBoolean)','eContainingClass':'PartDecomposition','eParameters':['diagnostics','context']}}" 
},{
	 "id": "674", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf1bd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1bebe736 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Constraint','ePackage':'uml','abstract':'false','interface':'false','eOperations':['not_apply_to_self','value_specification_boolean','boolean_value','no_side_effects','not_applied_to_self'],'eIDAttribute':'name','eStructuralFeatures':['constrainedElement','specification','context'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3485c5f5 (expression: PackageableElement)']}}" 
},{
	 "id": "675", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthCYt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@59553aea (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Usage','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@288975dc (expression: Dependency)']}}" 
},{
	 "id": "676", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf2896tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@795659ea (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'definingEnd','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Property','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2fd4017f (expression: Property)','changeable':'false','volatile':'true','transient':'true','unsettable':'false','derived':'true','eContainingClass':'ConnectorEnd','containment':'false','container':'false','resolveProxies':'true','eReferenceType':'Property'}}" 
},{
	 "id": "677", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_fthpCd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2058e1ce (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'toBefore','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'GeneralOrdering','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@10ac42e5 (expression: GeneralOrdering)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'OccurrenceSpecification','containment':'false','container':'false','resolveProxies':'true','eOpposite':'after','eReferenceType':'GeneralOrdering'}}" 
},{
	 "id": "678", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthDSN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2ce2b2d2 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InteractionUse','ePackage':'uml','abstract':'false','interface':'false','eOperations':['gates_match','all_lifelines','arguments_correspond_to_parameters','arguments_are_constants'],'eIDAttribute':'name','eStructuralFeatures':['refersTo','actualGate','argument'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@12db0bd (expression: InteractionFragment)']}}" 
},{
	 "id": "679", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgaht6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4980427 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7e181071 (source: subsets)'],'name':'ownedParameter','ordered':'true','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Parameter','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3c11d (expression: Parameter)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Behavior','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Parameter'}}" 
},{
	 "id": "680", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgd696tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4fccfdad (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ProtocolConformance','ePackage':'uml','abstract':'false','interface':'false','eStructuralFeatures':['generalMachine','specificMachine'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@64bc105b (expression: DirectedRelationship)']}}" 
},{
	 "id": "681", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf1SN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@ee5ecd8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Include','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eStructuralFeatures':['addition','includingCase'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@46539b18 (expression: NamedElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@3722c169 (expression: DirectedRelationship)']}}" 
},{
	 "id": "682", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthpAd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5ecdb7f (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@1b08d741 (source: duplicates)'],'name':'OccurrenceSpecification','ePackage':'uml','abstract':'false','interface':'false','eIDAttribute':'name','eStructuralFeatures':['toBefore','event','toAfter'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@79a38522 (expression: InteractionFragment)']}}" 
},{
	 "id": "683", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthB1t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4f7c5009 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InstanceSpecification','ePackage':'uml','abstract':'false','interface':'false','eOperations':['defining_feature','structural_feature','deployment_target','deployment_artifact'],'eIDAttribute':'name','eStructuralFeatures':['classifier','slot','specification'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@27faf429 (expression: DeploymentTarget)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@25eb284b (expression: PackageableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@6c496718 (expression: DeployedArtifact)']}}" 
},{
	 "id": "684", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftga1t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@226400c0 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Interface','ePackage':'uml','abstract':'false','interface':'false','eOperations':['visibility','createOwnedOperation','createOwnedAttribute'],'eIDAttribute':'name','eStructuralFeatures':['ownedAttribute','ownedOperation','nestedClassifier','redefinedInterface','ownedReception','protocol'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@698cbede (expression: Classifier)']}}" 
},{
	 "id": "685", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthnet6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@609097c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Activity','ePackage':'uml','abstract':'false','interface':'false','eOperations':['no_supergroups','activity_parameter_node','autonomous'],'eIDAttribute':'name','eStructuralFeatures':['structuredNode','variable','node','isReadOnly','edge','partition','isSingleExecution','group'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4fe3a0ca (expression: Behavior)']}}" 
},{
	 "id": "686", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgZsd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@52934047 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5845713a (source: subsets)'],'name':'ownedAttribute','ordered':'true','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Property','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@31b856e5 (expression: Property)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Artifact','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Property'}}" 
},{
	 "id": "687", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf2_N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7fad8c8c (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5793f230 (source: duplicates)'],'name':'Property','ePackage':'uml','abstract':'false','interface':'false','eOperations':['multiplicity_of_composite','subsetting_context_conforms','redefined_property_inherited','subsetting_rules','navigable_readonly','derived_union_is_derived','derived_union_is_read_only','subsetted_property_names','...'],'eIDAttribute':'name','eStructuralFeatures':['class','datatype','isDerived','isDerivedUnion','default','aggregation','isComposite','redefinedProperty','owningAssociation','defaultValue','opposite','subsettedProperty','association','qualifier','associationEnd'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@276406d3 (expression: StructuralFeature)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@6d22a9d2 (expression: ConnectableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@68ee9be1 (expression: DeploymentTarget)','...']}}" 
},{
	 "id": "688", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfzPt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4273c1d5 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'PackageMerge','ePackage':'uml','abstract':'false','interface':'false','eStructuralFeatures':['mergedPackage','receivingPackage'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@dcba10b (expression: DirectedRelationship)']}}" 
},{
	 "id": "689", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgaw96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4552ba3f (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7bfd2b72 (source: duplicates)'],'name':'DataType','ePackage':'uml','abstract':'false','interface':'false','eOperations':['createOwnedOperation','createOwnedAttribute'],'eIDAttribute':'name','eStructuralFeatures':['ownedAttribute','ownedOperation'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@507d654c (expression: Classifier)']}}" 
},{
	 "id": "690", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf1U96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@16032792 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Extend','ePackage':'uml','abstract':'false','interface':'false','eOperations':['extension_points'],'eIDAttribute':'name','eStructuralFeatures':['extendedCase','condition','extensionLocation','extension'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@8331cc5 (expression: NamedElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@4d001ff2 (expression: DirectedRelationship)']}}" 
},{
	 "id": "691", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2Ot6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3bde43d0 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@33cac2b6 (source: redefines)'],'name':'type_ordering_multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5c521913 (expression: EBoolean)','eParameters':['diagnostics','context']}}" 
},{
	 "id": "692", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgc5N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@203757da (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'destinations_or_sources_of_transitions','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5f909641 (expression: EBoolean)','eContainingClass':'State','eParameters':['diagnostics','context']}}" 
},{
	 "id": "693", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgZpd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@37cc79ce (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@1eccc679 (source: subsets)'],'name':'nestedArtifact','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Artifact','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6089f016 (expression: Artifact)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'Artifact','containment':'true','container':'false','resolveProxies':'true','eReferenceType':'Artifact'}}" 
},{
	 "id": "694", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_ftf0Yd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@48570365 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isAbstract','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@62b31978 (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'false','defaultValue':'false','unsettable':'false','derived':'false','eContainingClass':'Classifier','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "695", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf0y96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@53e4a93e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Generalization','ePackage':'uml','abstract':'false','interface':'false','eOperations':['generalization_same_classifier'],'eStructuralFeatures':['isSubstitutable','general','generalizationSet','specific'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d546fc7 (expression: DirectedRelationship)']}}" 
},{
	 "id": "696", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiPjN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5772f7b8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LinkEndData','ePackage':'uml','abstract':'false','interface':'false','eOperations':['property_is_association_end','same_type','multiplicity','qualifiers','end_object_input_pin'],'eStructuralFeatures':['value','end','qualifier'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2bf54b6f (expression: Element)']}}" 
},{
	 "id": "697", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfLbt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1fa8f2a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'TypedElement','ePackage':'uml','abstract':'true','interface':'false','eIDAttribute':'name','eStructuralFeatures':['type'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2ecfb80f (expression: NamedElement)']}}" 
},{
	 "id": "698", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiPUt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@57093a1a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'AddStructuralFeatureValueAction','ePackage':'uml','abstract':'false','interface':'false','eOperations':['unlimited_natural_and_multiplicity'],'eIDAttribute':'name','eStructuralFeatures':['isReplaceAll','insertAt'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@234c8b84 (expression: WriteStructuralFeatureAction)']}}" 
},{
	 "id": "699", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthDQN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@226abbc4 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'commutativity_of_decomposition','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@178d9820 (expression: EBoolean)','eContainingClass':'PartDecomposition','eParameters':['diagnostics','context']}}" 
},{
	 "id": "700", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftf2-d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@143093fa (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'role','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'ConnectableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@830bf38 (expression: ConnectableElement)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'ConnectorEnd','containment':'false','container':'false','resolveProxies':'true','eOpposite':'end','eReferenceType':'ConnectableElement'}}" 
},{
	 "id": "701", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthDA96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@62fa88d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Lifeline','ePackage':'uml','abstract':'false','interface':'false','eOperations':['interaction_uses_share_lifeline','selector_specified','same_classifier'],'eIDAttribute':'name','eStructuralFeatures':['represents','interaction','selector','decomposedAs','coveredBy'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4c8b9c4 (expression: NamedElement)']}}" 
},{
	 "id": "702", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthDLd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1f73b7f6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'PartDecomposition','ePackage':'uml','abstract':'false','interface':'false','eOperations':['parts_of_internal_structures','assume','commutativity_of_decomposition'],'eIDAttribute':'name','eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@375a6792 (expression: InteractionUse)']}}" 
},{
	 "id": "703", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnumLiteral', 'attributes': {'id': '_ftgd2d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@62ea7777 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'fork','value':'4','instance':'fork','literal':'fork','eEnum':'PseudostateKind'}}" 
},{
	 "id": "704", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_hs3Hu96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6f607c6c (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@24f08d9a (source: http://www.eclipse.org/emf/2002/Ecore)','...'],'name':'isCompatibleWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6b91f712 (expression: Boolean)','eParameters':['p']}}" 
},{
	 "id": "705", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjf-96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@36afe278 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ProtocolTransition','ePackage':'uml','abstract':'false','interface':'false','eOperations':['belongs_to_psm','associated_actions','refers_to_operation'],'eIDAttribute':'name','eStructuralFeatures':['postCondition','referred','preCondition'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@1fdf7981 (expression: Transition)']}}" 
}], 
 "links": [{
	 "source": "0", 
	 "target": "1", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "2", 
	 "target": "3", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "4", 
	 "target": "5", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "6", 
	 "target": "7", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "8", 
	 "target": "9", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "10", 
	 "target": "11", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "12", 
	 "target": "13", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "14", 
	 "target": "15", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "16", 
	 "target": "17", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "18", 
	 "target": "19", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "20", 
	 "target": "21", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "22", 
	 "target": "23", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "24", 
	 "target": "25", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "26", 
	 "target": "27", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "28", 
	 "target": "29", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "30", 
	 "target": "31", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "32", 
	 "target": "33", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "34", 
	 "target": "35", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "36", 
	 "target": "37", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "38", 
	 "target": "39", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "40", 
	 "target": "41", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "42", 
	 "target": "43", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "44", 
	 "target": "45", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "46", 
	 "target": "47", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "48", 
	 "target": "49", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "50", 
	 "target": "51", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "52", 
	 "target": "53", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "54", 
	 "target": "55", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "56", 
	 "target": "57", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "58", 
	 "target": "59", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "60", 
	 "target": "61", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "62", 
	 "target": "63", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "64", 
	 "target": "65", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "66", 
	 "target": "67", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "68", 
	 "target": "69", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "70", 
	 "target": "71", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "72", 
	 "target": "73", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "74", 
	 "target": "75", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "76", 
	 "target": "77", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "78", 
	 "target": "79", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "80", 
	 "target": "81", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "82", 
	 "target": "83", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "84", 
	 "target": "85", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "86", 
	 "target": "87", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "88", 
	 "target": "89", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "90", 
	 "target": "91", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "92", 
	 "target": "93", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "94", 
	 "target": "95", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "96", 
	 "target": "97", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "98", 
	 "target": "99", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "100", 
	 "target": "101", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "102", 
	 "target": "103", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "104", 
	 "target": "105", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "106", 
	 "target": "107", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "108", 
	 "target": "109", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "110", 
	 "target": "111", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "112", 
	 "target": "113", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "114", 
	 "target": "115", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "116", 
	 "target": "117", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "118", 
	 "target": "119", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "120", 
	 "target": "121", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "122", 
	 "target": "123", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "124", 
	 "target": "125", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "126", 
	 "target": "127", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "128", 
	 "target": "129", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "130", 
	 "target": "131", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "132", 
	 "target": "133", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "134", 
	 "target": "135", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "136", 
	 "target": "137", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "138", 
	 "target": "139", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "140", 
	 "target": "141", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "142", 
	 "target": "143", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "144", 
	 "target": "145", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "146", 
	 "target": "147", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "148", 
	 "target": "149", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "150", 
	 "target": "151", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "152", 
	 "target": "153", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "154", 
	 "target": "155", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "156", 
	 "target": "157", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "158", 
	 "target": "159", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "160", 
	 "target": "161", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "162", 
	 "target": "163", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "164", 
	 "target": "165", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "166", 
	 "target": "167", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "168", 
	 "target": "169", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "170", 
	 "target": "171", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "172", 
	 "target": "173", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "174", 
	 "target": "175", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "176", 
	 "target": "177", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "178", 
	 "target": "179", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "180", 
	 "target": "181", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "182", 
	 "target": "183", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "184", 
	 "target": "185", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "186", 
	 "target": "187", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "188", 
	 "target": "189", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "190", 
	 "target": "191", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "192", 
	 "target": "193", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "194", 
	 "target": "195", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "196", 
	 "target": "197", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "198", 
	 "target": "199", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "200", 
	 "target": "201", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "202", 
	 "target": "203", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "204", 
	 "target": "205", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "206", 
	 "target": "207", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "208", 
	 "target": "209", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "210", 
	 "target": "211", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "212", 
	 "target": "213", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "214", 
	 "target": "215", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "216", 
	 "target": "217", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "218", 
	 "target": "219", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "220", 
	 "target": "221", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "222", 
	 "target": "223", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "224", 
	 "target": "225", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "226", 
	 "target": "227", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "228", 
	 "target": "229", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "230", 
	 "target": "231", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "232", 
	 "target": "233", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "234", 
	 "target": "235", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "236", 
	 "target": "237", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "238", 
	 "target": "239", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "240", 
	 "target": "241", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "242", 
	 "target": "243", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "244", 
	 "target": "245", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "246", 
	 "target": "247", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "248", 
	 "target": "249", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "250", 
	 "target": "251", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "252", 
	 "target": "253", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "254", 
	 "target": "255", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "256", 
	 "target": "257", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "258", 
	 "target": "259", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "260", 
	 "target": "261", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "262", 
	 "target": "263", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "264", 
	 "target": "265", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "266", 
	 "target": "267", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "268", 
	 "target": "269", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "270", 
	 "target": "271", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "272", 
	 "target": "273", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "274", 
	 "target": "275", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "276", 
	 "target": "277", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "278", 
	 "target": "279", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "280", 
	 "target": "281", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "282", 
	 "target": "283", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "284", 
	 "target": "285", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "286", 
	 "target": "287", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "288", 
	 "target": "289", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "290", 
	 "target": "291", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "292", 
	 "target": "293", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "294", 
	 "target": "295", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "296", 
	 "target": "297", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "298", 
	 "target": "299", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "300", 
	 "target": "301", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "302", 
	 "target": "303", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "304", 
	 "target": "305", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "306", 
	 "target": "307", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "308", 
	 "target": "309", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "310", 
	 "target": "311", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "312", 
	 "target": "313", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "314", 
	 "target": "315", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "316", 
	 "target": "317", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "318", 
	 "target": "319", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "320", 
	 "target": "321", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "322", 
	 "target": "323", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "324", 
	 "target": "325", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "326", 
	 "target": "327", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "328", 
	 "target": "329", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "330", 
	 "target": "331", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "332", 
	 "target": "333", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "334", 
	 "target": "335", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "336", 
	 "target": "337", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "338", 
	 "target": "339", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "340", 
	 "target": "341", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "342", 
	 "target": "343", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "344", 
	 "target": "345", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "346", 
	 "target": "347", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "348", 
	 "target": "349", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "350", 
	 "target": "351", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "352", 
	 "target": "353", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "354", 
	 "target": "355", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "356", 
	 "target": "357", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "358", 
	 "target": "359", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "360", 
	 "target": "361", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "362", 
	 "target": "363", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "364", 
	 "target": "365", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "366", 
	 "target": "367", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "368", 
	 "target": "369", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "370", 
	 "target": "371", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "372", 
	 "target": "373", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "374", 
	 "target": "375", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "376", 
	 "target": "377", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "378", 
	 "target": "379", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "380", 
	 "target": "381", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "382", 
	 "target": "383", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "384", 
	 "target": "385", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "386", 
	 "target": "387", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "388", 
	 "target": "389", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "390", 
	 "target": "391", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "392", 
	 "target": "393", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "394", 
	 "target": "395", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "396", 
	 "target": "397", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "398", 
	 "target": "399", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "400", 
	 "target": "401", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "402", 
	 "target": "403", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "404", 
	 "target": "405", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "406", 
	 "target": "407", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "408", 
	 "target": "409", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "410", 
	 "target": "411", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "412", 
	 "target": "413", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "414", 
	 "target": "415", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "416", 
	 "target": "417", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "418", 
	 "target": "419", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "420", 
	 "target": "421", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "422", 
	 "target": "423", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "424", 
	 "target": "425", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "426", 
	 "target": "427", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "428", 
	 "target": "429", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "430", 
	 "target": "431", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "432", 
	 "target": "433", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "434", 
	 "target": "435", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "436", 
	 "target": "437", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "438", 
	 "target": "439", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "440", 
	 "target": "441", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "442", 
	 "target": "443", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "444", 
	 "target": "445", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "446", 
	 "target": "447", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "448", 
	 "target": "449", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "450", 
	 "target": "451", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "452", 
	 "target": "453", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "454", 
	 "target": "455", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "456", 
	 "target": "457", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "458", 
	 "target": "459", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "460", 
	 "target": "461", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "462", 
	 "target": "463", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "464", 
	 "target": "465", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "466", 
	 "target": "467", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "468", 
	 "target": "469", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "470", 
	 "target": "471", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "472", 
	 "target": "473", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "474", 
	 "target": "475", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "476", 
	 "target": "477", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "478", 
	 "target": "479", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "480", 
	 "target": "481", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "482", 
	 "target": "483", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "484", 
	 "target": "485", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "486", 
	 "target": "487", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "488", 
	 "target": "489", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "490", 
	 "target": "491", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "492", 
	 "target": "493", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "494", 
	 "target": "495", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "496", 
	 "target": "497", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "498", 
	 "target": "499", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "500", 
	 "target": "501", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "502", 
	 "target": "503", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "504", 
	 "target": "505", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "506", 
	 "target": "507", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "508", 
	 "target": "509", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "510", 
	 "target": "511", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "512", 
	 "target": "513", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "514", 
	 "target": "515", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "516", 
	 "target": "517", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "518", 
	 "target": "519", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "520", 
	 "target": "521", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "522", 
	 "target": "523", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "524", 
	 "target": "525", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "526", 
	 "target": "527", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "528", 
	 "target": "529", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "530", 
	 "target": "531", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "532", 
	 "target": "533", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "534", 
	 "target": "535", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "536", 
	 "target": "537", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "538", 
	 "target": "539", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "540", 
	 "target": "541", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "542", 
	 "target": "543", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "544", 
	 "target": "545", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "546", 
	 "target": "547", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "548", 
	 "target": "549", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "550", 
	 "target": "551", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "552", 
	 "target": "553", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "554", 
	 "target": "555", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "556", 
	 "target": "557", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "558", 
	 "target": "559", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "560", 
	 "target": "561", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "562", 
	 "target": "563", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "564", 
	 "target": "242", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "564", 
	 "target": "524", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "565", 
	 "target": "104", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "565", 
	 "target": "386", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "566", 
	 "target": "220", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "566", 
	 "target": "502", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "567", 
	 "target": "266", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "567", 
	 "target": "548", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "568", 
	 "target": "18", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "568", 
	 "target": "300", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "569", 
	 "target": "268", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "569", 
	 "target": "550", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "570", 
	 "target": "152", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "570", 
	 "target": "434", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "571", 
	 "target": "118", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "571", 
	 "target": "400", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "572", 
	 "target": "28", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "572", 
	 "target": "310", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "573", 
	 "target": "196", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "573", 
	 "target": "478", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "574", 
	 "target": "62", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "574", 
	 "target": "344", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "575", 
	 "target": "82", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "575", 
	 "target": "364", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "576", 
	 "target": "88", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "576", 
	 "target": "370", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "577", 
	 "target": "6", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "577", 
	 "target": "288", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "578", 
	 "target": "64", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "578", 
	 "target": "346", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "579", 
	 "target": "158", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "579", 
	 "target": "440", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "580", 
	 "target": "270", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "580", 
	 "target": "552", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "581", 
	 "target": "234", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "581", 
	 "target": "516", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "582", 
	 "target": "244", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "582", 
	 "target": "526", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "583", 
	 "target": "148", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "583", 
	 "target": "430", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "584", 
	 "target": "585", 
	 "label": "{'changeType': 'Change', 'type': 'attribute'}" 
},{
	 "source": "586", 
	 "target": "226", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "586", 
	 "target": "508", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "587", 
	 "target": "84", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "587", 
	 "target": "366", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "588", 
	 "target": "76", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "588", 
	 "target": "358", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "589", 
	 "target": "162", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "589", 
	 "target": "444", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "590", 
	 "target": "98", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "590", 
	 "target": "380", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "591", 
	 "target": "250", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "591", 
	 "target": "532", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "592", 
	 "target": "140", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "592", 
	 "target": "422", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "593", 
	 "target": "138", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "593", 
	 "target": "420", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "594", 
	 "target": "274", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "594", 
	 "target": "556", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "595", 
	 "target": "24", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "595", 
	 "target": "306", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "596", 
	 "target": "38", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "596", 
	 "target": "320", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "597", 
	 "target": "134", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "597", 
	 "target": "416", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "598", 
	 "target": "70", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "598", 
	 "target": "352", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "599", 
	 "target": "4", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "599", 
	 "target": "286", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "600", 
	 "target": "224", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "600", 
	 "target": "506", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "601", 
	 "target": "20", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "601", 
	 "target": "302", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "602", 
	 "target": "262", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "602", 
	 "target": "544", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "603", 
	 "target": "260", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "603", 
	 "target": "542", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "604", 
	 "target": "216", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "604", 
	 "target": "498", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "605", 
	 "target": "276", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "605", 
	 "target": "558", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "606", 
	 "target": "174", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "606", 
	 "target": "456", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "607", 
	 "target": "192", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "607", 
	 "target": "474", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "608", 
	 "target": "236", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "608", 
	 "target": "518", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "609", 
	 "target": "222", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "609", 
	 "target": "504", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "610", 
	 "target": "124", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "610", 
	 "target": "406", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "611", 
	 "target": "108", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "611", 
	 "target": "390", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "612", 
	 "target": "182", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "612", 
	 "target": "464", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "613", 
	 "target": "8", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "613", 
	 "target": "290", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "614", 
	 "target": "228", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "614", 
	 "target": "510", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "615", 
	 "target": "14", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "615", 
	 "target": "296", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "616", 
	 "target": "78", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "616", 
	 "target": "360", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "617", 
	 "target": "114", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "617", 
	 "target": "396", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "618", 
	 "target": "248", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "618", 
	 "target": "530", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "619", 
	 "target": "30", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "619", 
	 "target": "312", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "620", 
	 "target": "32", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "620", 
	 "target": "314", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "621", 
	 "target": "172", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "621", 
	 "target": "454", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "622", 
	 "target": "180", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "622", 
	 "target": "462", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "623", 
	 "target": "130", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "623", 
	 "target": "412", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "624", 
	 "target": "252", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "624", 
	 "target": "534", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "625", 
	 "target": "112", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "625", 
	 "target": "394", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "626", 
	 "target": "102", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "626", 
	 "target": "384", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "627", 
	 "target": "254", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "627", 
	 "target": "536", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "628", 
	 "target": "120", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "628", 
	 "target": "402", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "629", 
	 "target": "12", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "629", 
	 "target": "294", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "630", 
	 "target": "232", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "630", 
	 "target": "514", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "631", 
	 "target": "176", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "631", 
	 "target": "458", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "632", 
	 "target": "80", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "632", 
	 "target": "362", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "633", 
	 "target": "66", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "633", 
	 "target": "348", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "634", 
	 "target": "122", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "634", 
	 "target": "404", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "635", 
	 "target": "90", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "635", 
	 "target": "372", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "636", 
	 "target": "164", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "636", 
	 "target": "446", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "637", 
	 "target": "132", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "637", 
	 "target": "414", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "638", 
	 "target": "168", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "638", 
	 "target": "450", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "639", 
	 "target": "2", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "639", 
	 "target": "284", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "640", 
	 "target": "166", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "640", 
	 "target": "448", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "641", 
	 "target": "218", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "641", 
	 "target": "500", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "642", 
	 "target": "150", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "642", 
	 "target": "432", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "643", 
	 "target": "190", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "643", 
	 "target": "472", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "644", 
	 "target": "126", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "644", 
	 "target": "408", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "645", 
	 "target": "48", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "645", 
	 "target": "330", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "646", 
	 "target": "194", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "646", 
	 "target": "476", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "647", 
	 "target": "198", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "647", 
	 "target": "480", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "648", 
	 "target": "144", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "648", 
	 "target": "426", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "649", 
	 "target": "60", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "649", 
	 "target": "342", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "650", 
	 "target": "200", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "650", 
	 "target": "482", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "651", 
	 "target": "178", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "651", 
	 "target": "460", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "652", 
	 "target": "154", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "652", 
	 "target": "436", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "653", 
	 "target": "86", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "653", 
	 "target": "368", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "654", 
	 "target": "188", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "654", 
	 "target": "470", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "655", 
	 "target": "100", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "655", 
	 "target": "382", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "656", 
	 "target": "136", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "656", 
	 "target": "418", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "657", 
	 "target": "280", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "657", 
	 "target": "562", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "658", 
	 "target": "34", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "658", 
	 "target": "316", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "659", 
	 "target": "258", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "659", 
	 "target": "540", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "660", 
	 "target": "96", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "660", 
	 "target": "378", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "661", 
	 "target": "116", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "661", 
	 "target": "398", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "662", 
	 "target": "68", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "662", 
	 "target": "350", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "663", 
	 "target": "246", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "663", 
	 "target": "528", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "664", 
	 "target": "264", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "664", 
	 "target": "546", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "665", 
	 "target": "92", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "665", 
	 "target": "374", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "666", 
	 "target": "272", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "666", 
	 "target": "554", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "667", 
	 "target": "50", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "667", 
	 "target": "332", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "668", 
	 "target": "36", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "668", 
	 "target": "318", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "669", 
	 "target": "52", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "669", 
	 "target": "334", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "670", 
	 "target": "230", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "670", 
	 "target": "512", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "671", 
	 "target": "54", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "671", 
	 "target": "336", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "672", 
	 "target": "256", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "672", 
	 "target": "538", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "673", 
	 "target": "206", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "673", 
	 "target": "488", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "674", 
	 "target": "10", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "674", 
	 "target": "292", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "675", 
	 "target": "186", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "675", 
	 "target": "468", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "676", 
	 "target": "40", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "676", 
	 "target": "322", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "677", 
	 "target": "214", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "677", 
	 "target": "496", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "678", 
	 "target": "210", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "678", 
	 "target": "492", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "679", 
	 "target": "72", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "679", 
	 "target": "354", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "680", 
	 "target": "110", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "680", 
	 "target": "392", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "681", 
	 "target": "142", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "681", 
	 "target": "424", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "682", 
	 "target": "212", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "682", 
	 "target": "494", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "683", 
	 "target": "160", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "683", 
	 "target": "442", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "684", 
	 "target": "74", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "684", 
	 "target": "356", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "685", 
	 "target": "170", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "685", 
	 "target": "452", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "686", 
	 "target": "58", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "686", 
	 "target": "340", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "687", 
	 "target": "44", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "687", 
	 "target": "326", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "688", 
	 "target": "156", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "688", 
	 "target": "438", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "689", 
	 "target": "128", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "689", 
	 "target": "410", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "690", 
	 "target": "146", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "690", 
	 "target": "428", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "691", 
	 "target": "184", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "691", 
	 "target": "466", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "692", 
	 "target": "94", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "692", 
	 "target": "376", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "693", 
	 "target": "56", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "693", 
	 "target": "338", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "694", 
	 "target": "22", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "694", 
	 "target": "304", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "695", 
	 "target": "26", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "695", 
	 "target": "308", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "696", 
	 "target": "240", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "696", 
	 "target": "522", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "697", 
	 "target": "16", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "697", 
	 "target": "298", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "698", 
	 "target": "238", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "698", 
	 "target": "520", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "699", 
	 "target": "208", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "699", 
	 "target": "490", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "700", 
	 "target": "42", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "700", 
	 "target": "324", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "701", 
	 "target": "202", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "701", 
	 "target": "484", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "702", 
	 "target": "204", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "702", 
	 "target": "486", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "703", 
	 "target": "106", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "703", 
	 "target": "388", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "704", 
	 "target": "46", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "704", 
	 "target": "328", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "705", 
	 "target": "278", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "705", 
	 "target": "560", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
}]}