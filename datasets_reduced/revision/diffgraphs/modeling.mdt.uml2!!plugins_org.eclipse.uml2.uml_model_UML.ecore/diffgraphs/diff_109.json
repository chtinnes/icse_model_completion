{"directed": true, "multigraph": false, "graph": {}, 
  "nodes": [{
	 "id": "0", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0UJd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2d949912 (key: documentation, value: A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges.\\nownedParameter->forAll(p | \\r\\np.direction = ParameterDirectionKind::inout implies\\r\\nlet associatedNodes : Set(ActivityNode) = node->select(\\r\\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p) in \\r\\n  associatedNodes->size()=2 and\\r\\n  associatedNodes->select(incoming->notEmpty())->size()<=1 and\\r\\n  associatedNodes->select(outgoing->notEmpty())->size()<=1\\r\\n)\\r\\n)'],'eModelElement':'maximum_two_parameter_nodes'}}" 
},{
	 "id": "1", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0UJt6tEei97MD7GK1RmA', 'key':'documentation','value':'A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges.\\nownedParameter->forAl'}}" 
},{
	 "id": "2", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0UV96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@61addd24 (key: documentation, value: If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the Activity, then the model is ill-formed.) \\n<p>From package UML::Activities.</p>)'],'eModelElement':'isReadOnly'}}" 
},{
	 "id": "3", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0UWN6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execu'}}" 
},{
	 "id": "4", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0UlN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5eb68710 (key: documentation, value: A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior. \\nresult = (if nestingClass <> null then\\r\\n    null\\r\\nelse\\r\\n    let b:BehavioredClassifier = self.behavioredClassifier(self.owner) in\\r\\n    if b.oclIsKindOf(Behavior) and b.oclAsType(Behavior)._'context' <> null then \\r\\n        b.oclAsType(Behavior)._'context'\\r\\n    else \\r\\n        b \\r\\n    endif\\r\\nendif\\r\\n        )\\n<p>From package UML::CommonBehavior.</p>)','...'],'eModelElement':'getContext'}}" 
},{
	 "id": "5", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Uld6tEei97MD7GK1RmA', 'key':'documentation','value':'A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain o'}}" 
},{
	 "id": "6", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Ult6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "7", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0UmN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7af0c354 (key: documentation, value: The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any.\\nif from.oclIsKindOf(BehavioredClassifier) then\\r\\n    from.oclAsType(BehavioredClassifier)\\r\\nelse if from.owner = null then\\r\\n    null\\r\\nelse\\r\\n    self.behavioredClassifier(from.owner)\\r\\nendif\\r\\nendif\\r\\n    \\n<p>From package UML::CommonBehavior.</p>)'],'eModelElement':'behavioredClassifier'}}" 
},{
	 "id": "8", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Umd6tEei97MD7GK1RmA', 'key':'documentation','value':'The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any.\\nif from.oclIsKindOf(BehavioredClassifier) then\\r\\n    from.oclAsType(BehavioredClassifier)'}}" 
},{
	 "id": "9", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0Uwd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2a2e33fa (key: documentation, value: A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.\\r\\n\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Class'}}" 
},{
	 "id": "10", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Uwt6tEei97MD7GK1RmA', 'key':'documentation','value':'A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.\\r\\n\\n<p>From package UML::'}}" 
},{
	 "id": "11", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0YMN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@41cbbdad (key: documentation, value: A Stereotype may only generalize or specialize another Stereotype.\\nallParents()->forAll(oclIsKindOf(Stereotype)) \\r\\nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereotype)) implies c.oclIsKindOf(Stereotype))\\r\\n)'],'eModelElement':'generalize'}}" 
},{
	 "id": "12", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0YMd6tEei97MD7GK1RmA', 'key':'documentation','value':'A Stereotype may only generalize or specialize another Stereotype.\\nallParents()->forAll(oclIsKindOf(Stereotype)) \\r\\nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereoty'}}" 
},{
	 "id": "13", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0Zxt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1eaa8100 (key: documentation, value: Derivation for Package::/nestedPackage \\nresult = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())\\n<p>From package UML::Packages.</p>)','...'],'eModelElement':'getNestedPackages'}}" 
},{
	 "id": "14", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Zx96tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for Package::/nestedPackage \\nresult = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())\\n<p>From package UML::Packages.</p>'}}" 
},{
	 "id": "15", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0ZyN6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "16", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0Zyt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@27b10e00 (key: documentation, value: Derivation for Package::/ownedStereotype \\nresult = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())\\n<p>From package UML::Packages.</p>)','...'],'eModelElement':'getOwnedStereotypes'}}" 
},{
	 "id": "17", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0Zy96tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for Package::/ownedStereotype \\nresult = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())\\n<p>From package UML::Packages.</p>'}}" 
},{
	 "id": "18", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0ZzN6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "19", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0a596tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@49640589 (key: documentation, value: A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package, a NamedElement marked as having package visibility is not visible.  Only NamedElements that are not owned by Packages can be marked as having package visibility. )'],'eModelElement':'package'}}" 
},{
	 "id": "20", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0a6N6tEei97MD7GK1RmA', 'key':'documentation','value':'A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package,'}}" 
},{
	 "id": "21", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0bJd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@8a5361f (key: documentation, value: A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of the type of the corresponding end of the Association.\\r\\n\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Association'}}" 
},{
	 "id": "22", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0bJt6tEei97MD7GK1RmA', 'key':'documentation','value':'A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of th'}}" 
},{
	 "id": "23", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0btt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2e0534f8 (key: documentation, value: A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1.\\nisComposite and association <> null implies opposite.upperBound() <= 1\\r\\n\\r\\n)'],'eModelElement':'multiplicity_of_composite'}}" 
},{
	 "id": "24", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0bt96tEei97MD7GK1RmA', 'key':'documentation','value':'A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1.\\nisComposite and association <> null implies opposite.upperBound() <= 1\\r\\n\\r\\n'}}" 
},{
	 "id": "25", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0e4t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4bca2998 (key: documentation, value: Derivation for OpaqueExpression::/result \\nresult = (if behavior = null then\\r\\n\\tnull\\r\\nelse\\r\\n\\tbehavior.ownedParameter->first()\\r\\nendif)\\n<p>From package UML::Values.</p>)','...'],'eModelElement':'getResult'}}" 
},{
	 "id": "26", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0e496tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for OpaqueExpression::/result \\nresult = (if behavior = null then\\r\\n\\tnull\\r\\nelse\\r\\n\\tbehavior.ownedParameter->first()\\r\\nendif)\\n<p>From package UML::Values.</p>'}}" 
},{
	 "id": "27", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0e5N6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "28", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0fqN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2976457e (key: documentation, value: Indicates that Parameter values are passed in by the caller. )'],'eModelElement':'in'}}" 
},{
	 "id": "29", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0fqd6tEei97MD7GK1RmA', 'key':'documentation','value':'Indicates that Parameter values are passed in by the caller. '}}" 
},{
	 "id": "30", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0g_d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@9cb314b (key: documentation, value: If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters.\\n((parameter->exists(direction = ParameterDirectionKind::_'in')) implies \\r\\n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::_'in' and p.parameterSet->isEmpty())->forAll(isStream))\\r\\n    and\\r\\n((parameter->exists(direction = ParameterDirectionKind::out)) implies \\r\\n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::out and p.parameterSet->isEmpty())->forAll(isStream))  \\r\\n)'],'eModelElement':'input'}}" 
},{
	 "id": "31", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0g_t6tEei97MD7GK1RmA', 'key':'documentation','value':'If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters.\\n((parameter->exists(direction ='}}" 
},{
	 "id": "32", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iIN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@614318da (key: documentation, value: ProtocolStateMachines cannot have deep or shallow history Pseudostates.\\nregion->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\\n((v.oclAsType(Pseudostate).kind <>  PseudostateKind::deepHistory) and (v.oclAsType(Pseudostate).kind <> PseudostateKind::shallowHistory))))\\n)'],'eModelElement':'deep_or_shallow_history'}}" 
},{
	 "id": "33", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iId6tEei97MD7GK1RmA', 'key':'documentation','value':'ProtocolStateMachines cannot have deep or shallow history Pseudostates.\\nregion->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\\n((v.oclAsType(Pseudostate).kind <>  PseudostateK'}}" 
},{
	 "id": "34", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iLt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@850fa3c (key: documentation, value: The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors.\\nregion->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\\n(v.oclAsType(State).entry->isEmpty() and v.oclAsType(State).exit->isEmpty() and v.oclAsType(State).doActivity->isEmpty())))\\n)'],'eModelElement':'entry_exit_do'}}" 
},{
	 "id": "35", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iL96tEei97MD7GK1RmA', 'key':'documentation','value':'The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors.\\nregion->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\\n(v.oclAsType(State).entry->isEmpty() and'}}" 
},{
	 "id": "36", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iSt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@29636d53 (key: documentation, value: Conformance between ProtocolStateMachine \\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'conformance'}}" 
},{
	 "id": "37", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iS96tEei97MD7GK1RmA', 'key':'documentation','value':'Conformance between ProtocolStateMachine \\n<p>From package UML::StateMachines.</p>'}}" 
},{
	 "id": "38", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iuN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1b00037 (key: documentation, value: All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an orthogonal state which contains the targets of these transitions \\r\\n-- such that these targets belong to different regions of that orthogonal state \\r\\n\\r\\noutgoing->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.target, t2.target) in\\r\\n\\t((contState <> null) and (contState.region\\r\\n\\t\\t->exists(r1:Region, r2: Region | (r1 <> r2) and t1.target.isContainedInRegion(r1) and t2.target.isContainedInRegion(r2)))))\\r\\n\\t)'],'eModelElement':'transitions_outgoing'}}" 
},{
	 "id": "39", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iud6tEei97MD7GK1RmA', 'key':'documentation','value':'All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an'}}" 
},{
	 "id": "40", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0ixt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3f3c2e61 (key: documentation, value: In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1)\\n)'],'eModelElement':'choice_vertex'}}" 
},{
	 "id": "41", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0ix96tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1)\\n'}}" 
},{
	 "id": "42", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0i4t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@77f39d38 (key: documentation, value: In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition.\\n(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->size() >= 2)\\n)'],'eModelElement':'join_vertex'}}" 
},{
	 "id": "43", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0i496tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition.\\n(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->si'}}" 
},{
	 "id": "44", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0i8N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@22871e38 (key: documentation, value: In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1)\\n)'],'eModelElement':'junction_vertex'}}" 
},{
	 "id": "45", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0i8d6tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1)\\n'}}" 
},{
	 "id": "46", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0i_t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@44b6628f (key: documentation, value: History Vertices can have at most one outgoing Transition.\\n((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1)\\n)'],'eModelElement':'history_vertices'}}" 
},{
	 "id": "47", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0i_96tEei97MD7GK1RmA', 'key':'documentation','value':'History Vertices can have at most one outgoing Transition.\\n((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1)\\n'}}" 
},{
	 "id": "48", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jGt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@336c2e1d (key: documentation, value: In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition.\\n(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->size() >= 2)\\n)'],'eModelElement':'fork_vertex'}}" 
},{
	 "id": "49", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jG96tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition.\\n(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->si'}}" 
},{
	 "id": "50", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jRN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3ca30dd2 (key: documentation, value: The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\nelse \\n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\\n      self.oclAsType(Pseudostate).stateMachine\\n   else \\n      if (self.oclIsKindOf(ConnectionPointReference)) then\\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\\n      else \\n          null\\n      endif\\n   endif\\nendif\\n\\n)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'containingStateMachine'}}" 
},{
	 "id": "51", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jRd6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\n'}}" 
},{
	 "id": "52", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jet6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5175faeb (key: documentation, value: A Region can have at most one deep history Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n   select(kind = PseudostateKind::deepHistory)->size() <= 1\\n)'],'eModelElement':'deep_history_vertex'}}" 
},{
	 "id": "53", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0je96tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one deep history Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n   select(kind = PseudostateKind::deepHistory)->size() <= 1\\n'}}" 
},{
	 "id": "54", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jiN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@579a0c68 (key: documentation, value: A Region can have at most one shallow history Vertex.\\nsubvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1\\n)'],'eModelElement':'shallow_history_vertex'}}" 
},{
	 "id": "55", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jid6tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one shallow history Vertex.\\nsubvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1\\n'}}" 
},{
	 "id": "56", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jpN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6c79497e (key: documentation, value: A Region can have at most one initial Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::initial)->size() <= 1\\n)'],'eModelElement':'initial_vertex'}}" 
},{
	 "id": "57", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jpd6tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one initial Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::initial)->size() <= 1\\n'}}" 
},{
	 "id": "58", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0lhd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@230d1232 (key: documentation, value: An initial Transition at the topmost level Region of a StateMachine that has no Trigger.\\n(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\\n\\ttrigger->isEmpty()\\n)'],'eModelElement':'initial_transition'}}" 
},{
	 "id": "59", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0lht6tEei97MD7GK1RmA', 'key':'documentation','value':'An initial Transition at the topmost level Region of a StateMachine that has no Trigger.\\n(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\\n\\ttrigger->isEmpty()\\n'}}" 
},{
	 "id": "60", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0oDt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5bd16d75 (key: documentation, value: A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality. \\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Collaboration'}}" 
},{
	 "id": "61", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0oD96tEei97MD7GK1RmA', 'key':'documentation','value':'A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality. \\n<p>From package UML::Structu'}}" 
},{
	 "id": "62", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0p0d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6459e77d (key: documentation, value: If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable.\\nconstrainingClassifier->forAll(\\r\\n     cc |  parameteredElement = cc or parameteredElement.conformsTo(cc) or (allowSubstitutable and parameteredElement.isSubstitutableFor(cc))\\r\\n)\\r\\n)'],'eModelElement':'constraining_classifiers_constrain_parametered_element'}}" 
},{
	 "id": "63", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0p0t6tEei97MD7GK1RmA', 'key':'documentation','value':'If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable.\\nconstraining'}}" 
},{
	 "id": "64", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0rVd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6eacd361 (key: documentation, value: If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Actions that would result in accessing such objects are required to have their execution deferred until the completion of the StructuredActivityNode.\\r\\n\\n<p>From package UML::Actions.</p>)'],'eModelElement':'mustIsolate'}}" 
},{
	 "id": "65", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0rVt6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Act'}}" 
},{
	 "id": "66", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0r_d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@65b06fcd (key: documentation, value: An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification of the state required for tokens being held, and carrying control values.\\r\\n\\n<p>From package UML::Activities.</p>)'],'eModelElement':'ObjectNode'}}" 
},{
	 "id": "67", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0r_t6tEei97MD7GK1RmA', 'key':'documentation','value':'An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification o'}}" 
},{
	 "id": "68", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0sAN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@758ce051 (key: documentation, value: A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of ObjectNode. The Behavior cannot have side effects.\\nselection<>null implies\\r\\n\\tselection.inputParameters()->size()=1 and\\r\\n\\tselection.inputParameters()->forAll(p | not p.isUnique and p.is(0,*) and self.type.conformsTo(p.type)) and\\r\\n\\tselection.outputParameters()->size()=1 and\\r\\n\\t\\tselection.inputParameters()->forAll(p | self.type.conformsTo(p.type))\\r\\n\\t)'],'eModelElement':'input_output_parameter'}}" 
},{
	 "id": "69", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0sAd6tEei97MD7GK1RmA', 'key':'documentation','value':'A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0.'}}" 
},{
	 "id": "70", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0s3d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@499d48f5 (key: documentation, value: The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction.\\nendData.end->exists(end |\\r\\n  end.type=_'context' or\\r\\n  end.visibility=VisibilityKind::public or \\r\\n  end.visibility=VisibilityKind::protected and\\r\\n  endData.end->exists(other | \\r\\n    other<>end and _'context'.conformsTo(other.type.oclAsType(Classifier))))\\r\\n)'],'eModelElement':'allow_access'}}" 
},{
	 "id": "71", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0s3t6tEei97MD7GK1RmA', 'key':'documentation','value':'The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction.\\nendData.end->exists(end |\\r\\n  end.type=_'context' or\\r\\n  end.visibility=VisibilityKind::public or'}}" 
},{
	 "id": "72", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0uDt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@450e7918 (key: documentation, value: The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction.\\nstructuralFeature.visibility = VisibilityKind::public or\\n_'context'.allFeatures()->includes(structuralFeature) or\\nstructuralFeature.visibility=VisibilityKind::protected and\\n_'context'.conformsTo(structuralFeature.oclAsType(Property).opposite.type.oclAsType(Classifier))\\n)'],'eModelElement':'visibility'}}" 
},{
	 "id": "73", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0uD96tEei97MD7GK1RmA', 'key':'documentation','value':'The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction.\\nstructuralFeature.visibility = VisibilityKind::public or\\n_'context'.allFeatures()-'}}" 
},{
	 "id": "74", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0uf96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3d7e73f4 (key: documentation, value: The action must have exactly one trigger, which must be for a CallEvent.\\ntrigger->size()=1 and\\r\\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent)\\r\\n)'],'eModelElement':'trigger_call_event'}}" 
},{
	 "id": "75", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0ugN6tEei97MD7GK1RmA', 'key':'documentation','value':'The action must have exactly one trigger, which must be for a CallEvent.\\ntrigger->size()=1 and\\r\\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent)\\r\\n'}}" 
},{
	 "id": "76", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0vNt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a8eac91 (key: documentation, value: AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, and must have no Input Pin for the insertion point when the StructuralFeature is unordered.\\nif not structuralFeature.isOrdered then insertAt = null\\nelse \\n  not isReplaceAll implies\\n  \\tinsertAt<>null and \\n  \\tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\\nendif\\n)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "77", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0vN96tEei97MD7GK1RmA', 'key':'documentation','value':'AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, '}}" 
},{
	 "id": "78", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0vXd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@762b26b9 (key: documentation, value: AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no InputPin for the insertion point.\\nif not variable.isOrdered then insertAt = null\\nelse \\n  not isReplaceAll implies\\n  \\tinsertAt<>null and \\n  \\tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\\nendif\\n)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "79", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0vXt6tEei97MD7GK1RmA', 'key':'documentation','value':'AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no '}}" 
},{
	 "id": "80", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0vo96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@67b8438f (key: documentation, value: InvocationAction is an abstract class for the various actions that request Behavior invocation.\\r\\n\\n<p>From package UML::Actions.</p>)'],'eModelElement':'InvocationAction'}}" 
},{
	 "id": "81", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0vpN6tEei97MD7GK1RmA', 'key':'documentation','value':'InvocationAction is an abstract class for the various actions that request Behavior invocation.\\r\\n\\n<p>From package UML::Actions.</p>'}}" 
},{
	 "id": "82", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0xO96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@38e7c744 (key: documentation, value: LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have no InputPin for the insertion point when the association ends are unordered.\\nif  not end.isOrdered\\nthen insertAt = null\\nelse\\n\\tnot isReplaceAll=false implies\\n\\tinsertAt <> null and insertAt->forAll(type=UnlimitedNatural and is(1,1))\\nendif\\n)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "83", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0xPN6tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have '}}" 
},{
	 "id": "84", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0xhN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@42373fde (key: documentation, value: The classifier cannot be abstract.\\nnot classifier.isAbstract )'],'eModelElement':'classifier_not_abstract'}}" 
},{
	 "id": "85", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0xhd6tEei97MD7GK1RmA', 'key':'documentation','value':'The classifier cannot be abstract.\\nnot classifier.isAbstract '}}" 
},{
	 "id": "86", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0x096tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@cdd80e1 (key: documentation, value: LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no destroyAt input pin.\\nif  not end.isOrdered or end.isUnique or isDestroyDuplicates\\r\\nthen destroyAt = null\\r\\nelse\\r\\n\\tdestroyAt <> null and \\r\\n\\tdestroyAt->forAll(type=UnlimitedNatural and is(1,1))\\r\\nendif\\r\\n)'],'eModelElement':'destroyAt_pin'}}" 
},{
	 "id": "87", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0x1N6tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of '}}" 
},{
	 "id": "88", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0zfN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@77f7c81b (key: documentation, value: The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)\\n)'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "89", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0zfd6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)\\n'}}" 
},{
	 "id": "90", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0zit6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1067b15c (key: documentation, value: The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin.\\nself.openEnd()->first().compatibleWith(result)\\n)'],'eModelElement':'compatible_multiplicity'}}" 
},{
	 "id": "91", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0zi96tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin.\\nself.openEnd()->first().compatibleWith(result)\\n'}}" 
},{
	 "id": "92", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0zmN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2ec863ea (key: documentation, value: Visibility of the open end must allow access from the object performing the action.\\nlet openEnd : Property = self.openEnd()->first() in\\n  openEnd.visibility = VisibilityKind::public or \\n  endData->exists(oed | \\n    oed.end<>openEnd and \\n    (_'context' = oed.end.type or \\n      (openEnd.visibility = VisibilityKind::protected and \\n        _'context'.conformsTo(oed.end.type.oclAsType(Classifier)))))\\n)'],'eModelElement':'visibility'}}" 
},{
	 "id": "93", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0zmd6tEei97MD7GK1RmA', 'key':'documentation','value':'Visibility of the open end must allow access from the object performing the action.\\nlet openEnd : Property = self.openEnd()->first() in\\n  openEnd.visibility = VisibilityKind::public or \\n  endData->exi'}}" 
},{
	 "id": "94", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0ztN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@bd48471 (key: documentation, value: The open end must be navigable.\\nself.openEnd()->first().isNavigable()\\n)'],'eModelElement':'navigable_open_end'}}" 
},{
	 "id": "95", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0ztd6tEei97MD7GK1RmA', 'key':'documentation','value':'The open end must be navigable.\\nself.openEnd()->first().isNavigable()\\n'}}" 
},{
	 "id": "96", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u01Cd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@fa4642a (key: documentation, value: The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature.\\nresult.type =structuralFeature.type and \\nresult.isOrdered = structuralFeature.isOrdered\\n)'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "97", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u01Ct6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature.\\nresult.type =structuralFeature.type and \\nresult.isOrdered = structuralFeature.isOrdered\\n'}}" 
},{
	 "id": "98", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u01Ht6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2bd726e7 (key: documentation, value: The type and ordering of the result OutputPin are the same as the type and ordering of the variable.\\nresult.type =variable.type and \\nresult.isOrdered = variable.isOrdered\\n)'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "99", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u01H96tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are the same as the type and ordering of the variable.\\nresult.type =variable.type and \\nresult.isOrdered = variable.isOrdered\\n'}}" 
},{
	 "id": "100", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u02Sd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@49deeb4f (key: documentation, value: If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin.\\nnot onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort)\\r\\n)'],'eModelElement':'type_target_pin'}}" 
},{
	 "id": "101", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u02St6tEei97MD7GK1RmA', 'key':'documentation','value':'If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin.\\nnot onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()'}}" 
},{
	 "id": "102", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u02yN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3f389790 (key: documentation, value: The multiplicity of the InputPins is 1..1.\\nfirst.is(1,1) and second.is(1,1)\\n)'],'eModelElement':'multiplicity'}}" 
},{
	 "id": "103", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u02yd6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of the InputPins is 1..1.\\nfirst.is(1,1) and second.is(1,1)\\n'}}" 
},{
	 "id": "104", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u021t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2adbeba0 (key: documentation, value: The InputPins have no type.\\nfirst.type= null and second.type = null\\n)'],'eModelElement':'no_type'}}" 
},{
	 "id": "105", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u02196tEei97MD7GK1RmA', 'key':'documentation','value':'The InputPins have no type.\\nfirst.type= null and second.type = null\\n'}}" 
},{
	 "id": "106", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u025N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5df5706d (key: documentation, value: The type of the result OutputPin is Boolean. \\nresult.type=Boolean)'],'eModelElement':'result_is_boolean'}}" 
},{
	 "id": "107", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u025d6tEei97MD7GK1RmA', 'key':'documentation','value':'The type of the result OutputPin is Boolean. \\nresult.type=Boolean'}}" 
},{
	 "id": "108", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u02_t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1c139c7b (key: documentation, value: An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins. \\n<p>From package UML::Actions.</p>)'],'eModelElement':'UnmarshallAction'}}" 
},{
	 "id": "109", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u02_96tEei97MD7GK1RmA', 'key':'documentation','value':'An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins. \\n<p>From package UML::Actions.</p>'}}" 
},{
	 "id": "110", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u04Rt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5ef96256 (key: documentation, value: A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter.\\ndecisionInput<>null implies \\r\\n  (decisionInput.ownedParameter->forAll(par | \\r\\n     par.direction <> ParameterDirectionKind::out and \\r\\n     par.direction <> ParameterDirectionKind::inout ) and\\r\\n   decisionInput.ownedParameter->one(par | \\r\\n     par.direction <> ParameterDirectionKind::return))\\r\\n     )'],'eModelElement':'parameters'}}" 
},{
	 "id": "111", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u04R96tEei97MD7GK1RmA', 'key':'documentation','value':'A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter.\\ndecisionInput<>null implies \\r\\n  (decisionInput.ownedParameter->forAll(par | \\r\\n     par.direction <> Param'}}" 
},{
	 "id": "112", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9egN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7b21a198 (key: documentation, value: The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))\\r\\n)'],'eModelElement':'edges'}}" 
},{
	 "id": "113", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9egd6tEei97MD7GK1RmA', 'key':'documentation','value':'The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKi'}}" 
},{
	 "id": "114", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9e896tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@392de7d9 (key: documentation, value: The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))\\r\\n)'],'eModelElement':'edges'}}" 
},{
	 "id": "115", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9e9N6tEei97MD7GK1RmA', 'key':'documentation','value':'The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsK'}}" 
},{
	 "id": "116", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9gZ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2dcb1d55 (key: documentation, value: In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument is of the same Class or a specialization of that of the Attribute.\\n(messageSort = MessageSort::asynchSignal ) and signature.oclIsKindOf(Signal) implies\\r\\n   let signalAttributes : OrderedSet(Property) = signature.oclAsType(Signal).inheritedMember()->\\r\\n             select(n:NamedElement | n.oclIsTypeOf(Property))->collect(oclAsType(Property))->asOrderedSet()\\r\\n   in signalAttributes->size() = self.argument->size()\\r\\n   and self.argument->forAll( o: ValueSpecification |\\r\\n          not (o.oclIsKindOf(Expression)\\r\\n          and o.oclAsType(Expression).symbol->size()=0\\r\\n          and o.oclAsType(Expression).operand->isEmpty() ) implies\\r\\n              let p : Property = signalAttributes->at(self.argument->indexOf(o))\\r\\n              in o.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier)))\\r\\n)'],'eModelElement':'signature_is_signal'}}" 
},{
	 "id": "117", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9gaN6tEei97MD7GK1RmA', 'key':'documentation','value':'In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument i'}}" 
},{
	 "id": "118", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9hE96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f8a64a7 (key: documentation, value: If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonUse within that same enclosing Interaction, it must be common to a lifeline within that enclosing Interaction. By common Lifelines we mean Lifelines with the same selector and represents associations.\\r\\n\\nlet intUses : Set(InteractionUse) = interaction.interactionUse  in \\r\\nintUses->forAll\\r\\n( iuse : InteractionUse | \\r\\nlet usingInteraction : Set(Interaction)  = iuse.enclosingInteraction->asSet()\\r\\n->union(\\r\\niuse.enclosingOperand.combinedFragment->asSet()->closure(enclosingOperand.combinedFragment).enclosingInteraction->asSet()\\r\\n               ) \\r\\nin\\r\\nlet peerUses : Set(InteractionUse) = usingInteraction.fragment->select(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n->union(\\r\\nusingInteraction.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet()\\r\\n->closure(operand.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)).operand.fragment->\\r\\nselect(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n               )->excluding(iuse)\\r\\n in\\r\\npeerUses->forAll( peerUse : InteractionUse |\\r\\n peerUse.refersTo.lifeline->forAll( l : Lifeline | (l.represents = self.represents and \\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\n  and \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)  \\r\\nimplies\\r\\n usingInteraction.lifeline->select(represents = self.represents and\\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\nand \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)\\r\\n                                                )\\r\\n                    )\\r\\n))'],'eModelElement':'interaction_uses_share_lifeline'}}" 
},{
	 "id": "119", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9hFN6tEei97MD7GK1RmA', 'key':'documentation','value':'If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonU'}}" 
},{
	 "id": "120", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9hL96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@25dee436 (key: documentation, value: The selector value, if present, must be a LiteralString or a LiteralInteger \\nself.selector->notEmpty() implies \\r\\nself.selector.oclIsKindOf(LiteralInteger) or \\r\\nself.selector.oclIsKindOf(LiteralString))'],'eModelElement':'selector_int_or_string'}}" 
},{
	 "id": "121", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9hMN6tEei97MD7GK1RmA', 'key':'documentation','value':'The selector value, if present, must be a LiteralString or a LiteralInteger \\nself.selector->notEmpty() implies \\r\\nself.selector.oclIsKindOf(LiteralInteger) or \\r\\nself.selector.oclIsKindOf(LiteralString)'}}" 
},{
	 "id": "122", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9htt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@32a27913 (key: documentation, value: The type of the returnValue must correspond to the type of the returnValueRecipient.\\nreturnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.type->asSequence()->first()\\r\\n)'],'eModelElement':'returnValue_type_recipient_correspondence'}}" 
},{
	 "id": "123", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9ht96tEei97MD7GK1RmA', 'key':'documentation','value':'The type of the returnValue must correspond to the type of the returnValueRecipient.\\nreturnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.t'}}" 
},{
	 "id": "124", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9icN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@feaa0f7 (key: documentation, value: This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd.\\nresult = (message->asSet().messageEnd->asSet()->excluding(self))\\nmessage->notEmpty()\\r\\n\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'oppositeEnd'}}" 
},{
	 "id": "125", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9icd6tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd.\\nresult = (message->asSet().messageEnd->asSet()->excluding(self))\\nmessage->notEmpty'}}" 
},{
	 "id": "126", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9ic96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3d7e310b (key: documentation, value: This query returns value true if this MessageEnd is a sendEvent.\\nmessage->notEmpty()\\r\\n\\nresult = (message.sendEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'isSend'}}" 
},{
	 "id": "127", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9idN6tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns value true if this MessageEnd is a sendEvent.\\nmessage->notEmpty()\\r\\n\\nresult = (message.sendEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>'}}" 
},{
	 "id": "128", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9id96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@29beae47 (key: documentation, value: This query returns value true if this MessageEnd is a receiveEvent.\\nmessage->notEmpty()\\r\\n\\nresult = (message.receiveEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'isReceive'}}" 
},{
	 "id": "129", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9ieN6tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns value true if this MessageEnd is a receiveEvent.\\nmessage->notEmpty()\\r\\n\\nresult = (message.receiveEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>'}}" 
},{
	 "id": "130", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9jWt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10a7e879 (key: documentation, value: InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not elaborate details of the transferred information.  Details of transferred information are the province of other Classifiers that may ultimately define InformationItems.  Consequently, InformationItems cannot be instantiated and do not themselves have features, generalizations, or associations. An important use of InformationItems is to represent information during early design stages, possibly before the detailed modeling decisions that will ultimately define them have been made. Another purpose of InformationItems is to abstract portions of complex models in less precise, but perhaps more general and communicable, ways. \\n<p>From package UML::InformationFlows.</p>)'],'eModelElement':'InformationItem'}}" 
},{
	 "id": "131", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9jW96tEei97MD7GK1RmA', 'key':'documentation','value':'InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not ela'}}" 
},{
	 "id": "132", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9lSN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@253fafaa (key: documentation, value: A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.  \\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Component'}}" 
},{
	 "id": "133", 
	 "label": "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9lSd6tEei97MD7GK1RmA', 'key':'documentation','value':'A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.  \\n<p>From package UML::StructuredClassifiers.</p>'}}" 
},{
	 "id": "134", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Ild6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7dcfc1c4 (key: documentation, value: A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges.\\nownedParameter->forAll(p | \\r\\np.direction = ParameterDirectionKind::inout implies\\r\\nlet associatedNodes : Set(ActivityNode) = node->select(\\r\\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p) in \\r\\n  associatedNodes->size()=2 and\\r\\n  associatedNodes->select(incoming->notEmpty())->size()<=1 and\\r\\n  associatedNodes->select(outgoing->notEmpty())->size()<=1\\r\\n))'],'eModelElement':'maximum_two_parameter_nodes'}}" 
},{
	 "id": "135", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Ilt6tEei97MD7GK1RmA', 'key':'documentation','value':'A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges.\\nownedParameter->forAl'}}" 
},{
	 "id": "136", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Ix96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c90e699 (key: documentation, value: If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the Activity, then the model is ill-formed.)\\n<p>From package UML::Activities.</p>)'],'eModelElement':'isReadOnly'}}" 
},{
	 "id": "137", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2IyN6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execu'}}" 
},{
	 "id": "138", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2JBN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@13ec6415 (key: documentation, value: A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior.\\nresult = (if nestingClass <> null then\\r\\n    null\\r\\nelse\\r\\n    let b:BehavioredClassifier = self.behavioredClassifier(self.owner) in\\r\\n    if b.oclIsKindOf(Behavior) and b.oclAsType(Behavior)._'context' <> null then \\r\\n        b.oclAsType(Behavior)._'context'\\r\\n    else \\r\\n        b \\r\\n    endif\\r\\nendif\\r\\n        )\\n<p>From package UML::CommonBehavior.</p>)','...'],'eModelElement':'getContext'}}" 
},{
	 "id": "139", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2JBt6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "140", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2JBd6tEei97MD7GK1RmA', 'key':'documentation','value':'A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain o'}}" 
},{
	 "id": "141", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2JCN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f64c82d (key: documentation, value: The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any.\\nif from.oclIsKindOf(BehavioredClassifier) then\\r\\n    from.oclAsType(BehavioredClassifier)\\r\\nelse if from.owner = null then\\r\\n    null\\r\\nelse\\r\\n    self.behavioredClassifier(from.owner)\\r\\nendif\\r\\nendif\\n<p>From package UML::CommonBehavior.</p>)'],'eModelElement':'behavioredClassifier'}}" 
},{
	 "id": "142", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2JCd6tEei97MD7GK1RmA', 'key':'documentation','value':'The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any.\\nif from.oclIsKindOf(BehavioredClassifier) then\\r\\n    from.oclAsType(BehavioredClassifier)'}}" 
},{
	 "id": "143", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2JMd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@52b3d221 (key: documentation, value: A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Class'}}" 
},{
	 "id": "144", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2JMt6tEei97MD7GK1RmA', 'key':'documentation','value':'A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.\\n<p>From package UML::St'}}" 
},{
	 "id": "145", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2MoN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3332b78 (key: documentation, value: A Stereotype may only generalize or specialize another Stereotype.\\nallParents()->forAll(oclIsKindOf(Stereotype)) \\r\\nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereotype)) implies c.oclIsKindOf(Stereotype)))'],'eModelElement':'generalize'}}" 
},{
	 "id": "146", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Mod6tEei97MD7GK1RmA', 'key':'documentation','value':'A Stereotype may only generalize or specialize another Stereotype.\\nallParents()->forAll(oclIsKindOf(Stereotype)) \\r\\nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereoty'}}" 
},{
	 "id": "147", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2ONt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@74593d49 (key: documentation, value: Derivation for Package::/nestedPackage\\nresult = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())\\n<p>From package UML::Packages.</p>)','...'],'eModelElement':'getNestedPackages'}}" 
},{
	 "id": "148", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2ON96tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for Package::/nestedPackage\\nresult = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())\\n<p>From package UML::Packages.</p>'}}" 
},{
	 "id": "149", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2OON6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "150", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2OOt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@fafce67 (key: documentation, value: Derivation for Package::/ownedStereotype\\nresult = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())\\n<p>From package UML::Packages.</p>)','...'],'eModelElement':'getOwnedStereotypes'}}" 
},{
	 "id": "151", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2OPN6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "152", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2OO96tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for Package::/ownedStereotype\\nresult = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())\\n<p>From package UML::Packages.</p>'}}" 
},{
	 "id": "153", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2PV96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@17ed2aff (key: documentation, value: A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package, a NamedElement marked as having package visibility is not visible.  Only NamedElements that are not owned by Packages can be marked as having package visibility.)'],'eModelElement':'package'}}" 
},{
	 "id": "154", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2PWN6tEei97MD7GK1RmA', 'key':'documentation','value':'A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package,'}}" 
},{
	 "id": "155", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Pld6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@399a16dc (key: documentation, value: A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of the type of the corresponding end of the Association.\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Association'}}" 
},{
	 "id": "156", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Plt6tEei97MD7GK1RmA', 'key':'documentation','value':'A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of th'}}" 
},{
	 "id": "157", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2QJt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7a3e894 (key: documentation, value: A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1.\\nisComposite and association <> null implies opposite.upperBound() <= 1)'],'eModelElement':'multiplicity_of_composite'}}" 
},{
	 "id": "158", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2QJ96tEei97MD7GK1RmA', 'key':'documentation','value':'A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1.\\nisComposite and association <> null implies opposite.upperBound() <= 1'}}" 
},{
	 "id": "159", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2TUt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@673abe0b (key: documentation, value: Derivation for OpaqueExpression::/result\\nresult = (if behavior = null then\\r\\n\\tnull\\r\\nelse\\r\\n\\tbehavior.ownedParameter->first()\\r\\nendif)\\n<p>From package UML::Values.</p>)','...'],'eModelElement':'getResult'}}" 
},{
	 "id": "160", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2TU96tEei97MD7GK1RmA', 'key':'documentation','value':'Derivation for OpaqueExpression::/result\\nresult = (if behavior = null then\\r\\n\\tnull\\r\\nelse\\r\\n\\tbehavior.ownedParameter->first()\\r\\nendif)\\n<p>From package UML::Values.</p>'}}" 
},{
	 "id": "161", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2TVN6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}" 
},{
	 "id": "162", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2UGN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@712cbd8d (key: documentation, value: Indicates that Parameter values are passed in by the caller.)'],'eModelElement':'in'}}" 
},{
	 "id": "163", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2UGd6tEei97MD7GK1RmA', 'key':'documentation','value':'Indicates that Parameter values are passed in by the caller.'}}" 
},{
	 "id": "164", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Vbd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@465afb57 (key: documentation, value: If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters.\\n((parameter->exists(direction = ParameterDirectionKind::_'in')) implies \\r\\n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::_'in' and p.parameterSet->isEmpty())->forAll(isStream))\\r\\n    and\\r\\n((parameter->exists(direction = ParameterDirectionKind::out)) implies \\r\\n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::out and p.parameterSet->isEmpty())->forAll(isStream)))'],'eModelElement':'input'}}" 
},{
	 "id": "165", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Vbt6tEei97MD7GK1RmA', 'key':'documentation','value':'If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters.\\n((parameter->exists(direction ='}}" 
},{
	 "id": "166", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2WkN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@dc56859 (key: documentation, value: ProtocolStateMachines cannot have deep or shallow history Pseudostates.\\nregion->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\\n((v.oclAsType(Pseudostate).kind <>  PseudostateKind::deepHistory) and (v.oclAsType(Pseudostate).kind <> PseudostateKind::shallowHistory)))))'],'eModelElement':'deep_or_shallow_history'}}" 
},{
	 "id": "167", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Wkd6tEei97MD7GK1RmA', 'key':'documentation','value':'ProtocolStateMachines cannot have deep or shallow history Pseudostates.\\nregion->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\\n((v.oclAsType(Pseudostate).kind <>  PseudostateK'}}" 
},{
	 "id": "168", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Wnt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@53185637 (key: documentation, value: The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors.\\nregion->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\\n(v.oclAsType(State).entry->isEmpty() and v.oclAsType(State).exit->isEmpty() and v.oclAsType(State).doActivity->isEmpty()))))'],'eModelElement':'entry_exit_do'}}" 
},{
	 "id": "169", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Wn96tEei97MD7GK1RmA', 'key':'documentation','value':'The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors.\\nregion->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\\n(v.oclAsType(State).entry->isEmpty() and'}}" 
},{
	 "id": "170", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Wut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3334bec8 (key: documentation, value: Conformance between ProtocolStateMachine\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'conformance'}}" 
},{
	 "id": "171", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Wu96tEei97MD7GK1RmA', 'key':'documentation','value':'Conformance between ProtocolStateMachine\\n<p>From package UML::StateMachines.</p>'}}" 
},{
	 "id": "172", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XKN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@196a3444 (key: documentation, value: All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an orthogonal state which contains the targets of these transitions \\r\\n-- such that these targets belong to different regions of that orthogonal state \\r\\n\\r\\noutgoing->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.target, t2.target) in\\r\\n\\t((contState <> null) and (contState.region\\r\\n\\t\\t->exists(r1:Region, r2: Region | (r1 <> r2) and t1.target.isContainedInRegion(r1) and t2.target.isContainedInRegion(r2))))))'],'eModelElement':'transitions_outgoing'}}" 
},{
	 "id": "173", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2XKd6tEei97MD7GK1RmA', 'key':'documentation','value':'All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an'}}" 
},{
	 "id": "174", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XNt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3b7cab1 (key: documentation, value: In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1))'],'eModelElement':'choice_vertex'}}" 
},{
	 "id": "175", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2XN96tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1)'}}" 
},{
	 "id": "176", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XUt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@74e1d7f3 (key: documentation, value: In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition.\\n(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->size() >= 2))'],'eModelElement':'join_vertex'}}" 
},{
	 "id": "177", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2XU96tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition.\\n(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->si'}}" 
},{
	 "id": "178", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XYN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@701a9bf4 (key: documentation, value: In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1))'],'eModelElement':'junction_vertex'}}" 
},{
	 "id": "179", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2XYd6tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition.\\n(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1)'}}" 
},{
	 "id": "180", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Xbt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@554046a2 (key: documentation, value: History Vertices can have at most one outgoing Transition.\\n((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1))'],'eModelElement':'history_vertices'}}" 
},{
	 "id": "181", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Xb96tEei97MD7GK1RmA', 'key':'documentation','value':'History Vertices can have at most one outgoing Transition.\\n((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1)'}}" 
},{
	 "id": "182", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Xit6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@26cc0559 (key: documentation, value: In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition.\\n(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->size() >= 2))'],'eModelElement':'fork_vertex'}}" 
},{
	 "id": "183", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Xi96tEei97MD7GK1RmA', 'key':'documentation','value':'In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition.\\n(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->si'}}" 
},{
	 "id": "184", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XtN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@52354d76 (key: documentation, value: The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\nelse \\n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\\n      self.oclAsType(Pseudostate).stateMachine\\n   else \\n      if (self.oclIsKindOf(ConnectionPointReference)) then\\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\\n      else \\n          null\\n      endif\\n   endif\\nendif\\n)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'containingStateMachine'}}" 
},{
	 "id": "185", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Xtd6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\n'}}" 
},{
	 "id": "186", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2X6t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4e517cd0 (key: documentation, value: A Region can have at most one deep history Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n   select(kind = PseudostateKind::deepHistory)->size() <= 1)'],'eModelElement':'deep_history_vertex'}}" 
},{
	 "id": "187", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2X696tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one deep history Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n   select(kind = PseudostateKind::deepHistory)->size() <= 1'}}" 
},{
	 "id": "188", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2X-N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@293ca427 (key: documentation, value: A Region can have at most one shallow history Vertex.\\nsubvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1)'],'eModelElement':'shallow_history_vertex'}}" 
},{
	 "id": "189", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2X-d6tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one shallow history Vertex.\\nsubvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1'}}" 
},{
	 "id": "190", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2YFN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@cb82edb (key: documentation, value: A Region can have at most one initial Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::initial)->size() <= 1)'],'eModelElement':'initial_vertex'}}" 
},{
	 "id": "191", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2YFd6tEei97MD7GK1RmA', 'key':'documentation','value':'A Region can have at most one initial Vertex.\\nself.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\\n  select(kind = PseudostateKind::initial)->size() <= 1'}}" 
},{
	 "id": "192", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2Z9d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5225c839 (key: documentation, value: An initial Transition at the topmost level Region of a StateMachine that has no Trigger.\\n(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\\n\\ttrigger->isEmpty())'],'eModelElement':'initial_transition'}}" 
},{
	 "id": "193", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Z9t6tEei97MD7GK1RmA', 'key':'documentation','value':'An initial Transition at the topmost level Region of a StateMachine that has no Trigger.\\n(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\\n\\ttrigger->isEmpty()'}}" 
},{
	 "id": "194", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2cft6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3b04cb46 (key: documentation, value: A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality.\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Collaboration'}}" 
},{
	 "id": "195", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2cf96tEei97MD7GK1RmA', 'key':'documentation','value':'A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality.\\n<p>From package UML::Structur'}}" 
},{
	 "id": "196", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2eQd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2c470c97 (key: documentation, value: If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable.\\nconstrainingClassifier->forAll(\\r\\n     cc |  parameteredElement = cc or parameteredElement.conformsTo(cc) or (allowSubstitutable and parameteredElement.isSubstitutableFor(cc))\\r\\n))'],'eModelElement':'constraining_classifiers_constrain_parametered_element'}}" 
},{
	 "id": "197", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2eQt6tEei97MD7GK1RmA', 'key':'documentation','value':'If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable.\\nconstraining'}}" 
},{
	 "id": "198", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2fxd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@73fa8d86 (key: documentation, value: If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Actions that would result in accessing such objects are required to have their execution deferred until the completion of the StructuredActivityNode.\\n<p>From package UML::Actions.</p>)'],'eModelElement':'mustIsolate'}}" 
},{
	 "id": "199", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2fxt6tEei97MD7GK1RmA', 'key':'documentation','value':'If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Act'}}" 
},{
	 "id": "200", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2gbd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@31d5074f (key: documentation, value: An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification of the state required for tokens being held, and carrying control values.\\n<p>From package UML::Activities.</p>)'],'eModelElement':'ObjectNode'}}" 
},{
	 "id": "201", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2gbt6tEei97MD7GK1RmA', 'key':'documentation','value':'An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification o'}}" 
},{
	 "id": "202", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2gcN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7305a77e (key: documentation, value: A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of ObjectNode. The Behavior cannot have side effects.\\nselection<>null implies\\r\\n\\tselection.inputParameters()->size()=1 and\\r\\n\\tselection.inputParameters()->forAll(p | not p.isUnique and p.is(0,*) and self.type.conformsTo(p.type)) and\\r\\n\\tselection.outputParameters()->size()=1 and\\r\\n\\t\\tselection.inputParameters()->forAll(p | self.type.conformsTo(p.type)))'],'eModelElement':'input_output_parameter'}}" 
},{
	 "id": "203", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2gcd6tEei97MD7GK1RmA', 'key':'documentation','value':'A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0.'}}" 
},{
	 "id": "204", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2hTd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@71fa2fd6 (key: documentation, value: The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction.\\nendData.end->exists(end |\\r\\n  end.type=_'context' or\\r\\n  end.visibility=VisibilityKind::public or \\r\\n  end.visibility=VisibilityKind::protected and\\r\\n  endData.end->exists(other | \\r\\n    other<>end and _'context'.conformsTo(other.type.oclAsType(Classifier)))))'],'eModelElement':'allow_access'}}" 
},{
	 "id": "205", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2hTt6tEei97MD7GK1RmA', 'key':'documentation','value':'The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction.\\nendData.end->exists(end |\\r\\n  end.type=_'context' or\\r\\n  end.visibility=VisibilityKind::public or'}}" 
},{
	 "id": "206", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2ift6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4e672f85 (key: documentation, value: The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction.\\nstructuralFeature.visibility = VisibilityKind::public or\\n_'context'.allFeatures()->includes(structuralFeature) or\\nstructuralFeature.visibility=VisibilityKind::protected and\\n_'context'.conformsTo(structuralFeature.oclAsType(Property).opposite.type.oclAsType(Classifier)))'],'eModelElement':'visibility'}}" 
},{
	 "id": "207", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2if96tEei97MD7GK1RmA', 'key':'documentation','value':'The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction.\\nstructuralFeature.visibility = VisibilityKind::public or\\n_'context'.allFeatures()-'}}" 
},{
	 "id": "208", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2i796tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1f44532 (key: documentation, value: The action must have exactly one trigger, which must be for a CallEvent.\\ntrigger->size()=1 and\\r\\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent))'],'eModelElement':'trigger_call_event'}}" 
},{
	 "id": "209", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2i8N6tEei97MD7GK1RmA', 'key':'documentation','value':'The action must have exactly one trigger, which must be for a CallEvent.\\ntrigger->size()=1 and\\r\\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent)'}}" 
},{
	 "id": "210", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_6Ad6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6237d0bf (key: documentation, value: AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, and must have no Input Pin for the insertion point when the StructuralFeature is unordered.\\nif not structuralFeature.isOrdered then insertAt = null\\nelse \\n  not isReplaceAll implies\\n  \\tinsertAt<>null and \\n  \\tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\\nendif)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "211", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_6At6tEei97MD7GK1RmA', 'key':'documentation','value':'AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, '}}" 
},{
	 "id": "212", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_6KN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6e394fe3 (key: documentation, value: AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no InputPin for the insertion point.\\nif not variable.isOrdered then insertAt = null\\nelse \\n  not isReplaceAll implies\\n  \\tinsertAt<>null and \\n  \\tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\\nendif)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "213", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_6Kd6tEei97MD7GK1RmA', 'key':'documentation','value':'AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no '}}" 
},{
	 "id": "214", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_6bt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7b5e92c2 (key: documentation, value: InvocationAction is an abstract class for the various actions that request Behavior invocation.\\n<p>From package UML::Actions.</p>)'],'eModelElement':'InvocationAction'}}" 
},{
	 "id": "215", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_6b96tEei97MD7GK1RmA', 'key':'documentation','value':'InvocationAction is an abstract class for the various actions that request Behavior invocation.\\n<p>From package UML::Actions.</p>'}}" 
},{
	 "id": "216", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_8Bt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1d5a14b8 (key: documentation, value: LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have no InputPin for the insertion point when the association ends are unordered.\\nif  not end.isOrdered\\nthen insertAt = null\\nelse\\n\\tnot isReplaceAll=false implies\\n\\tinsertAt <> null and insertAt->forAll(type=UnlimitedNatural and is(1,1))\\nendif)'],'eModelElement':'insertAt_pin'}}" 
},{
	 "id": "217", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_8B96tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have '}}" 
},{
	 "id": "218", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_8T96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5c2a4eeb (key: documentation, value: The classifier cannot be abstract.\\nnot classifier.isAbstract)'],'eModelElement':'classifier_not_abstract'}}" 
},{
	 "id": "219", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_8UN6tEei97MD7GK1RmA', 'key':'documentation','value':'The classifier cannot be abstract.\\nnot classifier.isAbstract'}}" 
},{
	 "id": "220", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_8nt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@36f1b876 (key: documentation, value: LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no destroyAt input pin.\\nif  not end.isOrdered or end.isUnique or isDestroyDuplicates\\r\\nthen destroyAt = null\\r\\nelse\\r\\n\\tdestroyAt <> null and \\r\\n\\tdestroyAt->forAll(type=UnlimitedNatural and is(1,1))\\r\\nendif)'],'eModelElement':'destroyAt_pin'}}" 
},{
	 "id": "221", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_8n96tEei97MD7GK1RmA', 'key':'documentation','value':'LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of '}}" 
},{
	 "id": "222", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_-R96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@60bca5ea (key: documentation, value: The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered))'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "223", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_-SN6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)'}}" 
},{
	 "id": "224", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_-Vd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2d094395 (key: documentation, value: The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin.\\nself.openEnd()->first().compatibleWith(result))'],'eModelElement':'compatible_multiplicity'}}" 
},{
	 "id": "225", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_-Vt6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin.\\nself.openEnd()->first().compatibleWith(result)'}}" 
},{
	 "id": "226", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_-Y96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@321ee24d (key: documentation, value: Visibility of the open end must allow access from the object performing the action.\\nlet openEnd : Property = self.openEnd()->first() in\\n  openEnd.visibility = VisibilityKind::public or \\n  endData->exists(oed | \\n    oed.end<>openEnd and \\n    (_'context' = oed.end.type or \\n      (openEnd.visibility = VisibilityKind::protected and \\n        _'context'.conformsTo(oed.end.type.oclAsType(Classifier))))))'],'eModelElement':'visibility'}}" 
},{
	 "id": "227", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_-ZN6tEei97MD7GK1RmA', 'key':'documentation','value':'Visibility of the open end must allow access from the object performing the action.\\nlet openEnd : Property = self.openEnd()->first() in\\n  openEnd.visibility = VisibilityKind::public or \\n  endData->exi'}}" 
},{
	 "id": "228", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_-f96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@d30f8e1 (key: documentation, value: The open end must be navigable.\\nself.openEnd()->first().isNavigable())'],'eModelElement':'navigable_open_end'}}" 
},{
	 "id": "229", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_-gN6tEei97MD7GK1RmA', 'key':'documentation','value':'The open end must be navigable.\\nself.openEnd()->first().isNavigable()'}}" 
},{
	 "id": "230", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y__1N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@278e73fd (key: documentation, value: The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature.\\nresult.type =structuralFeature.type and \\nresult.isOrdered = structuralFeature.isOrdered)'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "231", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y__1d6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature.\\nresult.type =structuralFeature.type and \\nresult.isOrdered = structuralFeature.isOrdered'}}" 
},{
	 "id": "232", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y__6d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@28bbc495 (key: documentation, value: The type and ordering of the result OutputPin are the same as the type and ordering of the variable.\\nresult.type =variable.type and \\nresult.isOrdered = variable.isOrdered)'],'eModelElement':'type_and_ordering'}}" 
},{
	 "id": "233", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y__6t6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are the same as the type and ordering of the variable.\\nresult.type =variable.type and \\nresult.isOrdered = variable.isOrdered'}}" 
},{
	 "id": "234", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZABFN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6f871735 (key: documentation, value: If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin.\\nnot onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort))'],'eModelElement':'type_target_pin'}}" 
},{
	 "id": "235", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZABFd6tEei97MD7GK1RmA', 'key':'documentation','value':'If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin.\\nnot onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()'}}" 
},{
	 "id": "236", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZABk96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@ccd2420 (key: documentation, value: The multiplicity of the InputPins is 1..1.\\nfirst.is(1,1) and second.is(1,1))'],'eModelElement':'multiplicity'}}" 
},{
	 "id": "237", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZABlN6tEei97MD7GK1RmA', 'key':'documentation','value':'The multiplicity of the InputPins is 1..1.\\nfirst.is(1,1) and second.is(1,1)'}}" 
},{
	 "id": "238", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZABod6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@8263650 (key: documentation, value: The InputPins have no type.\\nfirst.type= null and second.type = null)'],'eModelElement':'no_type'}}" 
},{
	 "id": "239", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZABot6tEei97MD7GK1RmA', 'key':'documentation','value':'The InputPins have no type.\\nfirst.type= null and second.type = null'}}" 
},{
	 "id": "240", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZABr96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@54aec39a (key: documentation, value: The type of the result OutputPin is Boolean.\\nresult.type=Boolean)'],'eModelElement':'result_is_boolean'}}" 
},{
	 "id": "241", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZABsN6tEei97MD7GK1RmA', 'key':'documentation','value':'The type of the result OutputPin is Boolean.\\nresult.type=Boolean'}}" 
},{
	 "id": "242", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAByd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@71fbd6a9 (key: documentation, value: An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins.\\n<p>From package UML::Actions.</p>)'],'eModelElement':'UnmarshallAction'}}" 
},{
	 "id": "243", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAByt6tEei97MD7GK1RmA', 'key':'documentation','value':'An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins.\\n<p>From package UML::Actions.</p>'}}" 
},{
	 "id": "244", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZADEd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@37e69cd9 (key: documentation, value: A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter.\\ndecisionInput<>null implies \\r\\n  (decisionInput.ownedParameter->forAll(par | \\r\\n     par.direction <> ParameterDirectionKind::out and \\r\\n     par.direction <> ParameterDirectionKind::inout ) and\\r\\n   decisionInput.ownedParameter->one(par | \\r\\n     par.direction <> ParameterDirectionKind::return)))'],'eModelElement':'parameters'}}" 
},{
	 "id": "245", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZADEt6tEei97MD7GK1RmA', 'key':'documentation','value':'A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter.\\ndecisionInput<>null implies \\r\\n  (decisionInput.ownedParameter->forAll(par | \\r\\n     par.direction <> Param'}}" 
},{
	 "id": "246", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZADut6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@17a89d21 (key: documentation, value: The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow)))'],'eModelElement':'edges'}}" 
},{
	 "id": "247", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZADu96tEei97MD7GK1RmA', 'key':'documentation','value':'The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKi'}}" 
},{
	 "id": "248", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAELd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5950c19f (key: documentation, value: The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow)))'],'eModelElement':'edges'}}" 
},{
	 "id": "249", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAELt6tEei97MD7GK1RmA', 'key':'documentation','value':'The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows.\\nlet allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nallEdges->forAll(oclIsK'}}" 
},{
	 "id": "250", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAFod6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@26bd7b4c (key: documentation, value: In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument is of the same Class or a specialization of that of the Attribute.\\n(messageSort = MessageSort::asynchSignal ) and signature.oclIsKindOf(Signal) implies\\r\\n   let signalAttributes : OrderedSet(Property) = signature.oclAsType(Signal).inheritedMember()->\\r\\n             select(n:NamedElement | n.oclIsTypeOf(Property))->collect(oclAsType(Property))->asOrderedSet()\\r\\n   in signalAttributes->size() = self.argument->size()\\r\\n   and self.argument->forAll( o: ValueSpecification |\\r\\n          not (o.oclIsKindOf(Expression)\\r\\n          and o.oclAsType(Expression).symbol->size()=0\\r\\n          and o.oclAsType(Expression).operand->isEmpty() ) implies\\r\\n              let p : Property = signalAttributes->at(self.argument->indexOf(o))\\r\\n              in o.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier))))'],'eModelElement':'signature_is_signal'}}" 
},{
	 "id": "251", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAFot6tEei97MD7GK1RmA', 'key':'documentation','value':'In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument i'}}" 
},{
	 "id": "252", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAGTd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3dc398b0 (key: documentation, value: If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonUse within that same enclosing Interaction, it must be common to a lifeline within that enclosing Interaction. By common Lifelines we mean Lifelines with the same selector and represents associations.\\nlet intUses : Set(InteractionUse) = interaction.interactionUse  in \\r\\nintUses->forAll\\r\\n( iuse : InteractionUse | \\r\\nlet usingInteraction : Set(Interaction)  = iuse.enclosingInteraction->asSet()\\r\\n->union(\\r\\niuse.enclosingOperand.combinedFragment->asSet()->closure(enclosingOperand.combinedFragment).enclosingInteraction->asSet()\\r\\n               ) \\r\\nin\\r\\nlet peerUses : Set(InteractionUse) = usingInteraction.fragment->select(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n->union(\\r\\nusingInteraction.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet()\\r\\n->closure(operand.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)).operand.fragment->\\r\\nselect(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n               )->excluding(iuse)\\r\\n in\\r\\npeerUses->forAll( peerUse : InteractionUse |\\r\\n peerUse.refersTo.lifeline->forAll( l : Lifeline | (l.represents = self.represents and \\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\n  and \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)  \\r\\nimplies\\r\\n usingInteraction.lifeline->select(represents = self.represents and\\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\nand \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)\\r\\n                                                )\\r\\n                    )\\r\\n))'],'eModelElement':'interaction_uses_share_lifeline'}}" 
},{
	 "id": "253", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAGTt6tEei97MD7GK1RmA', 'key':'documentation','value':'If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonU'}}" 
},{
	 "id": "254", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAGad6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@26f6c66a (key: documentation, value: The selector value, if present, must be a LiteralString or a LiteralInteger\\nself.selector->notEmpty() implies \\r\\nself.selector.oclIsKindOf(LiteralInteger) or \\r\\nself.selector.oclIsKindOf(LiteralString))'],'eModelElement':'selector_int_or_string'}}" 
},{
	 "id": "255", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAGat6tEei97MD7GK1RmA', 'key':'documentation','value':'The selector value, if present, must be a LiteralString or a LiteralInteger\\nself.selector->notEmpty() implies \\r\\nself.selector.oclIsKindOf(LiteralInteger) or \\r\\nself.selector.oclIsKindOf(LiteralString)'}}" 
},{
	 "id": "256", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAG8N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3b3de753 (key: documentation, value: The type of the returnValue must correspond to the type of the returnValueRecipient.\\nreturnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.type->asSequence()->first())'],'eModelElement':'returnValue_type_recipient_correspondence'}}" 
},{
	 "id": "257", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAG8d6tEei97MD7GK1RmA', 'key':'documentation','value':'The type of the returnValue must correspond to the type of the returnValueRecipient.\\nreturnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.t'}}" 
},{
	 "id": "258", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAHqt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@14782416 (key: documentation, value: This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd.\\nresult = (message->asSet().messageEnd->asSet()->excluding(self))\\nmessage->notEmpty()\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'oppositeEnd'}}" 
},{
	 "id": "259", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAHq96tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd.\\nresult = (message->asSet().messageEnd->asSet()->excluding(self))\\nmessage->notEmpty'}}" 
},{
	 "id": "260", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAHrd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7960dfb (key: documentation, value: This query returns value true if this MessageEnd is a sendEvent.\\nmessage->notEmpty()\\nresult = (message.sendEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'isSend'}}" 
},{
	 "id": "261", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAHrt6tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns value true if this MessageEnd is a sendEvent.\\nmessage->notEmpty()\\nresult = (message.sendEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>'}}" 
},{
	 "id": "262", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAHsd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@29152b03 (key: documentation, value: This query returns value true if this MessageEnd is a receiveEvent.\\nmessage->notEmpty()\\nresult = (message.receiveEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>)'],'eModelElement':'isReceive'}}" 
},{
	 "id": "263", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAHst6tEei97MD7GK1RmA', 'key':'documentation','value':'This query returns value true if this MessageEnd is a receiveEvent.\\nmessage->notEmpty()\\nresult = (message.receiveEvent->asSet()->includes(self))\\n<p>From package UML::Interactions.</p>'}}" 
},{
	 "id": "264", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAIlN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@865abe5 (key: documentation, value: InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not elaborate details of the transferred information.  Details of transferred information are the province of other Classifiers that may ultimately define InformationItems.  Consequently, InformationItems cannot be instantiated and do not themselves have features, generalizations, or associations. An important use of InformationItems is to represent information during early design stages, possibly before the detailed modeling decisions that will ultimately define them have been made. Another purpose of InformationItems is to abstract portions of complex models in less precise, but perhaps more general and communicable, ways.\\n<p>From package UML::InformationFlows.</p>)'],'eModelElement':'InformationItem'}}" 
},{
	 "id": "265", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAIld6tEei97MD7GK1RmA', 'key':'documentation','value':'InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not ela'}}" 
},{
	 "id": "266", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2ZAKgt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7bb2b329 (key: documentation, value: A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\\n<p>From package UML::StructuredClassifiers.</p>)'],'eModelElement':'Component'}}" 
},{
	 "id": "267", 
	 "label": "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2ZAKg96tEei97MD7GK1RmA', 'key':'documentation','value':'A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\\n<p>From package UML::StructuredClassifiers.</p>'}}" 
},{
	 "id": "268", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthow96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@f37feed (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'input_output_parameter','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@13a4372a (expression: EBoolean)','eContainingClass':'ObjectNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "269", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgeEd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@489af1e4 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Association','ePackage':'uml','abstract':'false','interface':'false','eOperations':['specialized_end_number','specialized_end_types','binary_associations','association_ends','ends_must_be_typed','isBinary','getEndTypes'],'eStructuralFeatures':['endType','isDerived','memberEnd','ownedEnd','navigableOwnedEnd'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@53fc9c9d (expression: Classifier)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@177d271c (expression: Relationship)']}}" 
},{
	 "id": "270", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fuhNp96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@647846c9 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getContext','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'BehavioredClassifier','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7af723de (expression: BehavioredClassifier)','eContainingClass':'Behavior'}}" 
},{
	 "id": "271", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiORN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@20dd6cc9 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'classifier_not_abstract','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7e76f9e7 (expression: EBoolean)','eContainingClass':'CreateObjectAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "272", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjeId6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@bb63d94 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4b9a8deb (expression: EBoolean)','eContainingClass':'MergeNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "273", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_wIF9Dd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@589108a2 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getOwnedStereotypes','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Stereotype','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1279396c (expression: Stereotype)','eContainingClass':'Package'}}" 
},{
	 "id": "274", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgcLt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@48c8f5d5 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'initial_transition','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@291749a3 (expression: EBoolean)','eContainingClass':'Transition','eParameters':['diagnostics','context']}}" 
},{
	 "id": "275", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdf96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@40bef5a0 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'history_vertices','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@52a26454 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "276", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdh96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@36e4235e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'join_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1560d538 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "277", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbK96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2ec4cd3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'deep_or_shallow_history','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@84d2ffa (expression: EBoolean)','eContainingClass':'ProtocolStateMachine','eParameters':['diagnostics','context']}}" 
},{
	 "id": "278", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthAJt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3802854e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Collaboration','ePackage':'uml','abstract':'false','interface':'false','eStructuralFeatures':['collaborationRole'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3074b820 (expression: StructuredClassifier)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@254363d5 (expression: BehavioredClassifier)']}}" 
},{
	 "id": "279", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbrd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7b589b0a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'deep_history_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6d2da6e7 (expression: EBoolean)','eContainingClass':'Region','eParameters':['diagnostics','context']}}" 
},{
	 "id": "280", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbtd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@14951fa7 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'shallow_history_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@b30ac19 (expression: EBoolean)','eContainingClass':'Region','eParameters':['diagnostics','context']}}" 
},{
	 "id": "281", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjfat6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@341cfa59 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Component','ePackage':'uml','abstract':'false','interface':'false','eOperations':['no_nested_classifiers','no_packaged_elements','createOwnedClass','createOwnedEnumeration','createOwnedInterface','createOwnedPrimitiveType','getProvideds','getRequireds'],'eStructuralFeatures':['isIndirectlyInstantiated','packagedElement','provided','realization','required'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4cdcd730 (expression: Class)']}}" 
},{
	 "id": "282", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_fthoRN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2070dcd6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'mustIsolate','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6f50cefe (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'false','defaultValue':'false','unsettable':'false','derived':'false','eContainingClass':'StructuredActivityNode','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "283", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdl96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7aac979b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'fork_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5a1d2d50 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "284", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EReference', 'attributes': {'id': '_ftgbO96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@72431c4a (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@4686ab45 (source: subsets)'],'name':'conformance','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'ProtocolConformance','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@137ce73a (expression: ProtocolConformance)','changeable':'true','volatile':'false','transient':'false','unsettable':'false','derived':'false','eContainingClass':'ProtocolStateMachine','containment':'true','container':'false','resolveProxies':'true','eOpposite':'specificMachine','eReferenceType':'ProtocolConformance'}}" 
},{
	 "id": "285", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiP9N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@ddc13bc (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'compatible_multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3cade348 (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "286", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfznN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6283dcea (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5b0519f6 (source: duplicates)'],'name':'Class','ePackage':'uml','abstract':'false','interface':'false','eOperations':['passive_class','createOwnedOperation','isMetaclass','getExtensions','getSuperClasses'],'eStructuralFeatures':['ownedOperation','extension','isActive','nestedClassifier','ownedReception','superClass'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@51268b80 (expression: EncapsulatedClassifier)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@1285af28 (expression: BehavioredClassifier)']}}" 
},{
	 "id": "287", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftiQl96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1362a707 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InvocationAction','ePackage':'uml','abstract':'true','interface':'false','eStructuralFeatures':['argument','onPort'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@23826dc1 (expression: Action)']}}" 
},{
	 "id": "288", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u02SN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7b6dd039 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'type_target_pin','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1fc9aefa (expression: EBoolean)','eContainingClass':'SendSignalAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "289", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_uapXs96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2b0acd36 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'parameters','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1fee63b5 (expression: EBoolean)','eContainingClass':'DecisionNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "290", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthDBt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@746ac9c1 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'interaction_uses_share_lifeline','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@44685649 (expression: EBoolean)','eContainingClass':'Lifeline','eParameters':['diagnostics','context']}}" 
},{
	 "id": "291", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0Ul96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@10144841 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'behavioredClassifier','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'BehavioredClassifier','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@43ee5275 (expression: BehavioredClassifier)','eContainingClass':'Behavior','eParameters':['from']}}" 
},{
	 "id": "292", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_uapT-N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@210d4d2d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'maximum_two_parameter_nodes','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7a9930b4 (expression: EBoolean)','eContainingClass':'Activity','eParameters':['diagnostics','context']}}" 
},{
	 "id": "293", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf3Dd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6491f49d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'multiplicity_of_composite','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@45d01a (expression: EBoolean)','eContainingClass':'Property','eParameters':['diagnostics','context']}}" 
},{
	 "id": "294", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiQBN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@336509b5 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'visibility','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@78f13e07 (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "295", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthCgN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7b7ca9b4 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'signature_is_signal','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7e43dc15 (expression: EBoolean)','eContainingClass':'Message','eParameters':['diagnostics','context']}}" 
},{
	 "id": "296", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u9ict6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4b81b779 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isSend','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6749c34b (expression: Boolean)','eContainingClass':'MessageEnd'}}" 
},{
	 "id": "297", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_wIF9Cd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@62406c6c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getNestedPackages','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'Package','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@149bd444 (expression: Package)','eContainingClass':'Package'}}" 
},{
	 "id": "298", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdr96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@33841bc6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'choice_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3e9cd5dc (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "299", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ju6h6N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4ad72c62 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'containingStateMachine','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'StateMachine','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@76055ebf (expression: StateMachine)','eContainingClass':'Vertex'}}" 
},{
	 "id": "300", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fuhKqd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@9804354 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getResult','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Parameter','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@255d5c5e (expression: Parameter)','eContainingClass':'OpaqueExpression'}}" 
},{
	 "id": "301", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAttribute', 'attributes': {'id': '_fthnld6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@63055ac7 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isReadOnly','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7de37ab7 (expression: Boolean)','changeable':'true','volatile':'false','transient':'false','defaultValueLiteral':'false','defaultValue':'false','unsettable':'false','derived':'false','eContainingClass':'Activity','iD':'false','eAttributeType':'Boolean'}}" 
},{
	 "id": "302", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiOld6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@41c3a013 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'multiplicity','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@adf2172 (expression: EBoolean)','eContainingClass':'TestIdentityAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "303", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0p0N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6be3f825 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'constraining_classifiers_constrain_parametered_element','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@fcff958 (expression: EBoolean)','eContainingClass':'ClassifierTemplateParameter','eParameters':['diagnostics','context']}}" 
},{
	 "id": "304", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiO896tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2e8212f2 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'visibility','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5864b95f (expression: EBoolean)','eContainingClass':'StructuralFeatureAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "305", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fthoqN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@51b56e94 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ObjectNode','ePackage':'uml','abstract':'true','interface':'false','eOperations':['input_output_parameter','selection_behavior','object_flow_edges'],'eStructuralFeatures':['inState','isControlType','ordering','selection','upperBound'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4db80dfc (expression: ActivityNode)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@11bec09a (expression: TypedElement)']}}" 
},{
	 "id": "306", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjdM96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@708266ab (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'trigger_call_event','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@439125a3 (expression: EBoolean)','eContainingClass':'AcceptCallAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "307", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u9hLt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@308f5df7 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'selector_int_or_string','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@489bc7b (expression: EBoolean)','eContainingClass':'Lifeline','eParameters':['diagnostics','context']}}" 
},{
	 "id": "308", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgaoN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2a337601 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'input','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@623fca36 (expression: EBoolean)','eContainingClass':'ParameterSet','eParameters':['diagnostics','context']}}" 
},{
	 "id": "309", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiOnd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@12e577ab (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'result_is_boolean','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4bbc9712 (expression: EBoolean)','eContainingClass':'TestIdentityAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "310", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u9ib96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1fbd3694 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'oppositeEnd','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'MessageEnd','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@55bedb32 (expression: MessageEnd)','eContainingClass':'MessageEnd'}}" 
},{
	 "id": "311", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdp96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@882b498 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'junction_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@547f1f14 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "312", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fti2Vt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1b7452ee (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InformationItem','ePackage':'uml','abstract':'false','interface':'false','eOperations':['sources_and_targets','has_no','not_instantiable'],'eStructuralFeatures':['represented'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@4213d7ca (expression: Classifier)']}}" 
},{
	 "id": "313", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiOjd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@33a37db6 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'no_type','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3a5dfe2a (expression: EBoolean)','eContainingClass':'TestIdentityAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "314", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiPF96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7bf616fe (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'type_and_ordering','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@736b95da (expression: EBoolean)','eContainingClass':'ReadStructuralFeatureAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "315", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfzkd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5c459973 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'generalize','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@131d0106 (expression: EBoolean)','eContainingClass':'Stereotype','eParameters':['diagnostics','context']}}" 
},{
	 "id": "316", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fti2vt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4a162686 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'type_and_ordering','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@66f07f0b (expression: EBoolean)','eContainingClass':'ReadVariableAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "317", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnumLiteral', 'attributes': {'id': '_ftfLON6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6e2e2a57 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'package','value':'3','instance':'package','literal':'package','eEnum':'VisibilityKind'}}" 
},{
	 "id": "318", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_wIHzYd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@21cee264 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'returnValue_type_recipient_correspondence','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@13caf270 (expression: EBoolean)','eContainingClass':'InteractionUse','eParameters':['diagnostics','context']}}" 
},{
	 "id": "319", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiP_N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@58c7a47d (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'navigable_open_end','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@67b79386 (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "320", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiQPd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@413d637e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'allow_access','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@43a61217 (expression: EBoolean)','eContainingClass':'WriteLinkAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "321", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0xOt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@fc548d9 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'insertAt_pin','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@c72d7fc (expression: EBoolean)','eContainingClass':'LinkEndCreationData','eParameters':['diagnostics','context']}}" 
},{
	 "id": "322", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0vNd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@f72e43b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'insertAt_pin','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1bfc4392 (expression: EBoolean)','eContainingClass':'AddStructuralFeatureValueAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "323", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EEnumLiteral', 'attributes': {'id': '_ftgeWN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5aa6748f (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'in','value':'0','instance':'in','literal':'in','eEnum':'ParameterDirectionKind'}}" 
},{
	 "id": "324", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiP7N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1a4c0145 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'type_and_ordering','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@69112a4a (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "325", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u9idt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@65842d95 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isReceive','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4463a0 (expression: Boolean)','eContainingClass':'MessageEnd'}}" 
},{
	 "id": "326", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjdXd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@77102b72 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'UnmarshallAction','ePackage':'uml','abstract':'false','interface':'false','eOperations':['structural_feature','number_of_result','type_ordering_and_multiplicity','multiplicity_of_object','object_type'],'eStructuralFeatures':['object','result','unmarshallType'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@275ea474 (expression: Action)']}}" 
},{
	 "id": "327", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjd_d6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@36aa3b1b (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@15fd6522 (expression: EBoolean)','eContainingClass':'ForkNode','eParameters':['diagnostics','context']}}" 
},{
	 "id": "328", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdn96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5f971b32 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'transitions_outgoing','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1020813 (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" 
},{
	 "id": "329", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0x0t6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5bc7b5f8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'destroyAt_pin','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3f26894a (expression: EBoolean)','eContainingClass':'LinkEndDestructionData','eParameters':['diagnostics','context']}}" 
},{
	 "id": "330", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0vXN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2edc143a (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'insertAt_pin','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5fc16f01 (expression: EBoolean)','eContainingClass':'AddVariableValueAction','eParameters':['diagnostics','context']}}" 
},{
	 "id": "331", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbI96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1e3decdb (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'entry_exit_do','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6c828a34 (expression: EBoolean)','eContainingClass':'ProtocolStateMachine','eParameters':['diagnostics','context']}}" 
},{
	 "id": "332", 
	 "label": "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbpd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@caf20bf (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'initial_vertex','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4b4eb0ad (expression: EBoolean)','eContainingClass':'Region','eParameters':['diagnostics','context']}}" 
}], 
 "links": [{
	 "source": "0", 
	 "target": "1", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "2", 
	 "target": "3", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "4", 
	 "target": "5", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "4", 
	 "target": "6", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "7", 
	 "target": "8", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "9", 
	 "target": "10", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "11", 
	 "target": "12", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "13", 
	 "target": "14", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "13", 
	 "target": "15", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "16", 
	 "target": "17", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "16", 
	 "target": "18", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "19", 
	 "target": "20", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "21", 
	 "target": "22", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "23", 
	 "target": "24", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "25", 
	 "target": "26", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "25", 
	 "target": "27", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "28", 
	 "target": "29", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "30", 
	 "target": "31", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "32", 
	 "target": "33", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "34", 
	 "target": "35", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "36", 
	 "target": "37", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "38", 
	 "target": "39", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "40", 
	 "target": "41", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "42", 
	 "target": "43", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "44", 
	 "target": "45", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "46", 
	 "target": "47", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "48", 
	 "target": "49", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "50", 
	 "target": "51", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "52", 
	 "target": "53", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "54", 
	 "target": "55", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "56", 
	 "target": "57", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "58", 
	 "target": "59", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "60", 
	 "target": "61", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "62", 
	 "target": "63", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "64", 
	 "target": "65", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "66", 
	 "target": "67", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "68", 
	 "target": "69", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "70", 
	 "target": "71", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "72", 
	 "target": "73", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "74", 
	 "target": "75", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "76", 
	 "target": "77", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "78", 
	 "target": "79", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "80", 
	 "target": "81", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "82", 
	 "target": "83", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "84", 
	 "target": "85", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "86", 
	 "target": "87", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "88", 
	 "target": "89", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "90", 
	 "target": "91", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "92", 
	 "target": "93", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "94", 
	 "target": "95", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "96", 
	 "target": "97", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "98", 
	 "target": "99", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "100", 
	 "target": "101", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "102", 
	 "target": "103", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "104", 
	 "target": "105", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "106", 
	 "target": "107", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "108", 
	 "target": "109", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "110", 
	 "target": "111", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "112", 
	 "target": "113", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "114", 
	 "target": "115", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "116", 
	 "target": "117", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "118", 
	 "target": "119", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "120", 
	 "target": "121", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "122", 
	 "target": "123", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "124", 
	 "target": "125", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "126", 
	 "target": "127", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "128", 
	 "target": "129", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "130", 
	 "target": "131", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "132", 
	 "target": "133", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "134", 
	 "target": "135", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "136", 
	 "target": "137", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "138", 
	 "target": "139", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "138", 
	 "target": "140", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "141", 
	 "target": "142", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "143", 
	 "target": "144", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "145", 
	 "target": "146", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "147", 
	 "target": "148", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "147", 
	 "target": "149", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "150", 
	 "target": "151", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "150", 
	 "target": "152", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "153", 
	 "target": "154", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "155", 
	 "target": "156", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "157", 
	 "target": "158", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "159", 
	 "target": "160", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "159", 
	 "target": "161", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "162", 
	 "target": "163", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "164", 
	 "target": "165", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "166", 
	 "target": "167", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "168", 
	 "target": "169", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "170", 
	 "target": "171", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "172", 
	 "target": "173", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "174", 
	 "target": "175", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "176", 
	 "target": "177", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "178", 
	 "target": "179", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "180", 
	 "target": "181", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "182", 
	 "target": "183", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "184", 
	 "target": "185", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "186", 
	 "target": "187", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "188", 
	 "target": "189", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "190", 
	 "target": "191", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "192", 
	 "target": "193", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "194", 
	 "target": "195", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "196", 
	 "target": "197", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "198", 
	 "target": "199", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "200", 
	 "target": "201", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "202", 
	 "target": "203", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "204", 
	 "target": "205", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "206", 
	 "target": "207", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "208", 
	 "target": "209", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "210", 
	 "target": "211", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "212", 
	 "target": "213", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "214", 
	 "target": "215", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "216", 
	 "target": "217", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "218", 
	 "target": "219", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "220", 
	 "target": "221", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "222", 
	 "target": "223", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "224", 
	 "target": "225", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "226", 
	 "target": "227", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "228", 
	 "target": "229", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "230", 
	 "target": "231", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "232", 
	 "target": "233", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "234", 
	 "target": "235", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "236", 
	 "target": "237", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "238", 
	 "target": "239", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "240", 
	 "target": "241", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "242", 
	 "target": "243", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "244", 
	 "target": "245", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "246", 
	 "target": "247", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "248", 
	 "target": "249", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "250", 
	 "target": "251", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "252", 
	 "target": "253", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "254", 
	 "target": "255", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "256", 
	 "target": "257", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "258", 
	 "target": "259", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "260", 
	 "target": "261", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "262", 
	 "target": "263", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "264", 
	 "target": "265", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "266", 
	 "target": "267", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" 
},{
	 "source": "268", 
	 "target": "68", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "268", 
	 "target": "202", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "269", 
	 "target": "21", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "269", 
	 "target": "155", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "270", 
	 "target": "4", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "270", 
	 "target": "138", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "271", 
	 "target": "84", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "271", 
	 "target": "218", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "272", 
	 "target": "114", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "272", 
	 "target": "248", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "273", 
	 "target": "16", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "273", 
	 "target": "150", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "274", 
	 "target": "58", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "274", 
	 "target": "192", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "275", 
	 "target": "46", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "275", 
	 "target": "180", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "276", 
	 "target": "42", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "276", 
	 "target": "176", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "277", 
	 "target": "32", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "277", 
	 "target": "166", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "278", 
	 "target": "60", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "278", 
	 "target": "194", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "279", 
	 "target": "52", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "279", 
	 "target": "186", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "280", 
	 "target": "54", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "280", 
	 "target": "188", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "281", 
	 "target": "132", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "281", 
	 "target": "266", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "282", 
	 "target": "64", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "282", 
	 "target": "198", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "283", 
	 "target": "48", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "283", 
	 "target": "182", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "284", 
	 "target": "36", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "284", 
	 "target": "170", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "285", 
	 "target": "90", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "285", 
	 "target": "224", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "286", 
	 "target": "9", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "286", 
	 "target": "143", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "287", 
	 "target": "80", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "287", 
	 "target": "214", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "288", 
	 "target": "100", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "288", 
	 "target": "234", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "289", 
	 "target": "110", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "289", 
	 "target": "244", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "290", 
	 "target": "118", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "290", 
	 "target": "252", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "291", 
	 "target": "7", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "291", 
	 "target": "141", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "292", 
	 "target": "0", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "292", 
	 "target": "134", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "293", 
	 "target": "23", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "293", 
	 "target": "157", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "294", 
	 "target": "92", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "294", 
	 "target": "226", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "295", 
	 "target": "116", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "295", 
	 "target": "250", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "296", 
	 "target": "126", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "296", 
	 "target": "260", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "297", 
	 "target": "13", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "297", 
	 "target": "147", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "298", 
	 "target": "40", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "298", 
	 "target": "174", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "299", 
	 "target": "50", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "299", 
	 "target": "184", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "300", 
	 "target": "25", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "300", 
	 "target": "159", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "301", 
	 "target": "2", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "301", 
	 "target": "136", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "302", 
	 "target": "102", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "302", 
	 "target": "236", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "303", 
	 "target": "62", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "303", 
	 "target": "196", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "304", 
	 "target": "72", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "304", 
	 "target": "206", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "305", 
	 "target": "66", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "305", 
	 "target": "200", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "306", 
	 "target": "74", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "306", 
	 "target": "208", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "307", 
	 "target": "120", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "307", 
	 "target": "254", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "308", 
	 "target": "30", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "308", 
	 "target": "164", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "309", 
	 "target": "106", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "309", 
	 "target": "240", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "310", 
	 "target": "124", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "310", 
	 "target": "258", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "311", 
	 "target": "44", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "311", 
	 "target": "178", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "312", 
	 "target": "130", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "312", 
	 "target": "264", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "313", 
	 "target": "104", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "313", 
	 "target": "238", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "314", 
	 "target": "96", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "314", 
	 "target": "230", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "315", 
	 "target": "11", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "315", 
	 "target": "145", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "316", 
	 "target": "98", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "316", 
	 "target": "232", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "317", 
	 "target": "19", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "317", 
	 "target": "153", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "318", 
	 "target": "122", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "318", 
	 "target": "256", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "319", 
	 "target": "94", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "319", 
	 "target": "228", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "320", 
	 "target": "70", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "320", 
	 "target": "204", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "321", 
	 "target": "82", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "321", 
	 "target": "216", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "322", 
	 "target": "76", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "322", 
	 "target": "210", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "323", 
	 "target": "28", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "323", 
	 "target": "162", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "324", 
	 "target": "88", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "324", 
	 "target": "222", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "325", 
	 "target": "128", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "325", 
	 "target": "262", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "326", 
	 "target": "108", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "326", 
	 "target": "242", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "327", 
	 "target": "112", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "327", 
	 "target": "246", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "328", 
	 "target": "38", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "328", 
	 "target": "172", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "329", 
	 "target": "86", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "329", 
	 "target": "220", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "330", 
	 "target": "78", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "330", 
	 "target": "212", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "331", 
	 "target": "34", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "331", 
	 "target": "168", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "332", 
	 "target": "56", 
	 "label": "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
},{
	 "source": "332", 
	 "target": "190", 
	 "label": "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" 
}]}