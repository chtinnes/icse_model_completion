t # 5646
e 2 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgcwd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@14713b34 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@61a24867 (source: redefines)'],'name':'isConsistentWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3ab2ad0c (expression: Boolean)','eParameters':['redefinee']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0j296tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1db5cb27 (key: documentation, value: The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be redefined (extended) to become a composite State (by adding one or more Regions) and a composite State can be redefined (extended) by adding Regions and by adding Vertices, States, and Transitions to inherited Regions. All States may add or replace entry, exit, and 'doActivity' Behaviors.\\nresult = (-- the following is merely a default body; it is expected that the specific form of this constraint will be specified by profiles\\r\\ntrue)\\nredefiningElement.isRedefinitionContextValid(self)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isConsistentWith'}}"
e 2 6 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RlXd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@564b6cf1 (key: documentation, value: The query isConsistentWith() specifies that a redefining state is consistent with a redefined state provided that the redefining state is an extension of the redefined state: A simple state can be redefined (extended) to become a composite state (by adding a region) and a composite state can be redefined (extended) by adding regions and by adding vertices, states, and transitions to inherited regions. All states may add or replace entry, exit, and 'doActivity' actions.\\nresult = true\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isConsistentWith'}}"
e 6 5 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RlXt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining state is consistent with a redefined state provided that the redefining state is an extension of the redefined state: A simple state can be red'}}"
e 2 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgcyN6tEei97MD7GK1RmA', 'name':'redefinee','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2aa64510 (expression: RedefinableElement)','eOperation':'isConsistentWith'}}"
e 2 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0j396tEei97MD7GK1RmA', 'name':'redefiningElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4ee25b09 (expression: RedefinableElement)','eOperation':'isConsistentWith'}}"
$$
e 0 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0j3N6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be rede'}}"
