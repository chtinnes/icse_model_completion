t # 2459
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_0oB4Bt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6438baf8 (key: documentation, value: The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then \\n\\t\\tfalse \\n\\telse \\n\\t\\tancestor(s1, s2.container.owner.oclAsType(State))\\n\\tendif\\nendif \\n\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'ancestor'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oB4B96tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then'}}"
e 4 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIGmGt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@33fffb97 (key: documentation, value: The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then \\n\\t\\tfalse \\n\\telse \\n\\t\\tancestor(s1, s2.container.owner.oclAsType(State))\\n\\tendif\\nendif \\n)'],'eModelElement':'ancestor'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIGmG96tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then'}}"
e 2 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbed6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@384ee106 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ancestor','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@379baeca (expression: Boolean)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}" _
$$
e 2 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
