t # 4708
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgaW96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4429408e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Behavior','ePackage':'uml','abstract':'true','interface':'false','eOperations':['parameters_match','feature_of_context_classifier','must_realize','most_one_behaviour','getContext'],'eIDAttribute':'name','eStructuralFeatures':['isReentrant','redefinedBehavior','ownedParameter','context','precondition','postcondition','ownedParameterSet','specification'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@3cbc24e4 (expression: Class)']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YE8d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ceb96c8 (key: documentation, value: Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\\r\\n\\r\\nA classifier behavior is always a definition of behavior and not an illustration. It describes the sequence of state changes an instance of a classifier may undergo in the course of its lifetime. Its precise semantics depends on the kind of classifier. For example, the classifier behavior of a collaboration represents emergent behavior of all the parts, whereas the classifier behavior of a class is just the behavior of instances of the class separated from the behaviors of any of its parts.\\r\\nWhen a behavior is associated as the method of a behavioral feature, it defines the implementation of that feature; i.e., the computation that generates the effects of the behavioral feature.\\r\\n\\r\\nAs a classifier, a behavior can be specialized. Instantiating a behavior is referred to as \\\\'invoking\\\\' the behavior, an instantiated behavior is also called a behavior \\\\'execution.\\\\' A behavior may be invoked directly or its invocation may be the result of invoking the behavioral feature that specifies this behavior. A behavior can also be instantiated as an object in virtue of it being a class. The specification of a behavior can take a number of forms, as described in the subclasses of Behavior. Behavior is an abstract metaclass factoring out the commonalities of these different specification mechanisms.\\r\\n\\r\\nWhen a behavior is invoked, its execution receives a set of input values that are used to affect the course of execution and as a result of its execution it produces a set of output values which are returned, as specified by its parameters. The observable effects of a behavior execution may include changes of values of various objects involved in the execution, the creation and destruction of objects, generation of communications between objects, as well as an explicit set of output values.\\r\\n\\r\\nThe concept of Behavior is extended to own ParameterSets.)'],'eModelElement':'Behavior'}}"
e 3 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_nsWmQd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@25ab1803 (key: documentation, value: Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution.\\n\\n\\n\\nA classifier behavior is always a definition of behavior and not an illustration. It describes the sequence of state changes an instance of a classifier may undergo in the course of its lifetime. Its precise semantics depends on the kind of classifier. For example, the classifier behavior of a collaboration represents emergent behavior of all the parts, whereas the classifier behavior of a class is just the behavior of instances of the class separated from the behaviors of any of its parts.\\n\\nWhen a behavior is associated as the method of a behavioral feature, it defines the implementation of that feature; i.e., the computation that generates the effects of the behavioral feature.\\n\\n\\n\\nAs a classifier, a behavior can be specialized. Instantiating a behavior is referred to as \\\\'invoking\\\\' the behavior, an instantiated behavior is also called a behavior \\\\'execution.\\\\' A behavior may be invoked directly or its invocation may be the result of invoking the behavioral feature that specifies this behavior. A behavior can also be instantiated as an object in virtue of it being a class. The specification of a behavior can take a number of forms, as described in the subclasses of Behavior. Behavior is an abstract metaclass factoring out the commonalities of these different specification mechanisms.\\n\\n\\n\\nWhen a behavior is invoked, its execution receives a set of input values that are used to affect the course of execution and as a result of its execution it produces a set of output values which are returned, as specified by its parameters. The observable effects of a behavior execution may include changes of values of various objects involved in the execution, the creation and destruction of objects, generation of communications between objects, as well as an explicit set of output values.\\n\\n\\r\\nThe concept of Behavior is extended to own ParameterSets.)'],'eModelElement':'Behavior'}}"
e 4 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_nsWmQt6tEei97MD7GK1RmA', 'key':'documentation','value':'Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective ill'}}"
$$
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YE8t6tEei97MD7GK1RmA', 'key':'documentation','value':'Behavior is a specification of how its context classifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective ill'}}"
