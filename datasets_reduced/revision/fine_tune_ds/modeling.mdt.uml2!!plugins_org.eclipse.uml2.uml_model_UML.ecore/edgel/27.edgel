t # 27
e 0 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_oq7Eyt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@32c70f4f (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'compatibleWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1ccc3c6f (expression: Boolean)','eContainingClass':'MultiplicityElement','eParameters':['other']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_oq7Ey96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7e8fb5b1 (key: documentation, value: The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\r\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i)))'],'eModelElement':'compatibleWith'}}"
e 1 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_oq7EzN6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\r\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinal'}}"
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_oq7Ezd6tEei97MD7GK1RmA', 'name':'other','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'MultiplicityElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@67829e8e (expression: MultiplicityElement)','eOperation':'compatibleWith'}}"
e 9 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftf2Vd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7292cdb (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'MultiplicityElement','ePackage':'uml','abstract':'true','interface':'false','eOperations':['upper_gt_0','lower_ge_0','upper_ge_lower','value_specification_no_side_effects','value_specification_constant','setLower','setUpper','getLower','getUpper','isMultivalued','includesCardinality','includesMultiplicity','...'],'eStructuralFeatures':['isOrdered','isUnique','upper','lower','upperValue','lowerValue'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@2417726b (expression: Element)']}}" _
e 4 5 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_oq7Ezt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@73eebedf (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'is','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6e945a7c (expression: Boolean)','eContainingClass':'MultiplicityElement','eParameters':['lowerbound','upperbound']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_oq7Ez96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@eb38c2 (key: documentation, value: The operation is determines if the upper and lower bound of the ranges are the ones given.\\r\\nresult = (lowerbound = self.lowerbound and upperbound = self.upperbound))'],'eModelElement':'is'}}"
e 5 8 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_oq7E0N6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation is determines if the upper and lower bound of the ranges are the ones given.\\r\\nresult = (lowerbound = self.lowerbound and upperbound = self.upperbound)'}}"
e 4 6 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_oq7E0t6tEei97MD7GK1RmA', 'name':'upperbound','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Integer','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@54ba996c (expression: Integer)','eOperation':'is'}}"
e 4 7 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_oq7E0d6tEei97MD7GK1RmA', 'name':'lowerbound','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Integer','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@bd0d2cc (expression: Integer)','eOperation':'is'}}"
$$
e 9 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ _
