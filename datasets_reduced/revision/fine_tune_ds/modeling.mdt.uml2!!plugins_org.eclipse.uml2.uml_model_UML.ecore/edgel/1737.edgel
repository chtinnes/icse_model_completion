t # 1737
e 0 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fthBWt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1da002ab (key: documentation, value: If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to\\ndefine a collating sequence between operands and subexpressions).\\n\\r\\nif subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty())'],'eModelElement':'subexpressions'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fthBW96tEei97MD7GK1RmA', 'key':'documentation','value':'If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to\\ndefine a collating sequence between operands and subexpressions).\\n\\r\\nif subExpres'}}"
e 4 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthBWd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@74883a5e (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'subexpressions','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@452c7f3c (expression: EBoolean)','eContainingClass':'StringExpression','eParameters':['diagnostics','context']}}" _
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIFY9N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3921c967 (key: documentation, value: If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to define a collating sequence between operands and subexpressions).\\nif subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty())'],'eModelElement':'subexpressions'}}"
$$
e 1 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIFY9d6tEei97MD7GK1RmA', 'key':'documentation','value':'If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to define a collating sequence between operands and subexpressions).\\nif subExpressi'}}"
