t # 3627
e 0 5 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fuhGT96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@705c194 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getQualifiedName','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6f65a5e3 (expression: String)','eContainingClass':'NamedElement'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_0oBu-d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@9cb458e (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)','...'],'eModelElement':'getQualifiedName'}}"
e 5 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oBu-t6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\nresult = if self.name->notEmpty() and self.allNam'}}"
e 5 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oBu-96tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
e 0 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RbGd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4f452e2c (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)','...'],'eModelElement':'getQualifiedName'}}"
e 3 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RbGt6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\nresult = if self.name->notEmpty() and self.allNam'}}"
$$
e 3 6 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RbG96tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
