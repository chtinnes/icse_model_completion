t # 5526
e 4 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0fyd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@590d6322 (key: documentation, value: The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent. A redefining operation is consistent with a redefined operation if\\r\\nit has the same number of owned parameters, and for each parameter the following holds:\\r\\n\\r\\n- Direction, ordering and uniqueness are the same.\\r\\n- The corresponding types are covariant, contravariant or invariant.\\r\\n- The multiplicities are compatible, depending on the parameter direction.\\nresult = (redefiningElement.oclIsKindOf(Operation) and\\r\\nlet op : Operation = redefiningElement.oclAsType(Operation) in\\r\\n\\tself.ownedParameter->size() = op.ownedParameter->size() and\\r\\n\\tSequence{1..self.ownedParameter->size()}->\\r\\n\\t\\tforAll(i |  \\r\\n\\t\\t  let redefiningParam : Parameter = op.ownedParameter->at(i),\\r\\n               redefinedParam : Parameter = self.ownedParameter->at(i) in\\r\\n                 (redefiningParam.isUnique = redefinedParam.isUnique) and\\r\\n                 (redefiningParam.isOrdered = redefinedParam. isOrdered) and\\r\\n                 (redefiningParam.direction = redefinedParam.direction) and\\r\\n                 (redefiningParam.type.conformsTo(redefinedParam.type) or\\r\\n                     redefinedParam.type.conformsTo(redefiningParam.type)) and\\r\\n                 (redefiningParam.direction = ParameterDirectionKind::inout implies\\r\\n                         (redefinedParam.compatibleWith(redefiningParam) and\\r\\n                         redefiningParam.compatibleWith(redefinedParam))) and\\r\\n                 (redefiningParam.direction = ParameterDirectionKind::_'in' implies\\r\\n                         redefinedParam.compatibleWith(redefiningParam)) and\\r\\n                 ((redefiningParam.direction = ParameterDirectionKind::out or\\r\\n                      redefiningParam.direction = ParameterDirectionKind::return) implies\\r\\n                         redefiningParam.compatibleWith(redefinedParam))\\r\\n\\t\\t))\\nredefiningElement.isRedefinitionContextValid(self)\\n<p>From package UML::Classification.</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0fyt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent. A redefining operation is consistent with a red'}}"
e 1 6 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rhx96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5b0ec3f6 (key: documentation, value: A redefining operation is consistent with a redefined operation if it has the same number of owned parameters, and the type of each owned parameter conforms to the type of the corresponding redefined parameter.\\nThe query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.\\nredefinee.isRedefinitionContextValid(self)\\nresult = redefinee.oclIsKindOf(Operation) and\\nlet op : Operation = redefinee.oclAsType(Operation) in\\n\\tself.ownedParameter->size() = op.ownedParameter->size() and\\n\\tSequence{1..self.ownedParameter->size()}->\\n\\t\\tforAll(i |op.ownedParameter->at(1).type.conformsTo(self.ownedParameter->at(i).type))\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RhyN6tEei97MD7GK1RmA', 'key':'documentation','value':'A redefining operation is consistent with a redefined operation if it has the same number of owned parameters, and the type of each owned parameter conforms to the type of the corresponding redefined '}}"
e 3 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZwN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@51eda51b (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@44cc8f1a (source: redefines)'],'name':'isConsistentWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7ca544f2 (expression: Boolean)','eParameters':['redefinee']}}" _
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgZx96tEei97MD7GK1RmA', 'name':'redefinee','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6de0998e (expression: RedefinableElement)','eOperation':'isConsistentWith'}}"
e 3 5 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0fzd6tEei97MD7GK1RmA', 'name':'redefiningElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@246f80b1 (expression: RedefinableElement)','eOperation':'isConsistentWith'}}"
$$
e 3 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
