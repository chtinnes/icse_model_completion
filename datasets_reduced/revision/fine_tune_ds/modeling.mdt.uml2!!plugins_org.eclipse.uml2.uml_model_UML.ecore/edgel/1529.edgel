t # 1529
e 1 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_oq7Ey96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a6bc6b6 (key: documentation, value: The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\r\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i)))'],'eModelElement':'compatibleWith'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_oq7EzN6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\r\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinal'}}"
e 2 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_oq7Eyt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@62852cd3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'compatibleWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4e4db857 (expression: Boolean)','eContainingClass':'MultiplicityElement','eParameters':['other']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIGAbt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3114f861 (key: documentation, value: The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i)))'],'eModelElement':'compatibleWith'}}"
e 3 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIGAb96tEei97MD7GK1RmA', 'key':'documentation','value':'The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinali'}}"
$$
e 2 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
