t # 1497
e 0 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIFZnN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@780ce654 (key: documentation, value: The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.\\nactual->forAll(a | a.isCompatibleWith(formal.parameteredElement)))'],'eModelElement':'must_be_compatible'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIFZnd6tEei97MD7GK1RmA', 'key':'documentation','value':'The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.\\nactual->forAll(a | a.isCompatibleWith(formal.param'}}"
e 1 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfyad6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@6e638168 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'must_be_compatible','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1b1656a4 (expression: EBoolean)','eContainingClass':'TemplateParameterSubstitution','eParameters':['diagnostics','context']}}" _
e 1 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftfyat6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5b651e61 (key: documentation, value: The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.\\r\\nactual->forAll(a | a.isCompatibleWith(formal.parameteredElement)))'],'eModelElement':'must_be_compatible'}}"
$$
e 2 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftfya96tEei97MD7GK1RmA', 'key':'documentation','value':'The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.\\r\\nactual->forAll(a | a.isCompatibleWith(formal.para'}}"
