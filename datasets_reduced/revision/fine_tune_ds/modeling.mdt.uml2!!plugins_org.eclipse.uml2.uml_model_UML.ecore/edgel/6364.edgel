t # 6364
e 3 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_fti2Vt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@48242140 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'InformationItem','ePackage':'uml','abstract':'false','interface':'false','eOperations':['has_no','not_instantiable','sources_and_targets'],'eStructuralFeatures':['represented'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@18a92478 (expression: Classifier)']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07R8F96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6a61cbb3 (key: documentation, value: An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one which cannot be instantiated.\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'InformationItem'}}"
e 3 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9jWt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3356f57c (key: documentation, value: InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.\xa0 They represent the kinds of information that may move within a system, but do not elaborate details of the transferred information.\xa0 Details of transferred information are the province of other Classifiers that may ultimately define InformationItems.\xa0 Consequently, InformationItems cannot be instantiated and do not themselves have features, generalizations, or associations.\xa0An important use of InformationItems is to represent information during early design stages, possibly before the detailed modeling decisions that will ultimately define them have been made. Another purpose of InformationItems is to abstract portions of complex models in less precise, but perhaps more general and communicable, ways. \\n<p>From package UML::InformationFlows.</p>)'],'eModelElement':'InformationItem'}}"
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9jW96tEei97MD7GK1RmA', 'key':'documentation','value':'InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.\xa0 They represent the kinds of information that may move within a system, but do not ela'}}"
$$
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07R8GN6tEei97MD7GK1RmA', 'key':'documentation','value':'An information item is an abstraction of all kinds of information that can be exchanged between objects. It is a kind of classifier intended for representing information in a very abstract way, one wh'}}"
