t # 1725
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf1NN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@43cd4bb (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'allIncludedUseCases','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'UseCase','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6f8db23a (expression: UseCase)','eContainingClass':'UseCase'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftf1Nd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@69ad20bd (key: documentation, value: The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.\\r\\nresult = self.include->union(self.include->collect(in | in.allIncludedUseCases())))'],'eModelElement':'allIncludedUseCases'}}"
e 0 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIHM5d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@d189afd (key: documentation, value: The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.\\nresult = self.include->union(self.include->collect(in | in.allIncludedUseCases())))'],'eModelElement':'allIncludedUseCases'}}"
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIHM5t6tEei97MD7GK1RmA', 'key':'documentation','value':'The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.\\nresult = self.include->union(self.include->collect(in | in.allInclud'}}"
$$
e 2 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftf1Nt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query allIncludedUseCases() returns the transitive closure of all use cases (directly or indirectly) included by this use case.\\r\\nresult = self.include->union(self.include->collect(in | in.allInclu'}}"
