t # 5483
e 0 65 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0ild6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5efccb17 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LCA','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Region','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5534908c (expression: Region)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0ilt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@62bd1565 (key: documentation, value: The operation LCA(s1,s2) returns the Region that is the least common ancestor of Vertices s1 and s2, based on the StateMachine containment hierarchy.\\nresult = (if ancestor(s1, s2) then \\r\\n    s2.container\\r\\nelse\\r\\n\\tif ancestor(s2, s1) then\\r\\n\\t    s1.container \\r\\n\\telse \\r\\n\\t    LCA(s1.container.state, s2.container.state)\\r\\n\\tendif\\r\\nendif)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'LCA'}}"
e 65 70 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0il96tEei97MD7GK1RmA', 'key':'documentation','value':'The operation LCA(s1,s2) returns the Region that is the least common ancestor of Vertices s1 and s2, based on the StateMachine containment hierarchy.\\nresult = (if ancestor(s1, s2) then \\r\\n    s2.contai'}}"
e 0 6 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0imd6tEei97MD7GK1RmA', 'name':'s2','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@75189ee (expression: Vertex)','eOperation':'LCA'}}"
e 0 45 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0imN6tEei97MD7GK1RmA', 'name':'s1','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@59c97309 (expression: Vertex)','eOperation':'LCA'}}"
e 17 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgbP96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2d34c9ac (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@284d4008 (source: duplicates)'],'name':'StateMachine','ePackage':'uml','abstract':'false','interface':'false','eOperations':['method','classifier_context','context_classifier','connection_points','LCA','ancestor','isRedefinitionContextValid'],'eStructuralFeatures':['connectionPoint','submachineState','region','extendedStateMachine'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@6b25c0b0 (expression: Behavior)']}}" _
e 17 53 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rj396tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@65b37a57 (key: documentation, value: State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are triggered by the dispatching of series of (event) occurrences. During this traversal, the state machine executes a series of activities associated with various elements of the state machine.\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'StateMachine'}}"
e 53 63 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rj4N6tEei97MD7GK1RmA', 'key':'documentation','value':'State machines can be used to express the behavior of part of a system. Behavior is modeled as a traversal of a graph of state nodes interconnected by one or more joined transition arcs that are trigg'}}"
e 17 38 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iTt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7ba168d7 (key: documentation, value: StateMachines can be used to express event-driven behaviors of parts of a system. Behavior is modeled as a traversal of a graph of Vertices interconnected by one or more joined Transition arcs that are triggered by the dispatching of successive Event occurrences. During this traversal, the StateMachine may execute a sequence of Behaviors associated with various elements of the StateMachine.\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'StateMachine'}}"
e 38 30 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iT96tEei97MD7GK1RmA', 'key':'documentation','value':'StateMachines can be used to express event-driven behaviors of parts of a system. Behavior is modeled as a traversal of a graph of Vertices interconnected by one or more joined Transition arcs that ar'}}"
e 17 11 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbed6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@643755d4 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ancestor','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2934eab1 (expression: Boolean)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}"
e 11 60 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RkJt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@468701df (key: documentation, value: The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then \\n\\t\\tfalse \\n\\telse \\n\\t\\tancestor(s1, s2.container.owner.oclAsType(State))\\n\\tendif\\nendif \\n\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'ancestor'}}"
e 60 41 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RkJ96tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether s1 is an ancestor state of state s2.\\nresult = \\nif (s2 = s1) then \\n\\ttrue \\nelse \\n\\tif (s2.container->isEmpty() or not s2.container.owner.oclIsKindOf(State)) then'}}"
e 11 66 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgbf96tEei97MD7GK1RmA', 'name':'s1','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@278c572b (expression: State)','eOperation':'ancestor'}}"
e 17 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_f3T-M96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@649a387e (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@193754f (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@429209a0 (expression: Boolean)','eContainingClass':'StateMachine','eParameters':['redefined']}}"
e 4 20 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RkLN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7b52900 (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of a statemachine are properly related to the redefinition contexts of the specified statemachine to allow this element to redefine the other. The containing classifier of a redefining statemachine must redefine the containing classifier of the redefined statemachine.\\nresult = true\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 20 9 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RkLd6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a statemachine are properly related to the redefinition contexts of the specified statemachine to allow this eleme'}}"
e 4 54 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_f3T-ON6tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}"
e 54 58 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'references'}" _ "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftf0q96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1dfe52ec (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@73ea8406 (expression: Boolean)','eContainingClass':'RedefinableElement','eParameters':['redefined']}}"
e 58 7 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rgwd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@570cfd11 (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.\\nresult = redefinitionContext->exists(c | c.allParents()->includes(redefined.redefinitionContext)))\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 7 47 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rgwt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to a'}}"
e 58 75 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0gz96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@67f564d (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.\\nresult = (redefinitionContext->exists(c | c.allParents()->includesAll(redefinedElement.redefinitionContext)))\\n<p>From package UML::Classification.</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 75 78 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0g0N6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to a'}}"
e 58 48 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_f3T49t6tEei97MD7GK1RmA', 'name':'redefined','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@50c4d394 (expression: RedefinableElement)','eOperation':'isRedefinitionContextValid'}}"
e 58 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0g0t6tEei97MD7GK1RmA', 'name':'redefinedElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@61c467a9 (expression: RedefinableElement)','eOperation':'isRedefinitionContextValid'}}"
e 5 58 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'references'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iWt6tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}" _
e 51 5 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0iV96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5676f034 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@48f4b088 (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@276ff2d1 (expression: Boolean)','eParameters':['redefinedElement']}}" _
e 51 33 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iWN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@784c3344 (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition context of a StateMachine is properly related to the redefinition contexts of the specified StateMachine to allow this element to redefine the other. The context Classifier of a redefining StateMachine must redefine the context Classifier of the redefined StateMachine.\\nresult = (if redefinedElement.oclIsKindOf(StateMachine) then\\r\\n  let redefinedStateMachine : StateMachine = redefinedElement.oclAsType(StateMachine) in\\r\\n    self._'context'().oclAsType(BehavioredClassifier).redefinedClassifier->\\r\\n      includes(redefinedStateMachine._'context'())\\r\\nelse\\r\\n  false\\r\\nendif)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 33 35 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iWd6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition context of a StateMachine is properly related to the redefinition contexts of the specified StateMachine to allow this element'}}"
e 51 67 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0iXN6tEei97MD7GK1RmA', 'name':'redefinedElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5fb69cd0 (expression: RedefinableElement)','eOperation':'isRedefinitionContextValid'}}"
e 31 51 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'contents'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgbQt6tEei97MD7GK1RmA', 'source':'duplicates','eModelElement':'StateMachine','contents':['isConsistentWith','isRedefinitionContextValid']}}" _
e 15 58 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'references'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_f3T-gt6tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}" _
e 10 15 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_f3T-fd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2227c467 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@24214319 (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@56c17a3c (expression: Boolean)','eContainingClass':'Region','eParameters':['redefined']}}" _
e 10 73 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RlNd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@67920e91 (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of a region are properly related to the redefinition contexts of the specified region to allow this element to redefine the other. The containing statemachine/state of a redefining region must redefine the containing statemachine/state of the redefined region.\\nresult = true\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 73 39 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RlNt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a region are properly related to the redefinition contexts of the specified region to allow this element to redefi'}}"
e 10 25 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_f3T-hN6tEei97MD7GK1RmA', 'name':'redefined','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Region','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3dc8f123 (expression: Region)','eOperation':'isRedefinitionContextValid'}}"
e 59 10 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgbjd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@59c2e7a2 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@73887aae (source: duplicates)'],'name':'Region','ePackage':'uml','abstract':'false','interface':'false','eOperations':['shallow_history_vertex','deep_history_vertex','initial_vertex','owned','belongsToPSM','containingStateMachine','isRedefinitionContextValid','redefinitionContext'],'eStructuralFeatures':['extendedRegion','state','stateMachine','transition','subvertex'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@33082c83 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@5d7f6887 (expression: RedefinableElement)']}}" _
e 59 32 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rk5d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@116223b (key: documentation, value: A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'Region'}}"
e 32 62 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rk5t6tEei97MD7GK1RmA', 'key':'documentation','value':'A region is an orthogonal part of either a composite state or a state machine. It contains states and transitions.\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>'}}"
e 59 36 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jY96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@550561c5 (key: documentation, value: A Region is a top-level part of a StateMachine or a composite State, that serves as a container for the Vertices and Transitions of the StateMachine. A StateMachine or composite State may contain multiple Regions representing behaviors that may occur in parallel.\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'Region'}}"
e 36 12 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jZN6tEei97MD7GK1RmA', 'key':'documentation','value':'A Region is a top-level part of a StateMachine or a composite State, that serves as a container for the Vertices and Transitions of the StateMachine. A StateMachine or composite State may contain mult'}}"
e 18 58 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'references'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jct6tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}" _
e 19 18 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0jb96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4bf20e56 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@5f05a219 (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7accc905 (expression: Boolean)','eParameters':['redefinedElement']}}" _
e 19 42 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jcN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4c63deba (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of a Region are properly related to the redefinition contexts of the specified Region to allow this element to redefine the other. The containing StateMachine or State of a redefining Region must Redefine the containing StateMachine or State of the redefined Region.\\nresult = (if redefinedElement.oclIsKindOf(Region) then\\r\\n  let redefinedRegion : Region = redefinedElement.oclAsType(Region) in\\r\\n    if stateMachine->isEmpty() then\\r\\n    -- the Region is owned by a State\\r\\n      (state.redefinedState->notEmpty() and state.redefinedState.region->includes(redefinedRegion))\\r\\n    else -- the region is owned by a StateMachine\\r\\n      (stateMachine.extendedStateMachine->notEmpty() and\\r\\n        stateMachine.extendedStateMachine->exists(sm : StateMachine |\\r\\n          sm.region->includes(redefinedRegion)))\\r\\n    endif\\r\\nelse\\r\\n  false\\r\\nendif)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 42 77 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jcd6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a Region are properly related to the redefinition contexts of the specified Region to allow this element to redefi'}}"
e 19 26 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0jdN6tEei97MD7GK1RmA', 'name':'redefinedElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@73d36422 (expression: RedefinableElement)','eOperation':'isRedefinitionContextValid'}}"
e 61 19 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'contents'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgbkN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7d2b17e4 (source: redefinitionContext)'],'source':'duplicates','eModelElement':'Region','contents':['isConsistentWith','isRedefinitionContextValid','redefinitionContext']}}" _
e 55 58 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'references'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_f3T_3N6tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}" _
e 8 55 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_f3T_196tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@271c4d86 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@52601b0b (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@699bd2fb (expression: Boolean)','eContainingClass':'State','eParameters':['redefined']}}" _
e 8 68 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rltd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@c2eed03 (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of a state are properly related to the redefinition contexts of the specified state to allow this element to redefine the other. The containing region of a redefining state must redefine the containing region of the redefined state.\\nresult = true\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 68 50 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rltt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a state are properly related to the redefinition contexts of the specified state to allow this element to redefine'}}"
e 8 37 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_f3T_3t6tEei97MD7GK1RmA', 'name':'redefined','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@57136450 (expression: State)','eOperation':'isRedefinitionContextValid'}}"
e 74 8 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftgctt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@26a4b46b (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@35b1d064 (source: duplicates)'],'name':'State','ePackage':'uml','abstract':'false','interface':'false','eOperations':['entry_or_exit','composite_states','destinations_or_sources_of_transitions','submachine_or_regions','submachine_states','isComposite','isOrthogonal','isRedefinitionContextValid','isSimple','isSubmachineState','...'],'eStructuralFeatures':['connection','connectionPoint','deferrableTrigger','doActivity','entry','exit','isComposite','isOrthogonal','isSimple','isSubmachineState','redefinedState','stateInvariant','submachine','region'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@10115bb3 (expression: Namespace)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d1e9a87 (expression: RedefinableElement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d68ed55 (expression: Vertex)']}}" _
e 74 57 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RlUt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3c72afcf (key: documentation, value: A state models a situation during which some (usually implicit) invariant condition holds.\\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state represents an exposed stable situation of its context classifier: when an instance of the classifier is not processing any operation, users of this instance can always know its state configuration.\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'State'}}"
e 57 64 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RlU96tEei97MD7GK1RmA', 'key':'documentation','value':'A state models a situation during which some (usually implicit) invariant condition holds.\\nThe states of protocol state machines are exposed to the users of their context classifiers. A protocol state'}}"
e 74 46 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0j0N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f70c015 (key: documentation, value: A State models a situation during which some (usually implicit) invariant condition holds.\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'State'}}"
e 46 71 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0j0d6tEei97MD7GK1RmA', 'key':'documentation','value':'A State models a situation during which some (usually implicit) invariant condition holds.\\n<p>From package UML::StateMachines.</p>'}}"
e 79 58 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'references'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0j496tEei97MD7GK1RmA', 'source':'redefines','eModelElement':'isRedefinitionContextValid','references':['isRedefinitionContextValid']}}" _
e 29 79 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0j4N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7ec414f4 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@35d352e1 (source: redefines)'],'name':'isRedefinitionContextValid','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@97b8d7a (expression: Boolean)','eParameters':['redefinedElement']}}" _
e 29 56 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0j4d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@693576dd (key: documentation, value: The query isRedefinitionContextValid() specifies whether the redefinition contexts of a State are properly related to the redefinition contexts of the specified State to allow this element to redefine the other. This means that the containing Region of a redefining State must redefine the containing Region of the redefined State.\\nresult = (if redefinedElement.oclIsKindOf(State) then\\r\\n  let redefinedState : State = redefinedElement.oclAsType(State) in\\r\\n    container.redefinedElement.oclAsType(Region)->exists(r:Region |\\r\\n      r.subvertex->includes(redefinedState))\\r\\nelse\\r\\n  false\\r\\nendif)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isRedefinitionContextValid'}}"
e 56 34 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0j4t6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isRedefinitionContextValid() specifies whether the redefinition contexts of a State are properly related to the redefinition contexts of the specified State to allow this element to redefine'}}"
e 29 43 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0j5d6tEei97MD7GK1RmA', 'name':'redefinedElement','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'RedefinableElement','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@15074cbe (expression: RedefinableElement)','eOperation':'isRedefinitionContextValid'}}"
e 72 29 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'contents'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgcud6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@70d49a1d (source: redefinitionContext)'],'source':'duplicates','eModelElement':'State','contents':['containingStateMachine','isConsistentWith','isRedefinitionContextValid','redefinitionContext']}}" _
e 4 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_f3T-Ot6tEei97MD7GK1RmA', 'name':'redefined','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'StateMachine','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@59ad5a82 (expression: StateMachine)','eOperation':'isRedefinitionContextValid'}}"
e 17 49 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbct6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5a5f8597 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LCA','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Namespace','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3edaaabc (expression: Namespace)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}"
e 49 28 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RkId6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@745b1eb3 (key: documentation, value: The operation LCA(s1,s2) returns an orthogonal state or region which is the least common ancestor of states s1 and s2, based on the statemachine containment hierarchy.\\ntrue\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'LCA'}}"
e 28 27 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RkIt6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation LCA(s1,s2) returns an orthogonal state or region which is the least common ancestor of states s1 and s2, based on the statemachine containment hierarchy.\\ntrue\\n<p>From package UML (URI {@'}}"
e 49 21 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgbeN6tEei97MD7GK1RmA', 'name':'s2','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@467f9c2c (expression: State)','eOperation':'LCA'}}"
e 49 14 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgbd96tEei97MD7GK1RmA', 'name':'s1','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@38c5021c (expression: State)','eOperation':'LCA'}}"
e 17 76 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0imt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@69fa0cb7 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'ancestor','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@244bcf56 (expression: Boolean)','eContainingClass':'StateMachine','eParameters':['s1','s2']}}"
e 76 69 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0im96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2881bb69 (key: documentation, value: The query ancestor(s1, s2) checks whether Vertex s2 is an ancestor of Vertex s1.\\nresult = (if (s2 = s1) then \\r\\n\\ttrue \\r\\nelse \\r\\n\\tif s1.container.stateMachine->notEmpty() then \\r\\n\\t    true\\r\\n\\telse \\r\\n\\t    if s2.container.stateMachine->notEmpty() then \\r\\n\\t        false\\r\\n\\t    else\\r\\n\\t        ancestor(s1, s2.container.state)\\r\\n\\t     endif\\r\\n\\t endif\\r\\nendif  )\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'ancestor'}}"
e 69 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0inN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query ancestor(s1, s2) checks whether Vertex s2 is an ancestor of Vertex s1.\\nresult = (if (s2 = s1) then \\r\\n\\ttrue \\r\\nelse \\r\\n\\tif s1.container.stateMachine->notEmpty() then \\r\\n\\t    true\\r\\n\\telse \\r\\n\\t    i'}}"
e 76 24 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0int6tEei97MD7GK1RmA', 'name':'s1','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3cfc5a61 (expression: Vertex)','eOperation':'ancestor'}}"
e 76 40 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0in96tEei97MD7GK1RmA', 'name':'s2','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4dbd0d82 (expression: Vertex)','eOperation':'ancestor'}}"
e 17 16 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_1u0ioN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@10b11424 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'LCAState','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5ffe6e07 (expression: State)','eContainingClass':'StateMachine','eParameters':['v1','v2']}}"
e 16 13 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iod6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@786d08e7 (key: documentation, value: This utility funciton is like the LCA, except that it returns the nearest composite State that contains both input Vertices.\\nresult = (if v2.oclIsTypeOf(State) and ancestor(v1, v2) then\\r\\n\\tv2.oclAsType(State)\\r\\nelse if v1.oclIsTypeOf(State) and ancestor(v2, v1) then\\r\\n\\tv1.oclAsType(State)\\r\\nelse if (v1.container.state->isEmpty() or v2.container.state->isEmpty()) then \\r\\n\\tnull.oclAsType(State)\\r\\nelse LCAState(v1.container.state, v2.container.state)\\r\\nendif endif endif)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'LCAState'}}"
e 13 23 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iot6tEei97MD7GK1RmA', 'key':'documentation','value':'This utility funciton is like the LCA, except that it returns the nearest composite State that contains both input Vertices.\\nresult = (if v2.oclIsTypeOf(State) and ancestor(v1, v2) then\\r\\n\\tv2.oclAsType'}}"
e 16 44 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0io96tEei97MD7GK1RmA', 'name':'v1','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@546b82ef (expression: Vertex)','eOperation':'LCAState'}}"
e 16 52 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_1u0ipN6tEei97MD7GK1RmA', 'name':'v2','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Vertex','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@a1ae551 (expression: Vertex)','eOperation':'LCAState'}}"
$$
e 11 22 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eParameters'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EParameter', 'attributes': {'id': '_ftgbgN6tEei97MD7GK1RmA', 'name':'s2','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'State','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4f5eb12e (expression: State)','eOperation':'ancestor'}}"
