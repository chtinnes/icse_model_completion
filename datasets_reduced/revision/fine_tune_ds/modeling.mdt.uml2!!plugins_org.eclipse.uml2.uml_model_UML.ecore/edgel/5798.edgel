t # 5798
e 0 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthAF96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@251e08ef (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'connectors','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4fef4971 (expression: EBoolean)','eContainingClass':'CollaborationUse','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIHLiN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1a6b1a2a (key: documentation, value: The connectors in the classifier connect according to the connectors in the collaboration\\ntrue)'],'eModelElement':'connectors'}}"
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIHLid6tEei97MD7GK1RmA', 'key':'documentation','value':'The connectors in the classifier connect according to the connectors in the collaboration\\ntrue'}}"
e 2 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0n-d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@241b6b47 (key: documentation, value: Connectors in a Collaboration typing a CollaborationUse must have corresponding Connectors between elements bound in the context Classifier, and these corresponding Connectors must have the same or more general type than the Collaboration Connectors.\\ntype.ownedConnector->forAll(connector |\\r\\n  let rolesConnectedInCollab : Set(ConnectableElement) = connector.end.role->asSet(),\\r\\n        relevantBindings : Set(Dependency) = roleBinding->select(rb | rb.supplier->intersection(rolesConnectedInCollab)->notEmpty()),\\r\\n        boundRoles : Set(ConnectableElement) = relevantBindings->collect(client.oclAsType(ConnectableElement))->asSet(),\\r\\n        contextClassifier : StructuredClassifier = boundRoles->any(true).structuredClassifier->any(true) in\\r\\n          contextClassifier.ownedConnector->exists( correspondingConnector | \\r\\n              correspondingConnector.end.role->forAll( role | boundRoles->includes(role) )\\r\\n              and (connector.type->notEmpty() and correspondingConnector.type->notEmpty()) implies connector.type->forAll(conformsTo(correspondingConnector.type)) )\\r\\n))'],'eModelElement':'connectors'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0n-t6tEei97MD7GK1RmA', 'key':'documentation','value':'Connectors in a Collaboration typing a CollaborationUse must have corresponding Connectors between elements bound in the context Classifier, and these corresponding Connectors must have the same or mo'}}"
$$
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
