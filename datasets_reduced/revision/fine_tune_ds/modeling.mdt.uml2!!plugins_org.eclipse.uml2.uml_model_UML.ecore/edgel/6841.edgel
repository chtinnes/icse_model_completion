t # 6841
e 1 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_4pn_Zd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5e79a029 (key: documentation, value: The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, as redefinition only adds new formal parameters.\\nredefiningElement.isRedefinitionContextValid(self)\\nresult = (redefiningElement.oclIsKindOf(RedefinableTemplateSignature))\\n<p>From package UML::Classification.</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_4pn_Zt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining templ'}}"
e 2 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0owd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4b262447 (key: documentation, value: The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, as redefinition only adds new formal parameters.\\nresult = (redefiningElement.oclIsKindOf(RedefinableTemplateSignature))\\nredefiningElement.isRedefinitionContextValid(self)\\n<p>From package UML::Classification.</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0owt6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining templ'}}"
e 4 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthAp96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@67af8f66 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@6c977652 (source: redefines)'],'name':'isConsistentWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@47954268 (expression: Boolean)','eParameters':['redefiningElement']}}" _
$$
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
