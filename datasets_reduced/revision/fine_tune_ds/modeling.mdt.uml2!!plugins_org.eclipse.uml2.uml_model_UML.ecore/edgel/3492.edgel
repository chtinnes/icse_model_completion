t # 3492
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ju6h6N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4ad72c62 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'containingStateMachine','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'StateMachine','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@76055ebf (expression: StateMachine)','eContainingClass':'Vertex'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y2XtN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@52354d76 (key: documentation, value: The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\nelse \\n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\\n      self.oclAsType(Pseudostate).stateMachine\\n   else \\n      if (self.oclIsKindOf(ConnectionPointReference)) then\\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\\n      else \\n          null\\n      endif\\n   endif\\nendif\\n)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'containingStateMachine'}}"
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0jRN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3ca30dd2 (key: documentation, value: The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\nelse \\n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\\n      self.oclAsType(Pseudostate).stateMachine\\n   else \\n      if (self.oclIsKindOf(ConnectionPointReference)) then\\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\\n      else \\n          null\\n      endif\\n   endif\\nendif\\n\\n)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'containingStateMachine'}}"
e 2 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0jRd6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\n'}}"
$$
e 0 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y2Xtd6tEei97MD7GK1RmA', 'key':'documentation','value':'The operation containingStateMachine() returns the StateMachine in which this Vertex is defined.\\nresult = (if container <> null\\nthen\\n-- the container is a region\\n   container.containingStateMachine()\\n'}}"
