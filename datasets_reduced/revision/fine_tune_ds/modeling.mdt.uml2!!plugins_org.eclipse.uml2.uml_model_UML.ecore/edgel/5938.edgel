t # 5938
e 4 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthn0N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@242b7d1c (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'represents_classifier','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@610ce483 (expression: EBoolean)','eContainingClass':'ActivityPartition','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIHPo96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@89cd691 (key: documentation, value: If a non-external partition represents a classifier and is contained in another partition, then the containing partition must represent a classifier, and the classifier of the subpartition must be nested in the classifier represented by the containing partition, or be at the contained end of a strong composition association with the classifier represented by the containing partition.\\ntrue)'],'eModelElement':'represents_classifier'}}"
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0qdt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@a387fed (key: documentation, value: If a non-external ActivityPartition represents a Classifier and has a superPartition, then the superPartition must represent a Classifier, and the Classifier of the subpartition must be nested (nestedClassifier or ownedBehavior) in the Classifier represented by the superPartition, or be at the contained end of a composition Association with the Classifier represented by the superPartition.\\n(not isExternal and represents.oclIsKindOf(Classifier) and superPartition->notEmpty()) implies\\r\\n(\\r\\n   let representedClassifier : Classifier = represents.oclAsType(Classifier) in\\r\\n     superPartition.represents.oclIsKindOf(Classifier) and\\r\\n      let representedSuperClassifier : Classifier = superPartition.represents.oclAsType(Classifier) in\\r\\n       (representedSuperClassifier.oclIsKindOf(BehavioredClassifier) and representedClassifier.oclIsKindOf(Behavior) and \\r\\n        representedSuperClassifier.oclAsType(BehavioredClassifier).ownedBehavior->includes(representedClassifier.oclAsType(Behavior))) \\r\\n       or\\r\\n       (representedSuperClassifier.oclIsKindOf(Class) and  representedSuperClassifier.oclAsType(Class).nestedClassifier->includes(representedClassifier))\\r\\n       or\\r\\n       (Association.allInstances()->exists(a | a.memberEnd->exists(end1 | end1.isComposite and end1.type = representedClassifier and \\r\\n                                                                      a.memberEnd->exists(end2 | end1<>end2 and end2.type = representedSuperClassifier))))\\r\\n))'],'eModelElement':'represents_classifier'}}"
e 1 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0qd96tEei97MD7GK1RmA', 'key':'documentation','value':'If a non-external ActivityPartition represents a Classifier and has a superPartition, then the superPartition must represent a Classifier, and the Classifier of the subpartition must be nested (nested'}}"
$$
e 0 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIHPpN6tEei97MD7GK1RmA', 'key':'documentation','value':'If a non-external partition represents a classifier and is contained in another partition, then the containing partition must represent a classifier, and the classifier of the subpartition must be nes'}}"
