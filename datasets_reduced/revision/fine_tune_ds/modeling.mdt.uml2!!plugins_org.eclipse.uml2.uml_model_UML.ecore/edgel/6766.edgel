t # 6766
e 5 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_t2Ovod6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1574123d (key: documentation, value: If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\r\\nresult = if owningAssociation->isEmpty() and association.memberEnd->size() = 2\\n  then\\n    let otherEnd = (association.memberEnd - self)->any() in\\n      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif\\n    else Set {}\\n    endif)','...'],'eModelElement':'getOpposite'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_t2Ovot6tEei97MD7GK1RmA', 'key':'documentation','value':'If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\r\\nresult = if owningAssocia'}}"
e 5 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_t2Ovo96tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
e 2 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgZFN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@461b5926 (key: documentation, value: If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\r\\nresult = if owningAssociation->isEmpty() and association.memberEnd->size() = 2\\n  then\\n    let otherEnd = (association.memberEnd - self)->any() in\\n      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif\\n    else Set {}\\n    endif)'],'eModelElement':'getOpposite'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgZFd6tEei97MD7GK1RmA', 'key':'documentation','value':'If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\r\\nresult = if owningAssocia'}}"
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZE96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@55155476 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getOpposite','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Property','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@28469773 (expression: Property)','eContainingClass':'Property'}}" _
$$
e 3 5 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
