t # 3745
e 0 6 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rfq96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5c519e59 (key: documentation, value: If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\nresult = if owningAssociation->isEmpty() and association.memberEnd->size() = 2\\n  then\\n    let otherEnd = (association.memberEnd - self)->any() in\\n      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif\\n    else Set {}\\n    endif\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)','...'],'eModelElement':'getOpposite'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RfrN6tEei97MD7GK1RmA', 'key':'documentation','value':'If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\nresult = if owningAssociat'}}"
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rfrd6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
e 5 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_0oBzi96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@63339372 (key: documentation, value: If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\nresult = if owningAssociation->isEmpty() and association.memberEnd->size() = 2\\n  then\\n    let otherEnd = (association.memberEnd - self)->any() in\\n      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif\\n    else Set {}\\n    endif\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)','...'],'eModelElement':'getOpposite'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oBzjN6tEei97MD7GK1RmA', 'key':'documentation','value':'If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.\\nresult = if owningAssociat'}}"
e 5 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oBzjd6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
e 3 5 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgZE96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@68c5ca00 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getOpposite','ordered':'false','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'Property','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5c7ceb96 (expression: Property)','eContainingClass':'Property'}}" _
$$
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
