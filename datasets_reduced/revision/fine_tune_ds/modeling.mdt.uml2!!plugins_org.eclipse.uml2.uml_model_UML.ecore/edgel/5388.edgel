t # 5388
e 0 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfy3N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7a2d18d9 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@77378ee7 (expression: String)','eContainingClass':'ElementImport'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Rd7d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4d75441c (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElement.name\\nendif\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'getName'}}"
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Rd7t6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElem'}}"
e 1 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0m7N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2e70fea5 (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = (if alias->notEmpty() then\\n  alias\\nelse\\n  importedElement.name\\nendif)\\n<p>From package UML::CommonStructure.</p>)'],'eModelElement':'getName'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0m7d6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = (if alias->notEmpty() then\\n  alias\\nelse\\n  importedElement.name\\nendif'}}"
$$
e 0 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
