t # 6839
e 0 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_4pn6c96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@72286392 (key: documentation, value: The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be redefined (extended) to become a composite State (by adding one or more Regions) and a composite State can be redefined (extended) by adding Regions and by adding Vertices, States, and Transitions to inherited Regions. All States may add or replace entry, exit, and 'doActivity' Behaviors.\\nredefiningElement.isRedefinitionContextValid(self)\\nresult = (-- the following is merely a default body; it is expected that the specific form of this constraint will be specified by profiles\\r\\ntrue)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_4pn6dN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be rede'}}"
e 1 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgcwd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5b86a704 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@89f065c (source: redefines)'],'name':'isConsistentWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@3dfe10d6 (expression: Boolean)','eParameters':['redefiningElement']}}" _
e 4 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0j296tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@535f3303 (key: documentation, value: The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be redefined (extended) to become a composite State (by adding one or more Regions) and a composite State can be redefined (extended) by adding Regions and by adding Vertices, States, and Transitions to inherited Regions. All States may add or replace entry, exit, and 'doActivity' Behaviors.\\nresult = (-- the following is merely a default body; it is expected that the specific form of this constraint will be specified by profiles\\r\\ntrue)\\nredefiningElement.isRedefinitionContextValid(self)\\n<p>From package UML::StateMachines.</p>)'],'eModelElement':'isConsistentWith'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0j3N6tEei97MD7GK1RmA', 'key':'documentation','value':'The query isConsistentWith() specifies that a redefining State is consistent with a redefined State provided that the redefining State is an extension of the redefined State A simple State can be rede'}}"
$$
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
