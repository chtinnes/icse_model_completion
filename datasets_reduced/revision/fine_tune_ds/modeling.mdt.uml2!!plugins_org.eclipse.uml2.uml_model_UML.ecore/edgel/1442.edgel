t # 1442
e 4 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfy3N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@639920fb (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@2d6056fb (expression: String)','eContainingClass':'ElementImport'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftfy3d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4ddbcc75 (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\r\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElement.name\\nendif)'],'eModelElement':'getName'}}"
e 4 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIF9396tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@f891a32 (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElement.name\\nendif)'],'eModelElement':'getName'}}"
e 3 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIF94N6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElem'}}"
$$
e 1 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftfy3t6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\r\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedEle'}}"
