t # 6271
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIH7-96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7725ac11 (key: documentation, value: The edges coming into and out of a decision node, other than the decision input flow (if any), must be either all object flows or all control flows.\\ntrue)'],'eModelElement':'edges'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIH7_N6tEei97MD7GK1RmA', 'key':'documentation','value':'The edges coming into and out of a decision node, other than the decision input flow (if any), must be either all object flows or all control flows.\\ntrue'}}"
e 4 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjePN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4c0f4ec (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'edges','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1a179636 (expression: EBoolean)','eContainingClass':'DecisionNode','eParameters':['diagnostics','context']}}" _
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u04AN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4e121034 (key: documentation, value: The ActivityEdges incoming to and outgoing from a DecisionNode, other than the decisionInputFlow (if any), must be either all ObjectFlows or all ControlFlows.\\nlet allEdges: Set(ActivityEdge) = incoming->union(outgoing) in\\r\\nlet allRelevantEdges: Set(ActivityEdge) = if decisionInputFlow->notEmpty() then allEdges->excluding(decisionInputFlow) else allEdges endif in\\r\\nallRelevantEdges->forAll(oclIsKindOf(ControlFlow)) or allRelevantEdges->forAll(oclIsKindOf(ObjectFlow))\\r\\n)'],'eModelElement':'edges'}}"
$$
e 1 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u04Ad6tEei97MD7GK1RmA', 'key':'documentation','value':'The ActivityEdges incoming to and outgoing from a DecisionNode, other than the decisionInputFlow (if any), must be either all ObjectFlows or all ControlFlows.\\nlet allEdges: Set(ActivityEdge) = incomin'}}"
