t # 6763
e 3 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fuhGUN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3b8c0a5a (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif)'],'eModelElement':'getQualifiedName'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fuhGUd6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNa'}}"
e 4 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fuhGT96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@5a7ad4d3 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getQualifiedName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6bf88973 (expression: String)','eContainingClass':'NamedElement'}}" _
e 1 5 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_t2OpC96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1d21045b (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif)','...'],'eModelElement':'getQualifiedName'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_t2OpDd6tEei97MD7GK1RmA', 'key':'suppressedVisibility','value':'true'}}"
e 1 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_t2OpDN6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNa'}}"
$$
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
