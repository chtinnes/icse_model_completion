t # 3767
e 0 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07RgPt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@8be36d9 (key: documentation, value: The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i))\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'compatibleWith'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07RgP96tEei97MD7GK1RmA', 'key':'documentation','value':'The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinali'}}"
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_oq7Eyt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3be6c010 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'compatibleWith','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'Boolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@6d2fe5fd (expression: Boolean)','eContainingClass':'MultiplicityElement','eParameters':['other']}}" _
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_0oB0Ht6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f7ec4af (key: documentation, value: The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinality(i) implies other.includesCardinality(i))\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'compatibleWith'}}"
$$
e 2 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_0oB0H96tEei97MD7GK1RmA', 'key':'documentation','value':'The operation compatibleWith takes another multiplicity as input. It checks if one multiplicity is compatible with another.\\nresult = Integer.allInstances()->forAll(i : Integer | self.includesCardinali'}}"
