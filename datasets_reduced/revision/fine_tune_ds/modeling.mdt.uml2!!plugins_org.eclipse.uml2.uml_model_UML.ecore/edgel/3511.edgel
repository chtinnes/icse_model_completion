t # 3511
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0zfN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@77f7c81b (key: documentation, value: The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)\\n)'],'eModelElement':'type_and_ordering'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0zfd6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)\\n'}}"
e 3 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiP7N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1a4c0145 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'type_and_ordering','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@69112a4a (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" _
e 3 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_2Y_-R96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@60bca5ea (key: documentation, value: The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered))'],'eModelElement':'type_and_ordering'}}"
$$
e 2 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_2Y_-SN6tEei97MD7GK1RmA', 'key':'documentation','value':'The type and ordering of the result OutputPin are same as the type and ordering of the open Association end.\\nself.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)'}}"
