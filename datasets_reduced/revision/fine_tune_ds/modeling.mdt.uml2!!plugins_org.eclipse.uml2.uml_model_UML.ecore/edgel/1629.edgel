t # 1629
e 3 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftgbvt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@27e09a55 (key: documentation, value: If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.\\r\\n(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpty()))'],'eModelElement':'owned'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftgbv96tEei97MD7GK1RmA', 'key':'documentation','value':'If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.\\r\\n(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpt'}}"
e 4 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgbvd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@683676a8 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'owned','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@50daced0 (expression: EBoolean)','eContainingClass':'Region','eParameters':['diagnostics','context']}}" _
e 4 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIGnA96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@347611d8 (key: documentation, value: If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.\\n(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpty()))'],'eModelElement':'owned'}}"
$$
e 2 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIGnBN6tEei97MD7GK1RmA', 'key':'documentation','value':'If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa.\\n(stateMachine->notEmpty() implies state->isEmpty()) and (state->notEmpty() implies stateMachine->isEmpty'}}"
