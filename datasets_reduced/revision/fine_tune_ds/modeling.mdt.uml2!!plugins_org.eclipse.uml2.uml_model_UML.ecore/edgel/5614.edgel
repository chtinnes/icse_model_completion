t # 5614
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIGmON6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7eea7d30 (key: documentation, value: All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(self.kind = #fork) implies\\n  self.outgoing->forAll (t1, t2 | t1<>t2 implies\\n    (self.stateMachine.LCA(t1.target, t2.target).container.isOrthogonal)))'],'eModelElement':'transitions_outgoing'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIGmOd6tEei97MD7GK1RmA', 'key':'documentation','value':'All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(self.kind = #fork) implies\\n  self.outgoing->forAll (t1, t2 | t1<>t2 implies\\n    (self.stateMachi'}}"
e 4 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftgdn96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@17a11c07 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'transitions_outgoing','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@48f300dd (expression: EBoolean)','eContainingClass':'Pseudostate','eParameters':['diagnostics','context']}}" _
e 4 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0iuN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@120133b (key: documentation, value: All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an orthogonal state which contains the targets of these transitions \\r\\n-- such that these targets belong to different regions of that orthogonal state \\r\\n\\r\\noutgoing->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.target, t2.target) in\\r\\n\\t((contState <> null) and (contState.region\\r\\n\\t\\t->exists(r1:Region, r2: Region | (r1 <> r2) and t1.target.isContainedInRegion(r1) and t2.target.isContainedInRegion(r2)))))\\r\\n\\t)'],'eModelElement':'transitions_outgoing'}}"
$$
e 3 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0iud6tEei97MD7GK1RmA', 'key':'documentation','value':'All transitions outgoing a fork vertex must target states in different regions of an orthogonal state.\\n(kind = PseudostateKind::fork) implies\\r\\n\\r\\n-- for any pair of outgoing transitions there exists an'}}"
