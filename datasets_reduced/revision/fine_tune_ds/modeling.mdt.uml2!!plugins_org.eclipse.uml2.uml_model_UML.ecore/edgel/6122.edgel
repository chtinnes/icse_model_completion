t # 6122
e 0 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftjgKt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3d939c40 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'cannot_be_defined','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1df0f429 (expression: EBoolean)','eContainingClass':'AssociationClass','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIH3EN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3175f45 (key: documentation, value: An AssociationClass cannot be defined between itself and something else.\\nself.endType->excludes(self) and self.endType>collect(et|et.allparents()->excludes(self)))'],'eModelElement':'cannot_be_defined'}}"
e 0 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9lLN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@41066cfe (key: documentation, value: An AssociationClass cannot be defined between itself and something else.\\nself.endType()->excludes(self) and self.endType()->collect(et|et.oclAsType(Classifier).allParents())->flatten()->excludes(self))'],'eModelElement':'cannot_be_defined'}}"
e 1 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9lLd6tEei97MD7GK1RmA', 'key':'documentation','value':'An AssociationClass cannot be defined between itself and something else.\\nself.endType()->excludes(self) and self.endType()->collect(et|et.oclAsType(Classifier).allParents())->flatten()->excludes(self)'}}"
$$
e 4 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIH3Ed6tEei97MD7GK1RmA', 'key':'documentation','value':'An AssociationClass cannot be defined between itself and something else.\\nself.endType->excludes(self) and self.endType>collect(et|et.allparents()->excludes(self))'}}"
