t # 6006
e 0 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthDBt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@74f2e1db (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'interaction_uses_share_lifeline','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4ef18fb1 (expression: EBoolean)','eContainingClass':'Lifeline','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIHyzd6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@517c82e9 (key: documentation, value: If two (or more) InteractionUses within one Interaction, refer to Interactions with 'common Lifelines,' those Lifelines must also appear in the Interaction with the InteractionUses. By common Lifelines we mean Lifelines with the same selector and represents associations.\\ntrue)'],'eModelElement':'interaction_uses_share_lifeline'}}"
e 1 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIHyzt6tEei97MD7GK1RmA', 'key':'documentation','value':'If two (or more) InteractionUses within one Interaction, refer to Interactions with 'common Lifelines,' those Lifelines must also appear in the Interaction with the InteractionUses. By common Lifeline'}}"
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9hE96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@5be909b3 (key: documentation, value: If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonUse within that same enclosing Interaction, it must be common to a lifeline within that enclosing Interaction. By common Lifelines we mean Lifelines with the same selector and represents associations.\\r\\n\\nlet intUses : Set(InteractionUse) = interaction.interactionUse  in \\r\\nintUses->forAll\\r\\n( iuse : InteractionUse | \\r\\nlet usingInteraction : Set(Interaction)  = iuse.enclosingInteraction->asSet()\\r\\n->union(\\r\\niuse.enclosingOperand.combinedFragment->asSet()->closure(enclosingOperand.combinedFragment).enclosingInteraction->asSet()\\r\\n               ) \\r\\nin\\r\\nlet peerUses : Set(InteractionUse) = usingInteraction.fragment->select(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n->union(\\r\\nusingInteraction.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet()\\r\\n->closure(operand.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)).operand.fragment->\\r\\nselect(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\\r\\n               )->excluding(iuse)\\r\\n in\\r\\npeerUses->forAll( peerUse : InteractionUse |\\r\\n peerUse.refersTo.lifeline->forAll( l : Lifeline | (l.represents = self.represents and \\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\n  and \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)  \\r\\nimplies\\r\\n usingInteraction.lifeline->select(represents = self.represents and\\r\\n ( self.selector.oclIsKindOf(LiteralString) implies\\r\\n  l.selector.oclIsKindOf(LiteralString) and \\r\\n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\\r\\nand \\r\\n( self.selector.oclIsKindOf(LiteralInteger) implies\\r\\n  l.selector.oclIsKindOf(LiteralInteger) and \\r\\n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\\r\\n)\\r\\n                                                )\\r\\n                    )\\r\\n))'],'eModelElement':'interaction_uses_share_lifeline'}}"
$$
e 2 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9hFN6tEei97MD7GK1RmA', 'key':'documentation','value':'If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonU'}}"
