t # 1950
e 2 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIIBq96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2f10edd9 (key: documentation, value: The open end must be navigable.\\nlet openend : Property = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in\\nopenend.isNavigable()\\n)'],'eModelElement':'navigable_open_end'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIIBrN6tEei97MD7GK1RmA', 'key':'documentation','value':'The open end must be navigable.\\nlet openend : Property = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in\\nopenend.isNavigable()\\n'}}"
e 3 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftiP_N6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3ee14de7 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'navigable_open_end','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7095d4e9 (expression: EBoolean)','eContainingClass':'ReadLinkAction','eParameters':['diagnostics','context']}}" _
e 3 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftiP_d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3cd2d414 (key: documentation, value: The open end must be navigable.\\r\\nlet openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in\\nopenend.isNavigable()\\n)'],'eModelElement':'navigable_open_end'}}"
$$
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftiP_t6tEei97MD7GK1RmA', 'key':'documentation','value':'The open end must be navigable.\\r\\nlet openend : AssociationEnd = self.endData->select(ed | ed.value->size() = 0)->asSequence()->first().end in\\nopenend.isNavigable()\\n'}}"
