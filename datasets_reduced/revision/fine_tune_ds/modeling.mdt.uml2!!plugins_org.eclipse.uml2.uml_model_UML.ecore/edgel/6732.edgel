t # 6732
e 0 9 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fuhGT96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4d449c13 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@4cc94da1 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'getQualifiedName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'EString','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@56578157 (expression: EString)','eContainingClass':'NamedElement'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fuhGUN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a7ce660 (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif)'],'eModelElement':'getQualifiedName'}}"
e 9 7 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fuhGUd6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNa'}}"
e 0 8 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fuhGUt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3f9a26b3 (key: constraints, value: spec)'],'eModelElement':'getQualifiedName'}}"
e 8 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fuhGU96tEei97MD7GK1RmA', 'key':'constraints','value':'spec'}}"
e 5 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eOperations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftfLdN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1843ddff (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'NamedElement','ePackage':'uml','abstract':'true','interface':'false','eOperations':['no_name','qualified_name','visibility_needs_ownership','qualifiedName','allNamespaces','isDistinguishableFrom','separator'],'eIDAttribute':'name','eStructuralFeatures':['name','visibility','qualifiedName','clientDependency','namespace','nameExpression'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@169f7398 (expression: Element)']}}" _
e 5 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eOperations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfLj96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@16dce546 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@38964a8 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'qualifiedName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'EString','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@481bc901 (expression: EString)','eContainingClass':'NamedElement'}}"
e 4 6 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftfLkN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6dac0506 (key: documentation, value: When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()\\nthen \\n    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))\\nelse\\n    Set{}\\nendif)'],'eModelElement':'qualifiedName'}}"
e 6 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftfLkd6tEei97MD7GK1RmA', 'key':'documentation','value':'When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.\\r\\nresult = if self.name->notEmpty() and self.allNa'}}"
e 1 10 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ftfLkt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@399cfda1 (key: constraints, value: spec)'],'eModelElement':'qualifiedName'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ftfLk96tEei97MD7GK1RmA', 'key':'constraints','value':'spec'}}"
$$
e 4 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
