t # 1862
e 3 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIH10d6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@249aac93 (key: documentation, value: An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.\\nself.ownedAttribute->forAll ( a |\\n(a.association->notEmpty()) implies\\n((a.association.memberEnd.size() = 2) and\\n(a.opposite.class.oclIsKindOf(UseCase) or\\n(a.opposite.class.oclIsKindOf(Class) and not a.opposite.class.oclIsKindOf(Behavior))))\\n)'],'eModelElement':'associations'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIH10t6tEei97MD7GK1RmA', 'key':'documentation','value':'An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.\\nself.ownedAttribute->forAll ( a |\\n(a.association->notEmpty()) implies\\n((a.assoc'}}"
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthCUt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@3a107044 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'associations','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@5a343a12 (expression: EBoolean)','eContainingClass':'Actor','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fthCU96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@28fb66fb (key: documentation, value: An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.\\r\\nself.ownedAttribute->forAll ( a |\\n(a.association->notEmpty()) implies\\n((a.association.memberEnd.size() = 2) and\\n(a.opposite.class.oclIsKindOf(UseCase) or\\n(a.opposite.class.oclIsKindOf(Class) and not a.opposite.class.oclIsKindOf(Behavior))))\\n)'],'eModelElement':'associations'}}"
e 4 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fthCVN6tEei97MD7GK1RmA', 'key':'documentation','value':'An actor can only have associations to use cases, components and classes. Furthermore these associations must be binary.\\r\\nself.ownedAttribute->forAll ( a |\\n(a.association->notEmpty()) implies\\n((a.asso'}}"
$$
e 1 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
