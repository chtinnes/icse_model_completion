t # 5273
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_07Ralt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10b967f5 (key: documentation, value: The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.\\nThe query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.\\nresult = if self.ownedMember ->includes(element)\\nthen Set{}->include(element.name)\\nelse let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in\\n  if elementImports->notEmpty()\\n  then elementImports->collect(el | el.getName())\\n  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))\\n  endif\\nendif\\n<p>From package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)'],'eModelElement':'getNamesOfMember'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_07Ral96tEei97MD7GK1RmA', 'key':'documentation','value':'The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with d'}}"
e 1 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_ftfyj96tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@26c86d68 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'getNamesOfMember','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'String','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@4f5242da (expression: String)','eContainingClass':'Namespace','eParameters':['element']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u0Wc96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4f606574 (key: documentation, value: The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace, taking importing into account. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases.\\nresult = (if self.ownedMember ->includes(element)\\nthen Set{element.name}\\nelse let elementImports : Set(ElementImport) = self.elementImport->select(ei | ei.importedElement = element) in\\n  if elementImports->notEmpty()\\n  then\\n     elementImports->collect(el | el.getName())->asSet()\\n  else \\n     self.packageImport->select(pi | pi.importedPackage.visibleMembers().oclAsType(NamedElement)->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))->asSet()\\n  endif\\nendif)\\n<p>From package UML::CommonStructure.</p>)'],'eModelElement':'getNamesOfMember'}}"
e 3 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u0WdN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace, taking importing into account. In general a member can have multiple names in a Namespace if it is'}}"
$$
e 1 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
