t # 5093
e 1 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_n2YSEN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@36b60781 (key: documentation, value: A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstraction for a set of realizingClassifiers that realize its behavior. In addition, because a Class itself is a subtype of an EncapsulatedClassifier, a Component may optionally have an internal structure and own a set of Ports that formalize its interaction points.\\r\\n\\r\\nA component has a number of provided and required Interfaces, that form the basis for wiring components together, either using Dependencies, or by using Connectors. A provided Interface is one that is either implemented directly by the component or one of its realizingClassifiers, or it is the type of a provided Port of the Component. A required interface is designated by a Usage Dependency from the Component or one of its realizingClassifiers, or it is the type of a required Port.\\r\\n)'],'eModelElement':'Component'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_n2YSEd6tEei97MD7GK1RmA', 'key':'documentation','value':'A component is a subtype of Class which provides for a Component having attributes and operations, and being able to participate in Associations and Generalizations. A Component may form the abstracti'}}"
e 4 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_ftjfat6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@63d6f648 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'Component','ePackage':'uml','abstract':'false','interface':'false','eOperations':['createOwnedClass','createOwnedEnumeration','createOwnedPrimitiveType','createOwnedInterface','realizedInterfaces','usedInterfaces','getRequireds','getProvideds'],'eStructuralFeatures':['isIndirectlyInstantiated','required','provided','packagedElement','realization'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@5de12e63 (expression: Class)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@5921fcbe (expression: Namespace)']}}" _
e 4 3 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_oBps9N6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4a03e07e (key: documentation, value: A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\\r\\nIn the namespace of a component, all model elements that are involved in or related to its definition are either owned or imported explicitly. This may include, for example, use cases and dependencies (e.g. mappings), packages, components, and artifacts.)'],'eModelElement':'Component'}}"
$$
e 3 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_oBps9d6tEei97MD7GK1RmA', 'key':'documentation','value':'A component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.\\r\\nIn the namespace of a component, all model elements tha'}}"
