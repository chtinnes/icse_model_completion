t # 6034
e 2 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_1u9gZ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@40da8acd (key: documentation, value: In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument is of the same Class or a specialization of that of the Attribute.\\n(messageSort = MessageSort::asynchSignal ) and signature.oclIsKindOf(Signal) implies\\r\\n   let signalAttributes : OrderedSet(Property) = signature.oclAsType(Signal).inheritedMember()->\\r\\n             select(n:NamedElement | n.oclIsTypeOf(Property))->collect(oclAsType(Property))->asOrderedSet()\\r\\n   in signalAttributes->size() = self.argument->size()\\r\\n   and self.argument->forAll( o: ValueSpecification |\\r\\n          not (o.oclIsKindOf(Expression)\\r\\n          and o.oclAsType(Expression).symbol->size()=0\\r\\n          and o.oclAsType(Expression).operand->isEmpty() ) implies\\r\\n              let p : Property = signalAttributes->at(self.argument->indexOf(o))\\r\\n              in o.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier)))\\r\\n)'],'eModelElement':'signature_is_signal'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_1u9gaN6tEei97MD7GK1RmA', 'key':'documentation','value':'In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument i'}}"
e 4 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fthCgN6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@7c06bad1 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'signature_is_signal','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@7502613a (expression: EBoolean)','eContainingClass':'Message','eParameters':['diagnostics','context']}}" _
e 4 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_wIHz4t6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6f8af2c3 (key: documentation, value: In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Arguement is of the same Class or a specialization of that of the Attribute.\\ntrue)'],'eModelElement':'signature_is_signal'}}"
$$
e 3 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_wIHz496tEei97MD7GK1RmA', 'key':'documentation','value':'In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Arguement '}}"
