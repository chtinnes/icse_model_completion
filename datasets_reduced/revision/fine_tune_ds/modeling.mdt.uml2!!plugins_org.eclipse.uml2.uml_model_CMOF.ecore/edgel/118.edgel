t # 118
e 0 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fZD3Bd6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4f7af1bb (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@55ed133f (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'getName','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'EString','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@1eedf430 (expression: EString)','eContainingClass':'ElementImport'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZD3Bt6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@974f58c (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\r\\nresult = if self.alias->notEmpty() then \\n  self.alias\\nelse\\n  self.importedElement.name\\nendif)'],'eModelElement':'getName'}}"
e 3 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZD3B96tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\r\\nresult = if self.alias->notEmpty() then \\n  self.alias\\nelse\\n  self.importedEl'}}"
e 0 1 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZD3CN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6823a72 (key: constraints, value: spec)'],'eModelElement':'getName'}}"
e 1 5 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZD3Cd6tEei97MD7GK1RmA', 'key':'constraints','value':'spec'}}"
e 4 6 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ffDJZ96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1705c2f7 (key: documentation, value: The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElement.name\\nendif)'],'eModelElement':'getName'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ffDJaN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.\\nresult = if self.alias->notEmpty() then\\n  self.alias\\nelse\\n  self.importedElem'}}"
$$
e 0 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
