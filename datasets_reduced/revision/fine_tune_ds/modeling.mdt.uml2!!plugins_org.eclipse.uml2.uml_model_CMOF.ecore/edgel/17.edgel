t # 17
e 0 2 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZDzd96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@244a0d6d (key: documentation, value: The query getNamesOfMember() is overridden to take account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.\\r\\nresult = if self.ownedMember->includes(element)\\nthen Set{}->include(element.name)\\nelse let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in\\n  if elementImports->notEmpty()\\n  then elementImports->collect(el | el.getName())\\n  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))->collect(pi | pi.importedPackage.getNamesOfMember(element))\\n  endif\\nendif)'],'eModelElement':'getNamesOfMember'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZDzeN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getNamesOfMember() is overridden to take account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owne'}}"
e 5 0 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fZDzdt6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@2139460c (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@20feaa9d (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'getNamesOfMember','ordered':'false','unique':'true','lowerBound':'0','upperBound':'-1','many':'true','required':'false','eType':'EString','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@10c28ec2 (expression: EString)','eContainingClass':'Namespace','eParameters':['element']}}" _
e 5 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZDzed6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@7b20be8c (key: constraints, value: spec)'],'eModelElement':'getNamesOfMember'}}"
e 5 4 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ffDJH96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@10bbac86 (key: documentation, value: The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.\\nThe query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.\\nresult = if self.ownedMember ->includes(element)\\nthen Set{}->include(element.name)\\nelse let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in\\n  if elementImports->notEmpty()\\n  then elementImports->collect(el | el.getName())\\n  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))\\n  endif\\nendif)'],'eModelElement':'getNamesOfMember'}}"
e 4 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ffDJIN6tEei97MD7GK1RmA', 'key':'documentation','value':'The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then importe'}}"
$$
e 3 6 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZDzet6tEei97MD7GK1RmA', 'key':'constraints','value':'spec'}}"
