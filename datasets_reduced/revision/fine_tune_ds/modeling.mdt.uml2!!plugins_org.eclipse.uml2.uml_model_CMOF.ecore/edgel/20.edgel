t # 20
e 0 6 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_fZDzid6tEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@482f5cd7 (source: http://www.eclipse.org/emf/2002/GenModel)','org.eclipse.emf.ecore.impl.EAnnotationImpl@7d65a6e7 (source: http://www.eclipse.org/emf/2002/Ecore)'],'name':'membersAreDistinguishable','ordered':'false','unique':'true','lowerBound':'1','upperBound':'1','many':'false','required':'true','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@11164cd0 (expression: EBoolean)','eContainingClass':'Namespace'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZDzit6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6b2b3ea5 (key: documentation, value: The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.\\r\\nresult = self.member->forAll( memb |\\n\\tself.member->excluding(memb)->forAll(other |\\n\\t\\tmemb.isDistinguishableFrom(other, self))))'],'eModelElement':'membersAreDistinguishable'}}"
e 6 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZDzi96tEei97MD7GK1RmA', 'key':'documentation','value':'The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.\\r\\nresult = self.member->forAll( memb |\\n\\tself.member->excluding(memb)->forA'}}"
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_ffDJK96tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@8b0f213 (key: documentation, value: The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.\\nresult = self.member->forAll( memb |\\nself.member->excluding(memb)->forAll(other |\\nmemb.isDistinguishableFrom(other, self))))'],'eModelElement':'membersAreDistinguishable'}}"
e 2 1 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_ffDJLN6tEei97MD7GK1RmA', 'key':'documentation','value':'The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.\\nresult = self.member->forAll( memb |\\nself.member->excluding(memb)->forAll'}}"
e 3 5 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_fZDzjN6tEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@236d758e (key: constraints, value: spec)'],'eModelElement':'membersAreDistinguishable'}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_fZDzjd6tEei97MD7GK1RmA', 'key':'constraints','value':'spec'}}"
$$
e 0 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
