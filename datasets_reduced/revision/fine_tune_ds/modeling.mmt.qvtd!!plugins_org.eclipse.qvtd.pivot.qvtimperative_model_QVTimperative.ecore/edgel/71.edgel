t # 71
e 0 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_NsVpDN6vEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3415f1c9 (key: body, value: Tuple {\\n\\tmessage : String = targetVariable.type.name + ' must conform to ' + resolvedProperty.owningClass.name,\\n\\tstatus : Boolean = \\ntargetVariable.type.conformsTo(resolvedProperty.owningClass)\\n\\n}.status)'],'eModelElement':'validateCompatibleClassForProperty'}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_NsVpDd6vEei97MD7GK1RmA', 'key':'body','value':'Tuple {\\n\\tmessage : String = targetVariable.type.name + ' must conform to ' + resolvedProperty.owningClass.name,\\n\\tstatus : Boolean = \\ntargetVariable.type.conformsTo(resolvedProperty.owningClass)\\n\\n}.sta'}}"
e 1 4 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EOperation', 'attributes': {'id': '_Np5Yct6vEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@4a7a7e1b (source: http://www.eclipse.org/uml2/2.0.0/UML)','org.eclipse.emf.ecore.impl.EAnnotationImpl@1738e59f (source: http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot)'],'name':'validateCompatibleClassForProperty','ordered':'true','unique':'true','lowerBound':'0','upperBound':'1','many':'false','required':'false','eType':'EBoolean','eGenericType':'org.eclipse.emf.ecore.impl.EGenericTypeImpl@38758609 (expression: EBoolean)','eContainingClass':'SetStatement','eParameters':['diagnostics','context']}}" "{'changeType': 'Remove', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_Np5Ydd6vEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@21e6be88 (key: body, value: let propertySourceType = if isOpposite then targetProperty.type else targetProperty.owningClass endif in targetVariable.type.conformsTo(propertySourceType)\\n)'],'eModelElement':'validateCompatibleClassForProperty'}}"
e 4 3 "{'changeType': 'Remove', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Remove', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_Np5Ydt6vEei97MD7GK1RmA', 'key':'body','value':'let propertySourceType = if isOpposite then targetProperty.type else targetProperty.owningClass endif in targetVariable.type.conformsTo(propertySourceType)\\n'}}"
$$
e 1 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" _ _
