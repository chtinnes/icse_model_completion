t # 116
e 1 2 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'eAnnotations'}" "{'changeType': 'Preserve', 'type': 'object', 'className': 'EClass', 'attributes': {'id': '_NY01696vEei97MD7GK1RmA', 'eAnnotations':['org.eclipse.emf.ecore.impl.EAnnotationImpl@1e19bd91 (source: http://www.eclipse.org/emf/2002/GenModel)'],'name':'DeclareStatement','ePackage':'qvtimperative','abstract':'false','interface':'false','eStructuralFeatures':['isCheck','ownedExpression'],'eGenericSuperTypes':['org.eclipse.emf.ecore.impl.EGenericTypeImpl@f705c43 (expression: VariableStatement)','org.eclipse.emf.ecore.impl.EGenericTypeImpl@392dfd70 (expression: ObservableStatement)']}}" "{'changeType': 'Add', 'type': 'object', 'className': 'EAnnotation', 'attributes': {'id': '_Nek4rd6vEei97MD7GK1RmA', 'source':'http://www.eclipse.org/emf/2002/GenModel','details':['org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@4da6d340 (key: documentation, value: A DeclareStatement declares a variable and initial value.\\n\\nsyntax: oclText[check var name : type := expression;]\\n\\noclText[type] or oclText[expression] but not both may be omitted. An omitted type is deduced from the initial expression values.\\n\\noclText[check] may be omitted when the expression type is necessarily conformant.)'],'eModelElement':'DeclareStatement'}}"
$$
e 2 0 "{'changeType': 'Add', 'type': 'reference', 'referenceTypeName': 'details'}" _ "{'changeType': 'Add', 'type': 'object', 'className': 'EStringToStringMapEntry', 'attributes': {'id': '_Nek4rt6vEei97MD7GK1RmA', 'key':'documentation','value':'A DeclareStatement declares a variable and initial value.\\n\\nsyntax: oclText[check var name : type := expression;]\\n\\noclText[type] or oclText[expression] but not both may be omitted. An omitted type is d'}}"
