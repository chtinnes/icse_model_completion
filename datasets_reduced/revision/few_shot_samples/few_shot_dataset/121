----------------------------------------------------------------------------------------------------
0 3 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@37d4246a (key: documentation, value: If isDerived is true, the value of the attribute is derived from information elsewhere. The default value is false.)"
    ],
    "eModelElement": "isDerived",
    "id": "_fZD0wN6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_fZD0wd6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "If isDerived is true, the value of the attribute is derived from information elsewhere. The default value is false."
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
1 0 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "changeable": "true",
    "defaultValue": "false",
    "defaultValueLiteral": "false",
    "derived": "false",
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@11e3bff5 (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eAttributeType": "EBoolean",
    "eContainingClass": "Property",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d3421e5 (expression: EBoolean)",
    "eType": "EBoolean",
    "iD": "false",
    "id": "_fZD0v96tEei97MD7GK1RmA",
    "lowerBound": "1",
    "many": "false",
    "name": "isDerived",
    "ordered": "false",
    "required": "true",
    "transient": "false",
    "unique": "true",
    "unsettable": "false",
    "upperBound": "1",
    "volatile": "false"
  },
  "changeType": "Preserve",
  "className": "EAttribute",
  "type": "object"
} 
 Target Node:{}
1 4 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@39f1b9f4 (key: documentation, value: If isDerived is true, the value of the attribute is derived from information elsewhere.\\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other information.)"
    ],
    "eModelElement": "isDerived",
    "id": "_ffDHFd6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
}
4 2 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "id": "_ffDHFt6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "If isDerived is true, the value of the attribute is derived from information elsewhere.\\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other informat"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
----------------------------------------------------------------------------------------------------
0 3 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@37d4246a (key: documentation, value: If isDerived is true, the value of the attribute is derived from information elsewhere. The default value is false.)"
    ],
    "eModelElement": "isDerived",
    "id": "_fZD0wN6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_fZD0wd6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "If isDerived is true, the value of the attribute is derived from information elsewhere. The default value is false."
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
1 0 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "changeable": "true",
    "defaultValue": "false",
    "defaultValueLiteral": "false",
    "derived": "false",
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@11e3bff5 (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eAttributeType": "EBoolean",
    "eContainingClass": "Property",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@7d3421e5 (expression: EBoolean)",
    "eType": "EBoolean",
    "iD": "false",
    "id": "_fZD0v96tEei97MD7GK1RmA",
    "lowerBound": "1",
    "many": "false",
    "name": "isDerived",
    "ordered": "false",
    "required": "true",
    "transient": "false",
    "unique": "true",
    "unsettable": "false",
    "upperBound": "1",
    "volatile": "false"
  },
  "changeType": "Preserve",
  "className": "EAttribute",
  "type": "object"
} 
 Target Node:{}
1 4 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@39f1b9f4 (key: documentation, value: If isDerived is true, the value of the attribute is derived from information elsewhere.\\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other information.)"
    ],
    "eModelElement": "isDerived",
    "id": "_ffDHFd6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
}
4 2 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "id": "_ffDHFt6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "If isDerived is true, the value of the attribute is derived from information elsewhere.\\nSpecifies whether the Property is derived, i.e., whether its value or values can be computed from other informat"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
----------------------------------------------------------------------------------------------------
0 3 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2ce72cee (key: documentation, value: Designates a set in which instances of Generalization is considered members.)"
    ],
    "eModelElement": "generalizationSet",
    "id": "_ftf0396tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_ftf04N6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "Designates a set in which instances of Generalization is considered members."
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
2 0 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "changeable": "true",
    "container": "false",
    "containment": "false",
    "derived": "false",
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@1b8b5c30 (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eContainingClass": "Generalization",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@68a4f43e (expression: GeneralizationSet)",
    "eOpposite": "generalization",
    "eReferenceType": "GeneralizationSet",
    "eType": "GeneralizationSet",
    "id": "_ftf03t6tEei97MD7GK1RmA",
    "lowerBound": "0",
    "many": "true",
    "name": "generalizationSet",
    "ordered": "false",
    "required": "false",
    "resolveProxies": "true",
    "transient": "false",
    "unique": "true",
    "unsettable": "false",
    "upperBound": "-1",
    "volatile": "false"
  },
  "changeType": "Preserve",
  "className": "EReference",
  "type": "object"
} 
 Target Node:{}
4 1 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@752cc598 (key: documentation, value: Designates a set in which instances of Generalization is considered members.\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>)"
    ],
    "eModelElement": "generalizationSet",
    "id": "_0oB98N6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_0oB98d6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "Designates a set in which instances of Generalization is considered members.\\n<p>Merged from package UML (URI {@literal http://www.omg.org/spec/UML/20110701}).</p>"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
2 4 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{}
----------------------------------------------------------------------------------------------------
2 0 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@12e72661 (key: documentation, value: A type serves as a constraint on the range of values represented by a typed element. Type is an abstract metaclass.)"
    ],
    "eModelElement": "Type",
    "id": "_ftfzSt6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_ftfzS96tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "A type serves as a constraint on the range of values represented by a typed element. Type is an abstract metaclass."
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
4 2 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "abstract": "true",
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@773f8142 (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eGenericSuperTypes": [
      "org.eclipse.emf.ecore.impl.EGenericTypeImpl@48343d47 (expression: PackageableElement)"
    ],
    "eOperations": [
      "createAssociation",
      "getAssociations",
      "conformsTo"
    ],
    "ePackage": "uml",
    "eStructuralFeatures": [
      "package"
    ],
    "id": "_ftfzSd6tEei97MD7GK1RmA",
    "interface": "false",
    "name": "Type"
  },
  "changeType": "Preserve",
  "className": "EClass",
  "type": "object"
} 
 Target Node:{}
4 3 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@54607028 (key: documentation, value: A type is a named element that is used as the type for a typed element. A type can be contained in a package.\\r\\nA type constrains the values represented by a typed element.)"
    ],
    "eModelElement": "Type",
    "id": "_oBpbbN6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
}
--------------------------------------------------COMPLETION--------------------------------------------------
3 1 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "id": "_oBpbbd6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "A type is a named element that is used as the type for a typed element. A type can be contained in a package.\\r\\nA type constrains the values represented by a typed element."
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
