----------------------------------------------------------------------------------------------------
4 0 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@38f8cae7 (key: documentation, value: The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.\\nredefiningElement.isRedefinitionContextValid(self)\\nresult = (false)\\n<p>From package UML::Classification.</p>)"
    ],
    "eModelElement": "isConsistentWith",
    "id": "_4pe7V96tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_4pe7WN6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; t"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
3 4 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@489e7a8b (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eContainingClass": "RedefinableElement",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@71fcdc86 (expression: Boolean)",
    "eParameters": [
      "redefiningElement"
    ],
    "eType": "Boolean",
    "id": "_ftf0st6tEei97MD7GK1RmA",
    "lowerBound": "1",
    "many": "false",
    "name": "isConsistentWith",
    "ordered": "false",
    "required": "true",
    "unique": "true",
    "upperBound": "1"
  },
  "changeType": "Preserve",
  "className": "EOperation",
  "type": "object"
} 
 Target Node:{}
2 1 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@2bff3905 (key: documentation, value: The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.\\nresult = (false)\\nredefiningElement.isRedefinitionContextValid(self)\\n<p>From package UML::Classification.</p>)"
    ],
    "eModelElement": "isConsistentWith",
    "id": "_1u0gyt6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_1u0gy96tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; t"
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
3 2 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{}
----------------------------------------------------------------------------------------------------
2 0 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@18224a09 (key: documentation, value: Only composite states can have entry or exit pseudostates defined.\\nconnectionPoint->notEmpty() implies isComoposite)"
    ],
    "eModelElement": "composite_states",
    "id": "_wIGncd6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_wIGnct6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "Only composite states can have entry or exit pseudostates defined.\\nconnectionPoint->notEmpty() implies isComoposite"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
1 3 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@3e100da2 (key: documentation, value: Only composite states can have entry or exit pseudostates defined.\\r\\nconnectionPoint->notEmpty() implies isComoposite)"
    ],
    "eModelElement": "composite_states",
    "id": "_ftgc9d6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_ftgc9t6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "Only composite states can have entry or exit pseudostates defined.\\r\\nconnectionPoint->notEmpty() implies isComoposite"
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
4 1 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@2ac4b916 (source: http://www.eclipse.org/emf/2002/GenModel)"
    ],
    "eContainingClass": "State",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@2de17cfb (expression: EBoolean)",
    "eParameters": [
      "diagnostics",
      "context"
    ],
    "eType": "EBoolean",
    "id": "_ftgc9N6tEei97MD7GK1RmA",
    "lowerBound": "0",
    "many": "false",
    "name": "composite_states",
    "ordered": "true",
    "required": "false",
    "unique": "true",
    "upperBound": "1"
  },
  "changeType": "Preserve",
  "className": "EOperation",
  "type": "object"
} 
 Target Node:{}
4 2 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{}
----------------------------------------------------------------------------------------------------
3 1 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@16f76004 (key: documentation, value: An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\\n)"
    ],
    "eModelElement": "entry",
    "id": "_niwkht6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_niwkh96tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any int"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
2 3 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "changeable": "true",
    "container": "false",
    "containment": "true",
    "derived": "false",
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@4b20d48 (source: http://www.eclipse.org/emf/2002/GenModel)",
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@2dbd622a (source: subsets)"
    ],
    "eContainingClass": "State",
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@1fbeae6 (expression: Behavior)",
    "eReferenceType": "Behavior",
    "eType": "Behavior",
    "id": "_ftgdRN6tEei97MD7GK1RmA",
    "lowerBound": "0",
    "many": "false",
    "name": "entry",
    "ordered": "false",
    "required": "false",
    "resolveProxies": "true",
    "transient": "false",
    "unique": "true",
    "unsettable": "false",
    "upperBound": "1",
    "volatile": "false"
  },
  "changeType": "Preserve",
  "className": "EReference",
  "type": "object"
} 
 Target Node:{}
2 4 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@6eeaec72 (key: documentation, value: An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any internal behavior or transitions performed within the state.\\n\\n)"
    ],
    "eModelElement": "entry",
    "id": "_ftgdRd6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
}
4 0 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "id": "_ftgdRt6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "An optional behavior that is executed whenever this state is entered regardless of the transition taken to reach the state. If defined, entry actions are always executed to completion prior to any int"
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
----------------------------------------------------------------------------------------------------
4 0 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@1dac2d78 (key: documentation, value: The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices and transitions and it redefines states and transitions of the redefined region.\\nresult = true)"
    ],
    "eModelElement": "isConsistentWith",
    "id": "_wIGm3d6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Add",
  "className": "EAnnotation",
  "type": "object"
} 
 Target Node:{
  "attributes": {
    "id": "_wIGm3t6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices"
  },
  "changeType": "Add",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
3 4 
 Edge: {
  "changeType": "Add",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {
  "attributes": {
    "eAnnotations": [
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@53ca9e4f (source: http://www.eclipse.org/emf/2002/GenModel)",
      "org.eclipse.emf.ecore.impl.EAnnotationImpl@6b894a00 (source: redefines)"
    ],
    "eGenericType": "org.eclipse.emf.ecore.impl.EGenericTypeImpl@43ac0032 (expression: Boolean)",
    "eParameters": [
      "redefinee"
    ],
    "eType": "Boolean",
    "id": "_ftgbmN6tEei97MD7GK1RmA",
    "lowerBound": "1",
    "many": "false",
    "name": "isConsistentWith",
    "ordered": "false",
    "required": "true",
    "unique": "true",
    "upperBound": "1"
  },
  "changeType": "Preserve",
  "className": "EOperation",
  "type": "object"
} 
 Target Node:{}
3 2 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "eAnnotations",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "details": [
      "org.eclipse.emf.ecore.impl.EStringToStringMapEntryImpl@47070040 (key: documentation, value: The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices and transitions and it redefines states and transitions of the redefined region.\\r\\nresult = true)"
    ],
    "eModelElement": "isConsistentWith",
    "id": "_ftgbmd6tEei97MD7GK1RmA",
    "source": "http://www.eclipse.org/emf/2002/GenModel"
  },
  "changeType": "Remove",
  "className": "EAnnotation",
  "type": "object"
}
--------------------------------------------------COMPLETION--------------------------------------------------
2 1 
 Edge: {
  "changeType": "Remove",
  "referenceTypeName": "details",
  "type": "reference"
} 
 Source Node: {} 
 Target Node:{
  "attributes": {
    "id": "_ftgbmt6tEei97MD7GK1RmA",
    "key": "documentation",
    "value": "The query isConsistentWith() specifies that a redefining region is consistent with a redefined region provided that the redefining region is an extension of the redefined region, i.e. it adds vertices"
  },
  "changeType": "Remove",
  "className": "EStringToStringMapEntry",
  "type": "object"
}
